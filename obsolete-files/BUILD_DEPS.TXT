This document lists build dependencies and explains use of the ./build_* scripts:

!!! IMPORTANT !!! We use cmake >= cmake 3 which supports the "target_compile_options" directive


* Debian packages ford 64bit systems. Input parameters - 1) release "name", i.e. 2.1
1) First ensure you have build-dependencies by running the getdeps_debian script and following in-terminal instructions
2) Then run the below command for your build. (the <meta> flag allows building "meta-packages" like mcstas-suite-python etc.)
   build_debs_mcstas <release name> <meta>
   build_debs_mcxtrace <release name> <meta>


* Windows packages for 64bit system. Built on Debian 64bit!!
1) First ensure you have build-dependencies by running the getdeps_win64 script and following in-terminal instructions
2) Then run the below command for your build. (the <meta> flag allows building "meta-packages" executables using inno setup)
   build_windows_mcstas  <release name> <meta> 
   build_windows_mcxtrace  <release name> <meta> 


* CentOS packages for 64bit systems. Input parameters - 1) release "name", i.e. 2.1
1) First ensure you have build-dependencies by running the getdeps_centos7 script and following in-terminal instructions
2) Then run the below command for your build. (the <meta> flag allows building "meta-packages" rpm packages + a miniconda python setup)
   build_rpms_mcstas <release name>
   build_rpms_mcxtrace <release name>

* "Generic Unix" 64bit tgz packages. Input parameters - 1) release "name", i.e. 2.1
1) First ensure you have build-dependencies by running on of the relevant getdeps_ scripts and following in-terminal instructions
2) Then run the below command for your build (the <meta> flag allows building TAR-based "meta-packages")
   build_src_bin_mcstas <release name>
   build_src_bin_mcxtrace <release name>


* Mac OS X packages for 64bit systems. Input parameters - 1) release "name", i.e. 2.1 2) flag to indicate if we are building a 'meta' package
1) First ensure you have build-dependencies by running the getdeps_mac script and following in-terminal instructions
2) Then run the below command for your build (the <keep> flag allows to keep the built application bundle in /Applications and not do an arcive in dist/)
   build_macos_mcstas <release name> <keep>
   build_macos_mcxtrace <release name> <keep>

