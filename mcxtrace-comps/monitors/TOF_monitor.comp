/*******************************************************************************
*
* McXtrace, X-ray tracing package
*         Copyright 1997-2014, All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
*
* Component: TOF_monitor
*
* %I
* Written by: Erik B Knudsen
* Date: Aug. 2014
* Version: $Revision$
* Origin: DTU Physics
*
* Rectangular Time-of-flight monitor.
*
* %D
* A rectangular monitor which records instensity as a funtion of time of flight.
* More precisely it bins photon rays according to the the state parameter time, t.
*
* %P
* INPUT PARAMETERS:
*
* xmin: [m]             Lower x bound of detector opening
* xmax: [m]             Upper x bound of detector opening
* ymin: [m]             Lower y bound of detector opening
* ymax: [m]             Upper y bound of detector opening
* xwidth: [m]           Width of detector. Overrides xmin, xmax
* yheight: [m]          Height of detector. Overrides ymin, ymax
* nt: [1]               Number of time bins
* dt: [mu-s]            Length of each time bin
* tmin: [mu-s]          Lower time limit 
* tmax: [mu-s]          Upper time limit
* filename: [string]    Name of file in which to store the detector image
* restore_xray: [1]     If set, the monitor does not influence the xray state
* nowritefile: [1]      If set, monitor will skip writing to disk
*
* OUTPUT PARAMETERS:
*
* TOF_N: []   Array of xray counts
* TOF_p: []   Array of xray weight counts
* TOF_p2: []  Array of second moments
*
* %E
*******************************************************************************/

DEFINE COMPONENT TOF_monitor
DEFINITION PARAMETERS (nt=20)
SETTING PARAMETERS (string filename=0, xmin=-0.05, xmax=0.05, ymin=-0.05, ymax=0.05,
    xwidth=0, yheight=0, tmin=0, tmax=0, dt=1.0, restore_xray=0, int nowritefile=0)
OUTPUT PARAMETERS (TOF_N, TOF_p, TOF_p2, t_min, t_max, delta_t)

DECLARE
%{
    double TOF_N[nt];
    double TOF_p[nt];
    double TOF_p2[nt];
    double t_min, t_max, delta_t;
%}
INITIALIZE
%{
    int i;

    if (xwidth  > 0) { xmax = xwidth/2;  xmin = -xmax; }
    if (yheight > 0) { ymax = yheight/2; ymin = -ymax; }

    if ((xmin >= xmax) || (ymin >= ymax)) {
      fprintf(stderr,"ERROR (%s): Null detection area! Aborting.\n",NAME_CURRENT_COMP);
      exit(-1);
    }

    for (i=0; i<nt; i++)
    {
      TOF_N[i] = 0;
      TOF_p[i] = 0;
      TOF_p2[i] = 0;
    }
    if (tmax!=0)
    {
      t_max=tmax;
      t_min=tmin;
      delta_t=(t_max-t_min)/nt;
    }
    else
    {
     delta_t=dt;
     t_min=0;
     t_max=nt*dt+tmin;
    }
%}

TRACE
%{
    int i;

    PROP_Z0;
    if (x>xmin && x<xmax && y>ymin && y<ymax)
    { 
      i = floor((t-t_min)/delta_t);              /* Bin number */
      if(i >= 0 && i < nt) {
        TOF_N[i]++;
        TOF_p[i] += p;
        TOF_p2[i] += p*p;
        SCATTER;
      }
    }
    if (restore_xray) {
      RESTORE_XRAY(INDEX_CURRENT_COMP, x, y, z, kx, ky, kz, phi, t, Ex, Ey, Ez, p);
    }
%}

SAVE
%{
  if (!nowritefile) {
    DETECTOR_OUT_1D(
        "Time-of-flight monitor",
        "Time-of-flight [s]",
        "Intensity",
        "t", t_min, t_max, nt,
        &TOF_N[0],&TOF_p[0],&TOF_p2[0],
        filename);
  }
%}

MCDISPLAY
%{
  
  multiline(5, (double)xmin, (double)ymin, 0.0,
               (double)xmax, (double)ymin, 0.0,
               (double)xmax, (double)ymax, 0.0,
               (double)xmin, (double)ymax, 0.0,
               (double)xmin, (double)ymin, 0.0);
%}

END
