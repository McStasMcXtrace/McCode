/*******************************************************************************
*
* McXtrace, X-ray tracing package
*         Copyright 1997-2014, All rights reserved
*         DTU Physics, Denmark
*         NBI, Denmark
*
* Component: Detector_pn.comp
*
* %I
* Written by: Maria Thomsen (mariath@fys.ku.dk)
* Date: Jan 24, 2011
* Version: $Revision: 1.0$
* Origin: NBI, KU
*
* Block of a attenuating material
* 
* %D
* A scintillator detector model taking photoabsorption efficiency into account. As such it consitututes a
* more physical version of the PSD_monitor. Only direct absorption is taken into account.
*
* %P
* INPUT PARAMETERS
*
* xwidth:  [m]  Width of detection area.
* yheight: [m]  Height of detection area.
* zdepth:  [m]  Thickness of scintillator.
* material_datafile: [string] file where the material parameters for the scintillator may be found. Format is similar to what may be found off the NISP website.
* nx:      [ ]  Number of pixel columns.
* ny:      [ ]  Number of pixel rows.
* filename: [string]  Name of file in which to store the detector image.
* abs_column: [ ]  Column in the material datafile which contains the linear absorption coefficient.
* restore_xray: [ ]  If set, the monitor does not influence the xray state.
*
* OUTPUT PARAMETERS:
*
* PSD_N:    Array of xray counts
* PSD_p:    Array of xray weight counts
* PSD_p2:   Array of second moments
* %E
*******************************************************************************/
DEFINE COMPONENT Detector_pn
DEFINITION PARAMETERS (nx=90, ny=90, string filename=0, restore_xray=0)
SETTING PARAMETERS (string material_datafile="Be.txt",xwidth,yheight,zdepth, int abs_column=1)
OUTPUT PARAMETERS (A_t, rho, Z, PSD_N, PSD_p, PSD_p2, T)
/*STATE PARAMETERS (x,y,z,kx,ky,kz,phi,t,Ex,Ey,Ez,p)*/

SHARE
%{
  %include "read_table-lib"
%}

DECLARE
%{
  double xmax,xmin,ymax,ymin;
  int Z;
  double rho,A_t;
  t_Table T;

  double PSD_N[nx][ny];
  double PSD_p[nx][ny];
  double PSD_p2[nx][ny];
%}

INITIALIZE
%{
  int status=0;
 
  if(!xwidth || !yheight){
    fprintf(stderr,"ERROR: (%s): Detector has zero effective area\n",NAME_CURRENT_COMP);
    exit(-1);
  }
  xmax=xwidth/2.0;
  xmin=-xmax;
  ymax=yheight/2.0;
  ymin=-ymax;

  if ( (status=Table_Read(&T,material_datafile,0))==-1){
    fprintf(stderr,"ERROR: (%s): Could not parse file \"%s\" in COMP %s\n",NAME_CURRENT_COMP,material_datafile);
    exit(-1);
  }
  char **header_parsed;
  header_parsed=Table_ParseHeader(T.header,"Z","A[r]","rho","sigma[a]");
  if (!A_t) A_t=strtod(header_parsed[1],NULL);
  if (!Z) Z=strtol(header_parsed[0],NULL,10);
  if (!rho) rho=strtod(header_parsed[2],NULL);
  
  if (xwidth  > 0) { xmax = xwidth/2;  xmin = -xmax; }
  if (yheight > 0) { ymax = yheight/2; ymin = -ymax; }

  if ((xmin >= xmax) || (ymin >= ymax)) {
    printf("ERROR: (%s) PSD_monitor: %s: Null detection area! Exiting.\n", NAME_CURRENT_COMP);
    exit(-1);
  }
  int i;
  for (i=0; i<nx; i++){
    memset(PSD_N[i],0,sizeof(double)*ny);
    memset(PSD_p[i],0,sizeof(double)*ny);
    memset(PSD_p2[i],0,sizeof(double)*ny);
  }
%}

TRACE
%{
  double alpha,e,k,mu;
  double l0,l1;
  int i,j;
  if (box_intersect(&l0,&l1,x,y,z,kx,ky,kz,xwidth,yheight,zdepth)){
    PROP_DL(l0);
    /*table interpolation*/
    k=sqrt(kx*kx+ky*ky+kz*kz);
    e=k*K2E;
    mu=Table_Value(T,e,abs_column)*1e2*rho;

    l1-=l0; 
    p*=(1-exp(-mu*l1));
    //photon detected in surface pixel  
    if (x>xmin && x<xmax && y>ymin && y<ymax){
      i = floor((x - xmin)*nx/(xmax - xmin));
      j = floor((y - ymin)*ny/(ymax - ymin));
      PSD_N[i][j]++;
      PSD_p[i][j] += p;
      PSD_p2[i][j] += p*p;
      SCATTER;
    }
    if (restore_xray) {
      RESTORE_XRAY(INDEX_CURRENT_COMP, x, y, z, kx, ky, kz, phi, t, Ex, Ey, Ez, p);
    }
  }
%}

SAVE
  %{
    DETECTOR_OUT_2D(
        "Detector_pn",
        "X position [cm]",
        "Y position [cm]",
        xmin*100.0, xmax*100.0, ymin*100.0, ymax*100.0,
        nx, ny,
        &PSD_N[0][0],&PSD_p[0][0],&PSD_p2[0][0],
        filename);
  %}

FINALLY
%{
  Table_Free(&T);
%}

MCDISPLAY
%{
  
  box(0,0,0,xwidth,yheight,zdepth);
%}
END
