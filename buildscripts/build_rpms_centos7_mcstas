#!/bin/sh
export CMAKE_BUILD_PARALLEL_LEVEL=${CMAKE_BUILD_PARALLEL_LEVEL:-$(python3 -c "import os;print(os.cpu_count())")}

if [ "x$1" = "x" ]; then
    # No arguments
    echo Please provide one argument,e.g : $0 2.0
    exit 1;
fi

# Ensure our 3rd party modules are in place and updated
THIRDPARTY=`ls 3rdparty | grep -v patches`
cd 3rdparty

cd -

./3rdparty/sync.sh


for MODULE in `echo $THIRDPARTY`
do
    if [ -d "3rdparty/patches/${MODULE}" ]; then
	echo Making McCode cmake modules available for $MODULE
        rsync -avz cmake/ 3rdparty/${MODULE}/cmake
	echo Applying McCode patches to 3rdparty/${MODULE}
	cp -rp 3rdparty/patches/${MODULE}/* 3rdparty/${MODULE}/
    fi
done

WORK=`pwd`

# 64-bit
./mkdist mcstas $1 "" "" rpm64 "" -- rpm
./mkdist mcstas-comps $1 "" "" rpm64 "" -- rpm
./mkdist mcstas-tools-perl $1 tools/Legacy-Perl/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-perl-cmdline $1 tools/Legacy-Perl-cmdline/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-matlab-mcplot $1 tools/matlab/mcplot/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-matlab-mcdisplay $1 tools/matlab/mcdisplay/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mcplot-pyqtgraph $1 tools/Python/mcplot/pyqtgraph/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mcplot-matplotlib $1 tools/Python/mcplot/matplotlib/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mcplot-svg $1 tools/Python/mcplot/svg/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mcrun $1 tools/Python/mcrun/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mcresplot $1 tools/Python/mcresplot/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mcgui $1 tools/Python/mcgui/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mccodelib $1 tools/Python/mccodelib/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mcdisplay-webgl $1 tools/Python/mcdisplay/webgl/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mcdisplay-pyqtgraph $1 tools/Python/mcdisplay/pyqtgraph/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mcdoc $1 tools/Python/mcdoc/ "" rpm64 "" -- rpm
./mkdist mcstas-clusterscripts $1 tools/cluster-scripts/ "" rpm64 "" -- rpm
./mkdist mcstas-manuals $1 docpkg/manuals/mcstas/ "" rpm64 "" -- rpm
./mkdist mcstas-tools-python-mcdisplay-mantid $1 tools/Python/mcdisplay/mantid_xml/ "" rpm64 "" -- rpm
./mkdist mcstas-mcpl $1 3rdparty/mcpl-package "" rpm64 "" -- rpm
./mkdist mcstas-ncrystal $1 3rdparty/ncrystal-package "" rpm64 "" -- rpm

#build metapackages?
if [ "x$2" != "x" ]; then
  ./support/rpm/miniconda3/prepare.sh $1
  ./mkdist mcstas-miniconda3 $1 support/rpm/miniconda3/ "" rpm64 "" -- rpm
  cd meta-pkgs/rpm

  for controlfile in `ls mcstas-*.spec`
  do
    sed -i.bak s/@VERSION@/${1}/g $controlfile
    rpmbuild -bb --target x86_64 $controlfile
    mv $controlfile.bak $controlfile
  done
  mv $HOME/rpmbuild/RPMS/x86_64/mcstas-suite-*rpm $WORK/dist
  cp $WORK/INSTALL-McStas-3.x/Linux/centos/README.md $WORK/dist
fi
