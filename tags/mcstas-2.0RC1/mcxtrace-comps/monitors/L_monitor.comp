/*******************************************************************************
*
* McXtrace, X-ray tracing package
*         Copyright (C), All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
*
* Component: L_monitor
*
* %I
* Written by: Kristian Nielsen and Kim Lefmann
* Modified for X-ray use by Erik Knudsen
* Date: June 22, 2009
* Version: $Revision: $
* Origin: Risoe
* Release: McXtrace 0.1
*
* Wavelength-sensitive monitor.
*
* %D
* A square single monitor that measures the wavelength of the incoming
* xray.
*
* Example: L_monitor(xmin=-0.1, xmax=0.1, ymin=-0.1, ymax=0.1,
*           nL=20, filename="Output.L", Lmin=0.1, Lmax=1)
*
* %P
* INPUT PARAMETERS:
*
* xmin:     Lower x bound of detector opening (m)
* xmax:     Upper x bound of detector opening (m)
* ymin:     Lower y bound of detector opening (m)
* ymax:     Upper y bound of detector opening (m)
* xwidth:   Width of detector. Overrides xmin,xmax. (m)
* yheight:  Height of detector. Overrides ymin,ymax. (m)
* Lmin:     Minimum wavelength to detect (AA)
* Lmax:     Maximum wavelength to detect (AA)
* nL:       Number of wavelength channels (1)
* filename: Name of file in which to store the detector image (text)
* restore_xray: If set, the monitor does not influence the x-ray state (1)
*
* OUTPUT PARAMETERS:
*
* L_N:      Array of xray counts
* L_p:      Array of xray weight counts
* L_p2:     Array of second moments
*
* %E
*******************************************************************************/

DEFINE COMPONENT L_monitor
DEFINITION PARAMETERS (nL=20, string filename=0)
SETTING PARAMETERS (xmin=-0.05, xmax=0.05, ymin=-0.05, ymax=0.05, 
  xwidth=0, yheight=0, Lmin, Lmax, restore_xray=0)
OUTPUT PARAMETERS (L_N, L_p, L_p2)
/* X-ray parameters: (x,y,z,kx,ky,kz,phi,t,Ex,Ey,Ez,p) */ 
DECLARE
  %{
    double L_N[nL];
    double L_p[nL], L_p2[nL];
  %}
INITIALIZE
  %{
    int i;

    if (xwidth  > 0) { xmax = xwidth/2;  xmin = -xmax; }
    if (yheight > 0) { ymax = yheight/2; ymin = -ymax; }

    if ((xmin >= xmax) || (ymin >= ymax)) {
            printf("L_monitor: %s: Null detection area !\n"
                   "ERROR      (xwidth,yheight,xmin,xmax,ymin,ymax). Exiting",
           NAME_CURRENT_COMP);
      exit(0);
    }

    for (i=0; i<nL; i++)
    {
      L_N[i] = 0;
      L_p[i] = 0;
      L_p2[i] = 0;
    }
  %}
TRACE
  %{
    int i;
    double L;

    PROP_Z0;
    if (x>xmin && x<xmax && y>ymin && y<ymax)
    {
      L = 2*PI/sqrt(kx*kx + ky*ky + kz*kz);
      i = floor((L-Lmin)*nL/(Lmax-Lmin));
      if(i >= 0 && i < nL)
      {
        L_N[i]++;
        L_p[i] += p;
        L_p2[i] += p*p;
        SCATTER;
      }
    } 
    if (restore_xray) {
      RESTORE_XRAY(INDEX_CURRENT_COMP, x, y, z, kx, ky, kz, phi, t, Ex, Ey, Ez, p);
    }
  %}
SAVE
  %{
    DETECTOR_OUT_1D(
        "Wavelength monitor",
        "Wavelength [AA]",
        "Intensity",
        "L", Lmin, Lmax, nL,
        &L_N[0],&L_p[0],&L_p2[0],
        filename);
  %}

MCDISPLAY
%{
  magnify("xy");
  multiline(5, (double)xmin, (double)ymin, 0.0,
               (double)xmax, (double)ymin, 0.0,
               (double)xmax, (double)ymax, 0.0,
               (double)xmin, (double)ymax, 0.0,
               (double)xmin, (double)ymin, 0.0);
%}

END
