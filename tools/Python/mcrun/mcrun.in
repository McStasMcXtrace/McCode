#!/bin/sh
# Wrapper script for @P@run-py

# First ensure that we follow symlink if needed
LINK=`readlink $0`

# Am I a symlink?
if [ "x$LINK" != "x" ]; then
    LIB=`dirname $LINK`
else
    LIB=`dirname $0`
fi
UNAME=`uname -s`
if [[ ${UNAME} = Darwin* ]]; then
    OSXVER=`sw_vers -productVersion|cut -f 1 -d.`
    # Check if we are on macos 10.x or 11.x
    if [ "$OSXVER" == "10" ];
    then
	PATH=$LIB/../miniconda3/bin:$PATH
    fi
    # Check if we are in / - in that case cd to $HOME
    PW==`pwd`
    if [[ ${PWD} = / ]]; then
	cd $HOME
    fi
else
    PATH=$LIB/../miniconda3/bin:$PATH
fi

# Check if we are running with miniconda-provided python libs and set PYTHONPATH accordingly
if [ -d "$LIB/../miniconda3" ]; then
    PYVER=`$LIB/../miniconda3/bin/python3 --version | cut -f 2 -d\  | cut -f 1-2 -d.`
    export PYTHONPATH=$LIB/../miniconda3/lib:$LIB/../miniconda3/lib/python$PYVER/site-packages
fi

LIB="$LIB/../tools/Python/@P@run"
TOOL="@P@run"
VERS="@MCCODE_VERSION@"


canrun() {
    if ! [ -x ${LIB}/${TOOL}.py ]; then
        exit 127;
    fi

    modules="yaml"
    cmd=""
    for name in ${modules}; do
        cmd="${cmd}import ${name}; "
    done
    python3 -c "${cmd}"
}

if ( canrun ); then
    python3 ${LIB}/${TOOL}.py $*
else
    @FLAVOR@_errmsg Failed to run Python ${TOOL} - permissions or missing dependencies\?
fi
