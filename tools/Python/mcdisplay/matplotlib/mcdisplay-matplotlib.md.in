% @MCCODE_PREFIX@DISPLAY-MATPLOTLIB(1)
% @FLAVOR_UPPER@ @MCCODE_PARTICLE@ Ray Tracing Team
% @MCCODE_DATE@

# NAME

**@MCCODE_PREFIX@display-matplotlib** - @MCCODE_NAME@ Graphical display of simulations using Matplotlib

# SYNOPSIS

**@MCCODE_PREFIX@display-matplotlib** [-h] INSTR name=value...

# DESCRIPTION

The **@MCCODE_PREFIX@display-matplotlib** front-end is a graphical debugging tool. It presents a
schematic drawing of the instrument definition, showing the position of the
components and the paths of the simulated @MCCODE_PARTICLE@s through the instrument. It is
thus very useful for debugging a simulation, for example to spot components in
the wrong position or to find out where @MCCODE_PARTICLE@s are getting lost. To use the
**@MCCODE_PREFIX@display-matplotlib** front-end with a simulation, run it as follows: 
`@MCCODE_PREFIX@display-matplotlib INSTR args...` where INSTR is the name of either the instrument 
source `INSTR.instr` or the simulation program `INSTR.out` generated with
@MCCODE_NAME@, and `args` are the normal command line arguments for the simulation,
as for *@MCCODE_PREFIX@run*. The `-h` option will list valid options.

The default plotting backend is `mxdisplay-pyqtgraph`, but there exists a number of additional plotters such as `mxdisplay-matplotlib`, `mxdisplay-webgl-classic` (using WebGL), `mxdisplay-webgl` (using WebGL and NodeJS), `mxdisplay-matlab` (using Matlab or Octave).
This is the Matplotlib plotting tool.

# OPTIONS

**INSTR**
:   Displays the given McCode 3D model with its defaults/current parameters.

**name1=value1 ...**
:   Displays the given McCode model with given parameters.

**-n N, --ncount N**
:   Number of particles to simulate

# FILES

/usr/share/@FLAVOR@/tools/Python
/usr/share/@FLAVOR@/tools/Python/mccodelib/mccode_config.json
~/.@FLAVOR@/mccode_config.json
http://www.@FLAVOR@.org

# EXAMPLES

Display the *Test_SX* example (Single crystal diffraction)
:   - `@MCCODE_PREFIX@display-matplotlib Test_SX.instr -n 1e2 TTH=13.4`

# AUTHORS

@MCCODE_NAME@ Team (@FLAVOR@.org)

# SEE ALSO

@FLAVOR@(1), @MCCODE_PREFIX@doc(1), @MCCODE_PREFIX@plot(1), @MCCODE_PREFIX@run(1), @MCCODE_PREFIX@gui(1), @MCCODE_PREFIX@display(1)

