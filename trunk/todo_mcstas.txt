DONE/TODO/FUTURE list for next release of McStas (1.6)
Oct 1st, 2002 McStas 1.6.3f dev

Compiled by PW/EF from user wishes and different notes.

Tasks have been divided into 4 categories:

DONE   - reqd. task, done or very simple
TODO   - reqd. task, requires substantial work
FUTURE - needed, wanted, but postponed for later release
USER   - work for McStas user base more than developers

*******************************************
DONE: 

Kernel:  OK

Runtime:
+ Ncount is 0/ncount when starting mcsiminfo_init()

Components:
+ Check Origin/Release line/add example: release/geography
+ change all monitors Nnum to double + Finally-> Save...
+ Prepare all for polarisation - done.
+ ESS moderators - done.
+ Monitor_nD, replace p by other phys. quantity, easy task.
+ Renaming of components (optics/samples) (e.g. Guide_*)
+ Monochromator, reflectivity curve from file. renormalisation by r0, simple.


Instruments:
- Intercomparison instruments H8, IRIS, RITA-II, IN12, TAS1, IN14,...

Tools: (GUI, plotting, running etc.)
- Automated optimization -> Optimisation (LM?) - great complexity... 
  Manual example?

Documentation:
- "Switch/Skip" components (Component group ABSORB GROUP COMPONENT - can be
  done,	example in manual?)
- "Share" components (done, sharing "shareable" parts - lib style)
- Logging event support (Can be done, Monitor_nd - example in manual?)
- "Split" neutrons (see switch/skip + extend feature - example in manual)
- Framework for table input ?!? (If about parameter input, should be
  doable, through defines)
- Compile runtime+shared functions - through example in manual.

Community related:

*******************************************
TODO:

Kernel:

+ %include keyword for "inclusion" of components in components... (To
  think about), done. :) -> component_shares/My_function_name_include 
+ if no .c/.h, embed .h, and then .c if runtime, else display message
  for .o link  
- JUMP : goto comp label with current coords. May restore neutron before,
  depending on specific requirements. In cogen, define labels 'StartComp:' for 
  all comp instances. group will use that to go to next 
  labels: absorbAll, absorbComp
  EndComp is easier (in the same component, thus can go there to skip, 
    without knowing the name of the next one).
- check max number of components in instrument (500 ?). 
  No limit -> see repeat comp as JUMP (with or without rotation/translation)
- when no define params, make mcComp_Declare/Trace functions...
- look at all defines: can be changed to settings ? NO, optimize function calls (share)
+ enable char parameters  : limited to 1024 char buffer. MC_CHAR_BUF_SIZE ?
+ SAVE section for intermediate savings
  
Runtime:
- Gravity (functions defined, only used in gravity guide - merge
  propagation routines, easy task)
+ save monitor data in different formats: 
    McStas ascii, NeXus XML, HTML, Scilab
    binary float, binary double
    NeXus,  mcdirname gives internal NeXus path (including entry name), 
            file gives NeXus file name
    Vitess, 
    FITS  
      http://heasarc.gsfc.nasa.gov/docs/software/fitsio/fitsio.html
      http://archive.eso.org/saft/ (qfits)
    enable saving in code after checking existence of libraries or flags
- Retrieve old monitor data, read from file by Virtual_input ->
  mcstas_r. not so easy -> NeXus -> runtime
  utility to identify which file is the right one ! read header for all, 
  look for comp instance name. Check file extension. Find field in header
+ rand_target_rect, modification according to formula.    
? move extend_list to external lib ? used in Powder_filter.comp, Filter_powder.comp, Single_crystal.comp, the Manual.
- 3d data files saved linearly (2d), and rearranging as 3d after.

Components:
- Virtual_output - should be written, macro for calling Monitor_nD? -
  See ALIAS in kernel section.
+ Virtual_input: use Table_Read, corrected repeat count/set_ncount  ok.
- Sort components in categories, official, contrib, obsolete
- unused variable (cc -Wall)
- verbose mode for complex components
- reduce number of input parameters (use options string ?)   

- Check fluxes / absolute fluxes - provide experimental data +
  instrument definition 
- Powder component take input, written, should be tested.
  2 lines, n lines.
- Sample for SANS - existing components (single xtal ex.), other
  parms, powder to be checked.
- Bender, to be tested check for absolute fluxes, as compared to a
  number of linear guides.
- Filter_powder.comp, Single_crystal.comp : use Table_Read, extend_list  

- $Log: not supported by cvs2svn $ - cvs revision no, etc. for both McStas kernel / lib,
  automated using cvs?. Origin indicates research institution,
  McVersion required McStas Version

Instruments:
- Component test modules
- Moved to lib/examples/H8,... including instrument files + data +
  test results from "stable version" incl. test-script.

Tools: (GUI, plotting, running etc.)
- mcplot must rescale to 100 % simulation in case of visualisation of interrupted simulation. Only for intensity monitors.
- Improve GUI - scilab.
- Status monitor support (Tool to be written - script) - access pid, daemon.
- html / png / page generation. (perhaps scilab based?) - mcplot?
- mcdisplay date checking for recompilation, through mcrun -n 1
- export in several formats, ps, gif (scilab), png (Imagemagick when available)
- mcdisplay show help info when no arguments (l. 517)
- mcdoc: changed to show instruments also.

Documentation:
- FAQ list in manual
- Examples for group, share etc.
- Component manual info should be included, user auth. for contrib.
- valid latex2e code. (latex2html, pdftex etc.)
- doc directory.

Community related:
- Developers list mcstas-devel@risoe.dk
- License problems? Inclusion of GPL'ed mersene twister etc, png. etc.

*******************************************
FUTURE:

Kernel:
- Option to trace background events - no, perhaps absorbed neutrons
  instead?
- Loop/Additive groups - very complex, in principle can be done within each 
  component -> see JUMP
- MPI - pvm?
- Nexus - function calls (partially written)

Runtime:
- Functions for Nexus (to be written)

Components:
- Inelastic samples, inclusion of already written components for this?
  Test reqd.
- Sample for amorphous materials, (inelastic?) structure from asympt. 
  apx. from powder sample.

Instruments:

Tools: (GUI, plotting, running etc.)
- Analyzer bank generator (RITA2 type setup), script
- mcdisplay 3D?
- BatchMaker? Ask author to contibute

Documentation:

Community related:
- More user communication on ongoing projects.
  (Either a web page or a monthly reminder to mailing list)
- Intercomparison info on web page
- Add new components (RISØ, Th. Hansen,...)
(- Instrument archive facility on web page)
- Contact NIMB for publications - ("recommended journal" on web)
- Agitate neutron software -> ESS 
- SCANS extenstion
- v 2.0 release

*******************************************
USER:

Components:
- Monochromator w/ parasitic Bragg channel - not too complicated.
- Andrew Garret components.

Instruments:

Tools: (GUI, plotting, running etc.)
- BatchMaker? Ask author to contibute

Documentation:

Community related:



MCSTAS=/home/farhi/local/mcstas/mcstas-1.6.3/lib    

deff('p=mcplot(d,p)',['S=size(d.data);','if max(S),','xbasc(p);','if min(S)==1,l=d.xlimits+'' 0 0''; else l=d.xylimits; end','execstr(''l=[''+l+'']''); f=round(log10(max(d.data))); d.data=d.data/10^f;','x=linspace(l(1),l(2),S(1)); y=linspace(l(3),l(4),S(2));','if min(S)==1, plot(x,y,d.data);','else plot3d1(x,y,d.data); end','xtitle([d.title+'' [*10^''+string(f)+'']''],d.xlabel,d.ylabel);','xname(d.filename+'':''+d.title);p=p+1;end']);

c=[linspace(0,1,15), ones(1,15), linspace(1,0,15)];
c1=[(1:19)*0,c ];
c2=[(1:8)*0,c,(1:11)*0];
c3=[c(6:$), (1:24)*0];
jet=[c1' c2' c3'];
xset('colormap',jet)
