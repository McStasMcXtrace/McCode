/*******************************************************************************
*         McXtrace instrument definition URL=http://www.mcxtrace.org
*
* Instrument: TestSAXS
*
* %Identification
* Written by: Martin Cramer Pedersen (mcpe@nbi.dk) and SÃ¸ren Kynde (kynde@nbi.dk)
* Date: October 29th, 2012
* Version: $Revision$
* Origin: KU-Science
* Release: McXtrace 1.0
* %INSTRUMENT_SITE: None
*
* %Description
* Toy model used for testing various sample components for solution-SAXS.
*
* %Parameters
* DistanceFromSourceToFirstPinhole	: [m]	Distance to first pinhole from 
*											source.
* DistanceFromSourceToSecondPinhole : [m] 	Distance to second pinhole - used
*											for focussing rays.
* DistanceFromSecondPinholeToSample	: [m]	Collimation length.
* DistanceFromSampleToDetector      : [m]	Sample-detector-distance.
* RadiusOfDetector			        : [m]	Radius of the circular detector.
* Lambda         					: [AA] 	Wavelength of the rays emitted from 
*											source.
* DLambda							: []	Relative deviation of wavelength
*											of the rays emitted from source.
*
* %End
*******************************************************************************/

DEFINE INSTRUMENT TestSAXS(
	DistanceFromSourceToFirstPinhole = 0.05,
	DistanceFromSourceToSecondPinhole = 0.7,
	DistanceFromSecondPinholeToSample = 0.6,
	DistanceFromSampleToDetector = 0.48,
	RadiusOfDetector = 0.1,
	Lambda = 1.54,
	DLambda = 0.01
)


DECLARE
%{
%}


INITIALIZE
%{
%}


TRACE
COMPONENT Origin = Progress_bar(
)
  AT (0, 0, 0) ABSOLUTE


COMPONENT Source = Source_flat(
	xwidth = 0.0005,
	yheight = 0.0005,
	dist = DistanceFromSourceToSecondPinhole, 
	focus_yh = 0.0003, 
	focus_xw = 0.0003,
	lambda0 = Lambda, 
	dlambda = DLambda * Lambda
)
  AT (0, 0, 0) RELATIVE Origin


COMPONENT FirstPinhole = Slit(
	radius = 0.0002
)
  AT (0, 0, DistanceFromSourceToFirstPinhole) RELATIVE Source


COMPONENT SecondPinhole = Slit(
	radius = 0.00015
)
  AT (0, 0, DistanceFromSourceToSecondPinhole) RELATIVE Source

/*COMPONENT Sample = SAXSSpheres(
	xwidth = 0.01,
	yheight = 0.01, 
	zdepth = 0.01,
	R = 50.0,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


/*COMPONENT Sample = SAXSShells(
	xwidth = 0.01,
	yheight = 0.01, 
	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector,
	R = 50.0, 
	Thickness = 20.0
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


/*COMPONENT Sample = SAXSCylinders(
	xwidth = 0.01,
	yheight = 0.01,
	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


/*COMPONENT Sample = SAXSEllipticCylinders(
	xwidth = 0.01,
	yheight = 0.01,
	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


/*COMPONENT Sample = SAXSLiposomes(
	xwidth = 0.01,
	yheight = 0.01,
	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


/*COMPONENT Sample = SAXSNanodiscs(
	xwidth = 0.01,
	yheight = 0.01,
	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


/*COMPONENT Sample = SAXSNanodiscsWithTags(
	xwidth = 0.01,
	yheight = 0.01,
	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


/*COMPONENT Sample = PDB(
	xwidth = 0.01,
	yheight = 0.01,
	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector,
	//PDBFilepath = "1EV3.pdb"
	//PDBFilepath = "6LYZ.pdb"
	PDBFilepath = "3V03.pdb"
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


/*COMPONENT Sample = Curve(
	FileWithCurve = "Curve.mcp",
	xwidth = 0.01,
	yheight = 0.01,
	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


/*COMPONENT Sample = SAXSNanodiscsFast(
	xwidth = 0.01,
	yheight = 0.01,
	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


COMPONENT Sample = SAXSNanodiscsWithTagsFast(
	xwidth = 0.01,
	yheight = 0.01,
//	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole


/*COMPONENT Sample = PDBFast(
	xwidth = 0.01,
	yheight = 0.01,
	zdepth = 0.01,
	SampleToDetectorDistance = DistanceFromSampleToDetector,
	DetectorRadius = RadiusOfDetector,
	PDBFilepath = "6LYZ.pdb",
    qMax = 0.9
)
  AT(0, 0, DistanceFromSampleToDetector) RELATIVE SecondPinhole*/


COMPONENT Beamstop = Beamstop(
	radius = 0.001
)
  AT (0, 0, DistanceFromSampleToDetector - 0.000001) RELATIVE Sample


COMPONENT Monitor = PSD_monitor(
	filename = "PSDMonitor",
	xwidth = 2.0 * RadiusOfDetector / sqrt(2.0), 
	//xwidth = 2.0 * RadiusOfDetector, 
	yheight = 2.0 * RadiusOfDetector / sqrt(2.0),
	//yheight = 2.0 * RadiusOfDetector,
	nx = 200,
	ny = 200,
	restore_xray = 1
)
  AT (0, 0, 0.000001) RELATIVE Beamstop


COMPONENT QMonitor = SAXSQMonitor(
	RadiusDetector = RadiusOfDetector,
	DistanceFromSample = DistanceFromSampleToDetector,
	LambdaMin = Lambda,
	Lambda0 = Lambda,
	NumberOfBins = 2000
)
  AT (0, 0, 0.000001000000001) RELATIVE Beamstop


FINALLY
%{
%}

END

