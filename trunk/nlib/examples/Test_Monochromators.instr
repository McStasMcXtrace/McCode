/*****************************************************************************
*         McStas instrument definition URL=http://www.mcstas.org
*
* Instrument: Test_Monochromators
*
* %Identification
* Written by: Peter Christiansen
* Date: July 2006.
* Origin: RISOE.
* Release: McStas CVS_080624
* Version: $Revision: 1.7 $
* %INSTRUMENT_SITE: Tests_optics
*
* Compares intensities of Monochromator components.
*
* %Description
*
* Very simple setup to compare intensities diffracted by Monochromators. 
* It shows that implementations are equivalent.
*
* %Example: Mono=1 Detector: psd1_I=8.97959e-05
* %Example: Mono=2 Detector: psd1_I=8.96391e-05
* %Example: Mono=3 Detector: psd1_I=8.95371e-05
* %Example: Mono=4 Detector: psd1_I=8.95851e-05
* %Example: Mono=5 Detector: psd1_I=8.98186e-05
* %Example: Mono=6 Detector: psd1_I=9.21295e-05
*
* %Parameters
* INPUT PARAMETERS:
* Mono:   Choice of Monochromator component to use, with
*         1=Monochromator_flat
*         2=Monochromator_pol
*         3=Monochromator_pol (forcing 1% events to be reflected)
*         4=Monochromator_curved (in flat mode)
*         5=Monochromator_2foc (contrib, flat mode)
*         6=Single_crystal
* lambda: Source wavelength   [Angs]
* Moz:    Mosaicity           [Arc minutes]
*
* %Link
*
* %End
****************************************************************************/

DEFINE INSTRUMENT Test_Monochromators(int Mono=1, lambda=2.0, Moz=40)

DECLARE
%{
  double DM  = 3.3539; /* Monochromator d-spacing in Angs */
                       /* PG002 Orders : 1st 3.355 2e 1.6775, 3e 1.1183 */
  
  /* to compute */
  double A1,A2;
  double mono_q;
  
  /* This variable helps us switch on and off the different setups*/
  double filterProb;
%}
/* end of DECLARE */

INITIALIZE
%{
  int    ORDER = 1;
  double Ki;
  int    SM;
  
  /* SM : scattering at mono to the right (-1)/left(+1) */
  SM = 1;
  
  mono_q = 2*PI*ORDER/DM;  /* Q mono in Angs-1 */

  Ki = 2*PI/lambda;
  
  A2 = asin(mono_q/2/Ki)*RAD2DEG*2;
  
  A2 *= SM;   /* A1 : mono theta (crystal) */
  A1 = A2/2;  /* A2 : mono 2 theta (arm to sample) */
  
  printf("\n%s: ", NAME_CURRENT_COMP);
  switch (Mono) {
  case 1:
    printf("Using Monochromator_flat\n"); break;
  case 2:
    printf("Using Monochromator_pol\n"); break;
  case 3:
    printf("Using Monochromator_pol (with 1%% events reflected)\n"); break;
  case 4:
    printf("Using Monochromator_curved (flat mode)\n"); break;
  case 5:
    printf("Using Monochromator_2foc (contrib, flat mode)\n"); break;
  case 6:
    printf("Using Single_crystal\n"); break;
  }
  %}
/* end of INITIALIZE */

TRACE
/* Source description */

COMPONENT Origin = Progress_bar()
     AT (0,0,0) ABSOLUTE

/* a flat constant source */
COMPONENT Source = 
Source_simple(radius  = 0.01, dist = 1.0,
	      focus_xw = 0.02, focus_yh = 0.02,
	      lambda0 = lambda, dlambda = 0.2*lambda)
     AT (0,0,0) RELATIVE Origin

COMPONENT lamStart = 
L_monitor(nL = 200, filename = "lambdaStart.dat", xwidth = 0.10,
	  yheight = 0.10, Lmin = 0.7*lambda, Lmax = 1.3*lambda)
     AT (0, 0, 0.5) RELATIVE Origin


COMPONENT Mono_Arm = Arm()
     AT (0, 0, 1.0) RELATIVE Source ROTATED (0, A1, 0) RELATIVE Source

COMPONENT Mono_Out = Arm()
     AT (0, 0, 0) RELATIVE Mono_Arm ROTATED (0, A2, 0) RELATIVE Source

COMPONENT Mono1 = 
Monochromator_flat(zwidth = 0.10, yheight = 0.10,
		   mosaich = Moz, mosaicv = Moz,
		   r0 = 0.9, Q=mono_q)
     WHEN (Mono == 1) AT (0, 0, 0) RELATIVE Mono_Arm

COMPONENT Mono2 = 
Monochromator_pol(zwidth = 0.10, yheight = 0.10,
		  mosaic = Moz, dspread = 0.0,
		  Rup = 0.9, Rdown = 0.9, Q=mono_q)
     WHEN (Mono == 2) AT (0, 0, 0) RELATIVE Mono_Arm

COMPONENT Mono3 = 
Monochromator_pol(zwidth = 0.10, yheight = 0.10,
		  mosaic = Moz, dspread = 0.0,
		  Rup = 0.9, Rdown = 0.9, Q=mono_q, pThreshold=0.01)
     WHEN (Mono == 3) AT (0, 0, 0) RELATIVE Mono_Arm
     
COMPONENT Mono4 = 
Monochromator_curved(width = 0.10, height = 0.10,
		   mosaich = Moz, mosaicv = Moz,
		   r0 = 0.9, Q=mono_q, gap=0)
     WHEN (Mono == 4) AT (0, 0, 0) RELATIVE Mono_Arm
     
COMPONENT Mono5 = 
Monochromator_2foc(width = 0.10, height = 0.10,
		   mosaich = Moz, mosaicv = Moz,
		   r0 = 0.9, Q=mono_q, gap=0)
     WHEN (Mono == 5) AT (0, 0, 0) RELATIVE Mono_Arm

COMPONENT Mono6 = Single_crystal( 
  xwidth = 0.002, yheight = 0.1, zdepth = 0.1, 
  mosaic = 30, reflections = "C_graphite.lau", barns=0,
  ax=0,      ay=2.14,   az=-1.24,
  bx = 0,    by = 0,    bz =  2.47,
  cx = 6.71, cy = 0,    cz =  0, 
  sigma_abs = 0.014, sigma_inc = 0.004) 
     WHEN (Mono == 6) AT (0, 0, 0) RELATIVE Mono_Arm          

COMPONENT lam1 = 
L_monitor(nL = 200, filename = "lambda1.dat", xwidth = 0.10,
	  yheight = 0.10, Lmin = 0.7*lambda, Lmax = 1.3*lambda)
  AT (0, 0, 0.25) RELATIVE Mono_Out


COMPONENT psd1 = 
PSD_monitor(xwidth = 0.10, yheight = 0.10,
	    nx=20, ny=20, filename="psd1.dat")
  AT (0, 0, 0.5) RELATIVE Mono_Out

END
