/*******************************************************************************
*
* McStas, the neutron ray-tracing package: Res_monitor.comp
*         Copyright 1997-2001 Risoe National Laboratory, Roskilde, Denmark
*
* Component: Res_monitor
*
* %I
* Written by: Kristian Nielsen
* Date: 1999
* Version: $Revision: 1.10 $
* Origin: McStas 1.5
*
* Monitor for resolution calculations
*
* %D
* A single detector/monitor, used together with the Res_sample component to
* compute instrument resolution functions. Outputs a list of neutron
* scattering events in the sample along with their intensities in the
* detector. The output file may be analyzed with the mcresplot front-end.
*
* Example: Res_monitor(filename="Output.res", res_sample_comp=RSample,
*           xmin=-0.1, xmax=0.1, ymin=-0.1, ymax=0.1)
*
* %P
* INPUT PARAMETERS:
*
* xmin:            Lower x bound of detector opening (m)
* xmax:            Upper x bound of detector opening (m)
* ymin:            Lower y bound of detector opening (m)
* ymax:            Upper y bound of detector opening (m)
* filename:        Name of output file (string)
* res_sample_comp: Name of Res_sample component in the instrument definition
*
* OUTPUT PARAMETERS:
*
* Nsum:  Number of neutron hits
* psum:  Sum of neutron weights
* p2sum: 2nd moment of neutron weights
*
* %E
*******************************************************************************/

DEFINE COMPONENT Res_monitor
DEFINITION PARAMETERS (filename, res_sample_comp)
SETTING PARAMETERS (xmin, xmax, ymin, ymax)
OUTPUT PARAMETERS (Nsum, psum, p2sum, file)
STATE PARAMETERS (x,y,z,vx,vy,vz,t,s1,s2,p)

DECLARE
  %{
    int Nsum;
    double psum, p2sum;
    FILE *file;
  %}
INITIALIZE
  %{
    psum = 0;
    p2sum = 0;
    Nsum = 0;
    file = filename ? fopen(filename, "w") : 0;
    if(!file && filename)
      fprintf(stderr, "Warning: could not open output file '%s'\n", filename);
  %}
TRACE
%{
    PROP_Z0;
    if (x>xmin && x<xmax && y>ymin && y<ymax)
    {
      Nsum++;
      psum += p;
      p2sum += p*p;
      /* Now fetch data from the Res_sample. */
      if(p != 0 && file)
      {
        struct Res_sample_struct *s =
          &(MC_GETPAR(res_sample_comp, res_struct));
        if(s->pi != 0)
          fprintf(file, "%g %g %g %g %g %g %g %g %g %g %g\n",
                  s->ki_x, s->ki_y, s->ki_z, s->kf_x, s->kf_y, s->kf_z,
                  s->rx, s->ry, s->rz, s->pi, p/s->pi);
       }
       SCATTER;
    }
%}

FINALLY
  %{
    if(file)
      fclose(file);
    DETECTOR_OUT_0D("Single monitor", Nsum, psum, p2sum);
  %}

MCDISPLAY
%{
  magnify("xy");
  multiline(5, (double)xmin, (double)ymin, 0.0,
               (double)xmax, (double)ymin, 0.0,
               (double)xmax, (double)ymax, 0.0,
               (double)xmin, (double)ymax, 0.0,
               (double)xmin, (double)ymin, 0.0);
%}

END
