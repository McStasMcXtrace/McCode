/*******************************************************************************
*
* McStas, version 1.1, released ?
*         Maintained by Kristian Nielsen and Kim Lefmann,
*         Risoe National Laboratory, Roskilde, Denmark
*
* Component: V_selector
*
* Written by: KL, Nov 25, 1998
*
* Velocity selector consisting of rotating Soller-like blades
* defining a helically twisted passage.
* Geometry defined by two identical, centered apertures at 12 o'clock
* position.
* Transmission is analytical assuming a continuous source
*
* INPUT PARAMETERS:
*
* width:     (m)   Width of aperture
* height:    (m)   Height of aperture
* l0:        (m)   Distance between apertures
* r0:        (m)   Height from aperture centre to rotation axis
* phi:       (rad) Twist angle along the cylinder
* l1:        (m)   Length of cylinder (less than l0)
* tb:        (m)   Thickness of blades
* Tl:        (1)   Mean leak transmittance
* rot:       (rpm) Cylinder rotation speed, counter-clockwise
* nb:        (1)   Number of Soller blades
*
*******************************************************************************/


DEFINE COMPONENT V_selector
DEFINITION PARAMETERS (width, height, l0, r0, phi, l1, tb, Tl, rot, nb)
SETTING PARAMETERS ()
STATE PARAMETERS (x,y,z,vx,vy,vz,t,s1,s2,p)
DECLARE
%{
    double dt0, dt1, r_i, r_f, theta_i, theta_f;
    double A, psi, phi_rad, omega;
%}
INITIALIZE
%{
#define RPM2OM 2*PI/60.0;
    omega=rot*RPM2OM;
    phi_rad = phi*PI/180.0;
%}
TRACE
%{
    PROP_Z0; /* Propagate to the entry aperture */
    if (x<(-width/2.0) || x>(width/2.0) || y<(-height/2.0) || y>(height/2.0))
      ABSORB;

    dt0 = (l0-l1)/(2.0*vz); /* Propagate to the cylinder start */ 
    PROP_DT(dt0);
    r_i = sqrt(x*x+(y+r0)*(y+r0));
    theta_i = atan2(x,y+r0);

    dt1 = l1/vz; /* Propagate along the cylinder length */
    PROP_DT(dt1);
    r_f = sqrt(x*x+(y+r0)*(y+r0));
    theta_f = atan2(x,y+r0);

    dt0 = (l0-l1)/(2.0*vz); /* Propagate to the exit aperture */ 
    PROP_DT(dt0);
    if (x<(-width/2.0) || x>(width/2.0) || y<(-height/2.0) || y>(height/2.0))
      ABSORB;

    /* Calculate analytical transmission assuming continuous source */
    
    psi = theta_f-theta_i;
    A = nb/(2*PI)*( 2.0*tb/(r_i+r_f)+fabs(phi_rad+psi-omega*l1/vz) ); 
    if (A >= 1)
      ABSORB;
    p*= Tl+(1-Tl)*(1-A);
%}
END
