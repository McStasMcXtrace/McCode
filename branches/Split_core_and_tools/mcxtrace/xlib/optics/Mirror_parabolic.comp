/*******************************************************************************
*
* McXtrace, xray-tracing package
*         Copyright, All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
*
* Component: Mirror_parabolic
*
* %I
* Written by: Erik Knudsen
* Date: Feb 11, 2010
* Version: $Revision$
* Origin: Risoe
* Release: McXtrace 1.0
*
* Idealized parabolic mirror
* 
* %D
* Takes a reflectivity (default=1) as input and reflects rays in a ideal geometry
* elliptic mirror.
* The mirror is positioned such that the long axis of the mirror ellipsoid is on the
* z-axis
*
* %P
* INPUT PARAMETERS
*
* R: [1] reflectivity of mirror.
* a: [m] long half axis (along z).
* b: [m] 1st short half axis (along x)
* c: [m] 2nd short half axis (along y)
* 
* %E
*******************************************************************************/


  DEFINE COMPONENT Mirror_parabolic
DEFINITION PARAMETERS ()
  SETTING PARAMETERS (R=1, a=1, b=1, xwidth=1,yheight=1,zdepth=1)
OUTPUT PARAMETERS ()
/* X-ray parameters: (x,y,z,kx,ky,kz,phi,t,Ex,Ey,Ez,p) */ 

DECLARE
%{
  double a2,b2;
%}

INITIALIZE
%{
  a2=a*a;
  b2=b*b;
%}

TRACE
%{
  double A,B,C,D2;
  double l0,l1;
    A=kz*kz/(a2) + kx*kx/(b2);
    B=2*(z*kz/(a2) + x*kx/(b2) - ky);
    C=z*z/a2 + x*x/b2 -y;
    
    D2= pow( B/(2*A),2.0)-C;
    while (D2>0){
      l0=-B/(2*A) + sqrt(D2);
      l1=-B/(2*A) - sqrt(D2);
      if (l0>0) {
        fprintf(stderr,"warning: x-ray hitsP mirror %s on back surface\n",NAME_CURRENT_COMP);
        PROP_DL(l0);
      }else{
        PROP_DL(l1);
      }
      /*check boundaries of mirror, go on if within, restore if not*/
      if ( (2*x>xwidth || 2*x<-xwidth) || (2*y>yheight || 2*y<-yheight) || (2*z>zdepth || 2*z<-zdepth ) ){
        break;
      }
      /*reflect ray "through" normal vector of tangent plane at x,y,z (as photon is now at the mirror surface)*/
      double nx,ny,nz;
      nx=2*x/b2;ny=0;nz=2*z/a2;
      NORM(nx,ny,nz);
      double kdotn=scalar_prod(nx,ny,nz,kx,0,kz);
      kx-=2*nx*kdotn;
      kz-=2*nz*kdotn;

      /*adjust weight of ray*/
      p*=R;
    }

%}

MCDISPLAY
%{



%}

END
