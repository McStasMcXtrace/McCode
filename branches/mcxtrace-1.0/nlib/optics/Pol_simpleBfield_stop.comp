/**************************************************************************
*
* McStas, neutron ray-tracing package
*         Copyright 1997-2006, All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
*
* Component: Pol_simpleBfield_stop
*
* %I
* Written by: Peter Christiansen and Peter Willendrup
* Date: August 2006
* Version: $Revision: 1.1 $
* Origin: RISOE
* Release: McStas 1.10
*
* Magnetic field component.
*
* %D 
*
* End of magnetic field region defined by a previous Pol_simpleBfield component.
*
* The component is concentric. It means that it requires a 
*
* // START MAGNETIC FIELD
* COMPONENT msf =
* Pol_simpleBfield(xw=0.08, yh=0.08, length=0.2, Bx=0, By=-0.678332e-4, Bz=0)
*      AT (0, 0, 0) RELATIVE armMSF
*
* // HERE CAN BE OTHER COMPONENTS INSIDE THE MAGNETIC FIELD
*
* // STOP MAGNETIC FIELD
* COMPONENT msfCp = Pol_simpleBfield_stop(msf)
*      AT ("SOMEWHERE") RELATIVE armMSF
*
* In between the two components the propagation routine
* PROP_DT also handles the spin propagation.
* The current algorithm used for spin propagation is:
* SimpleNumMagnetPrecession
* in pol-lib.
* and does not handle gravity.
*
* GRAVITY: NO
* POLARISATION: YES
*
* Example: Pol_simpleBfield_stop(Pol_simpleBfield_stop)
*
* %P
* INPUT PARAMETERS:
*
* xw:      [m]       Width of opening. 
* yh:      [m]       Height of opening. 
* length:  [m]       Length of field.
* Bx:      [T]       Parameter used for x composant of field.
* By:      [T]       Parameter used for y composant of field.
* Bz:      [T]       Parameter used for z composant of field.
* nx:      [1]       Number of field points to draw along x axis.
* ny:      [1]       Number of field points to draw along y axis.
* nz:      [1]       Number of field points to draw along z axis.
* fieldFunction [pointer] Function describing the magnetic field.
*
* OUTPUT PARAMETERS:
*
* gz:             z-component of gravity (m/s/s)
* parPtr:         Pointer to component magnet parameters (pointer)
*
* %E
****************************************************************************/

DEFINE COMPONENT Pol_simpleBfield_stop
DEFINITION PARAMETERS (magnet_comp_stop)
SETTING PARAMETERS ()
  OUTPUT PARAMETERS()
/* Neutron parameters: (x,y,z,vx,vy,vz,t,sx,sy,sz,p) */ 

SHARE
%{
  %include "pol-lib"
  double fmax(double, double);
  double fmin(double, double);
%}


DECLARE
%{
  /*   Larmor frequency and scalar product threshold*/
  double gz;
  //double length;
  double *parPtr;
  mcmagnet_field_info *magnet;  
%}

INITIALIZE
%{  
  //length=MC_GETPAR(magnet_comp_stop,length);
  gz=MC_GETPAR(magnet_comp_stop,gz); 
%}

TRACE
%{
  double dt = 0;
 
  /*get the "old" magnet to restore*/ 
  //magnet=MC_GETPAR(magnet_comp_stop,magnet);
  
  //solve_2nd_order(&dt, -gz/2, -vz, length-z);
  //printf("%s dt: %g ,length: %g, z:%g\n",NAME_CURRENT_COMP,dt,length,z); 
  //PROP_DT(dt);
  PROP_Z0;
  mcmagnet_pop();
  /*mcmagnet_set_active(magnet);
  if (magnet==NULL || magnet->func==NULL) {
    MAGNET_OFF;
  }*/
%}

/* This section is executed when the simulation ends (C code). Other    */
/* optional sections are : SAVE                                         */
FINALLY
%{
/*  parPtr=MC_GETPAR(magnet_comp_stop,parPtr);
  free(parPtr);
*/
%}


MCDISPLAY
%{
%}

END
