/* This file is auto-generated by opth-gen.awk.  */

#ifndef OPTIONS_H
#define OPTIONS_H

#include "flag-types.h"

#include "config/i386/i386-opts.h"

#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)
#ifndef GENERATOR_FILE
#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS)
struct GTY(()) gcc_options
#else
struct gcc_options
#endif
{
#endif
#ifdef GENERATOR_FILE
extern int recip_mask;
#else
  int x_recip_mask;
#define recip_mask global_options.x_recip_mask
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT frame_larger_than_size;
#else
  HOST_WIDE_INT x_frame_larger_than_size;
#define frame_larger_than_size global_options.x_frame_larger_than_size
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT ix86_isa_flags;
#else
  HOST_WIDE_INT x_ix86_isa_flags;
#define ix86_isa_flags global_options.x_ix86_isa_flags
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT ix86_isa_flags_explicit;
#else
  HOST_WIDE_INT x_ix86_isa_flags_explicit;
#define ix86_isa_flags_explicit global_options.x_ix86_isa_flags_explicit
#endif
#ifdef GENERATOR_FILE
extern HOST_WIDE_INT larger_than_size;
#else
  HOST_WIDE_INT x_larger_than_size;
#define larger_than_size global_options.x_larger_than_size
#endif
#ifdef GENERATOR_FILE
extern bool dump_base_name_prefixed;
#else
  bool x_dump_base_name_prefixed;
#define dump_base_name_prefixed global_options.x_dump_base_name_prefixed
#endif
#ifdef GENERATOR_FILE
extern bool exit_after_options;
#else
  bool x_exit_after_options;
#define exit_after_options global_options.x_exit_after_options
#endif
#ifdef GENERATOR_FILE
extern bool flag_dump_all_passed;
#else
  bool x_flag_dump_all_passed;
#define flag_dump_all_passed global_options.x_flag_dump_all_passed
#endif
#ifdef GENERATOR_FILE
extern bool flag_opts_finished;
#else
  bool x_flag_opts_finished;
#define flag_opts_finished global_options.x_flag_opts_finished
#endif
#ifdef GENERATOR_FILE
extern bool flag_stack_usage_info;
#else
  bool x_flag_stack_usage_info;
#define flag_stack_usage_info global_options.x_flag_stack_usage_info
#endif
#ifdef GENERATOR_FILE
extern bool flag_warn_unused_result;
#else
  bool x_flag_warn_unused_result;
#define flag_warn_unused_result global_options.x_flag_warn_unused_result
#endif
#ifdef GENERATOR_FILE
extern bool in_lto_p;
#else
  bool x_in_lto_p;
#define in_lto_p global_options.x_in_lto_p
#endif
#ifdef GENERATOR_FILE
extern bool use_gnu_debug_info_extensions;
#else
  bool x_use_gnu_debug_info_extensions;
#define use_gnu_debug_info_extensions global_options.x_use_gnu_debug_info_extensions
#endif
#ifdef GENERATOR_FILE
extern bool warn_frame_larger_than;
#else
  bool x_warn_frame_larger_than;
#define warn_frame_larger_than global_options.x_warn_frame_larger_than
#endif
#ifdef GENERATOR_FILE
extern bool warn_larger_than;
#else
  bool x_warn_larger_than;
#define warn_larger_than global_options.x_warn_larger_than
#endif
#ifdef GENERATOR_FILE
extern char *help_enum_printed;
#else
  char * x_help_enum_printed;
#define help_enum_printed global_options.x_help_enum_printed
#endif
#ifdef GENERATOR_FILE
extern char *help_printed;
#else
  char * x_help_printed;
#define help_printed global_options.x_help_printed
#endif
#ifdef GENERATOR_FILE
extern const char *main_input_basename;
#else
  const char * x_main_input_basename;
#define main_input_basename global_options.x_main_input_basename
#endif
#ifdef GENERATOR_FILE
extern const char *main_input_filename;
#else
  const char * x_main_input_filename;
#define main_input_filename global_options.x_main_input_filename
#endif
#ifdef GENERATOR_FILE
extern enum debug_info_levels debug_info_level;
#else
  enum debug_info_levels x_debug_info_level;
#define debug_info_level global_options.x_debug_info_level
#endif
#ifdef GENERATOR_FILE
extern enum debug_info_type write_symbols;
#else
  enum debug_info_type x_write_symbols;
#define write_symbols global_options.x_write_symbols
#endif
#ifdef GENERATOR_FILE
extern enum debug_struct_file debug_struct_generic[DINFO_USAGE_NUM_ENUMS];
#else
  enum debug_struct_file x_debug_struct_generic[DINFO_USAGE_NUM_ENUMS];
#define debug_struct_generic global_options.x_debug_struct_generic
#endif
#ifdef GENERATOR_FILE
extern enum debug_struct_file debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];
#else
  enum debug_struct_file x_debug_struct_ordinary[DINFO_USAGE_NUM_ENUMS];
#define debug_struct_ordinary global_options.x_debug_struct_ordinary
#endif
#ifdef GENERATOR_FILE
extern enum stack_check_type flag_stack_check;
#else
  enum stack_check_type x_flag_stack_check;
#define flag_stack_check global_options.x_flag_stack_check
#endif
#ifdef GENERATOR_FILE
extern int *param_values;
#else
  int * x_param_values;
#define param_values global_options.x_param_values
#endif
#ifdef GENERATOR_FILE
extern int flag_complex_method;
#else
  int x_flag_complex_method;
#define flag_complex_method global_options.x_flag_complex_method
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_asm;
#else
  int x_flag_debug_asm;
#define flag_debug_asm global_options.x_flag_debug_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_rtl_in_asm;
#else
  int x_flag_dump_rtl_in_asm;
#define flag_dump_rtl_in_asm global_options.x_flag_dump_rtl_in_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_evaluation_order;
#else
  int x_flag_evaluation_order;
#define flag_evaluation_order global_options.x_flag_evaluation_order
#endif
#ifdef GENERATOR_FILE
extern int flag_gen_aux_info;
#else
  int x_flag_gen_aux_info;
#define flag_gen_aux_info global_options.x_flag_gen_aux_info
#endif
#ifdef GENERATOR_FILE
extern int flag_generate_lto;
#else
  int x_flag_generate_lto;
#define flag_generate_lto global_options.x_flag_generate_lto
#endif
#ifdef GENERATOR_FILE
extern int flag_print_asm_name;
#else
  int x_flag_print_asm_name;
#define flag_print_asm_name global_options.x_flag_print_asm_name
#endif
#ifdef GENERATOR_FILE
extern int flag_shlib;
#else
  int x_flag_shlib;
#define flag_shlib global_options.x_flag_shlib
#endif
#ifdef GENERATOR_FILE
extern int ix86_target_flags_explicit;
#else
  int x_ix86_target_flags_explicit;
#define ix86_target_flags_explicit global_options.x_ix86_target_flags_explicit
#endif
#ifdef GENERATOR_FILE
extern int main_input_baselength;
#else
  int x_main_input_baselength;
#define main_input_baselength global_options.x_main_input_baselength
#endif
#ifdef GENERATOR_FILE
extern int optimize;
#else
  int x_optimize;
#define optimize global_options.x_optimize
#endif
#ifdef GENERATOR_FILE
extern int optimize_debug;
#else
  int x_optimize_debug;
#define optimize_debug global_options.x_optimize_debug
#endif
#ifdef GENERATOR_FILE
extern int optimize_fast;
#else
  int x_optimize_fast;
#define optimize_fast global_options.x_optimize_fast
#endif
#ifdef GENERATOR_FILE
extern int optimize_size;
#else
  int x_optimize_size;
#define optimize_size global_options.x_optimize_size
#endif
#ifdef GENERATOR_FILE
extern int recip_mask_explicit;
#else
  int x_recip_mask_explicit;
#define recip_mask_explicit global_options.x_recip_mask_explicit
#endif
#ifdef GENERATOR_FILE
extern int rtl_dump_and_exit;
#else
  int x_rtl_dump_and_exit;
#define rtl_dump_and_exit global_options.x_rtl_dump_and_exit
#endif
#ifdef GENERATOR_FILE
extern int target_flags;
#else
  int x_target_flags;
#define target_flags global_options.x_target_flags
#endif
#ifdef GENERATOR_FILE
extern unsigned int flag_sanitize;
#else
  unsigned int x_flag_sanitize;
#define flag_sanitize global_options.x_flag_sanitize
#endif
#ifdef GENERATOR_FILE
extern unsigned int help_columns;
#else
  unsigned int x_help_columns;
#define help_columns global_options.x_help_columns
#endif
#ifdef GENERATOR_FILE
extern unsigned int initial_max_fld_align;
#else
  unsigned int x_initial_max_fld_align;
#define initial_max_fld_align global_options.x_initial_max_fld_align
#endif
#ifdef GENERATOR_FILE
extern void *flag_instrument_functions_exclude_files;
#else
  void * x_flag_instrument_functions_exclude_files;
#define flag_instrument_functions_exclude_files global_options.x_flag_instrument_functions_exclude_files
#endif
#ifdef GENERATOR_FILE
extern void *flag_instrument_functions_exclude_functions;
#else
  void * x_flag_instrument_functions_exclude_functions;
#define flag_instrument_functions_exclude_functions global_options.x_flag_instrument_functions_exclude_functions
#endif
#ifdef GENERATOR_FILE
extern int help_flag;
#else
  int x_help_flag;
#define help_flag global_options.x_help_flag
#endif
#ifdef GENERATOR_FILE
extern int no_sysroot_suffix;
#else
  int x_no_sysroot_suffix;
#define no_sysroot_suffix global_options.x_no_sysroot_suffix
#endif
#ifdef GENERATOR_FILE
extern int flag_preprocess_only;
#else
  int x_flag_preprocess_only;
#define flag_preprocess_only global_options.x_flag_preprocess_only
#endif
#ifdef GENERATOR_FILE
extern int warn_abi;
#else
  int x_warn_abi;
#define warn_abi global_options.x_warn_abi
#endif
#ifdef GENERATOR_FILE
extern int warn_abi_tag;
#else
  int x_warn_abi_tag;
#define warn_abi_tag global_options.x_warn_abi_tag
#endif
#ifdef GENERATOR_FILE
extern int warn_address;
#else
  int x_warn_address;
#define warn_address global_options.x_warn_address
#endif
#ifdef GENERATOR_FILE
extern int warn_aggregate_return;
#else
  int x_warn_aggregate_return;
#define warn_aggregate_return global_options.x_warn_aggregate_return
#endif
#ifdef GENERATOR_FILE
extern int warn_aggressive_loop_optimizations;
#else
  int x_warn_aggressive_loop_optimizations;
#define warn_aggressive_loop_optimizations global_options.x_warn_aggressive_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int warn_array_bounds;
#else
  int x_warn_array_bounds;
#define warn_array_bounds global_options.x_warn_array_bounds
#endif
#ifdef GENERATOR_FILE
extern int warn_assign_intercept;
#else
  int x_warn_assign_intercept;
#define warn_assign_intercept global_options.x_warn_assign_intercept
#endif
#ifdef GENERATOR_FILE
extern int warn_attributes;
#else
  int x_warn_attributes;
#define warn_attributes global_options.x_warn_attributes
#endif
#ifdef GENERATOR_FILE
extern int warn_bad_function_cast;
#else
  int x_warn_bad_function_cast;
#define warn_bad_function_cast global_options.x_warn_bad_function_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx_compat;
#else
  int x_warn_cxx_compat;
#define warn_cxx_compat global_options.x_warn_cxx_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cxx0x_compat;
#else
  int x_warn_cxx0x_compat;
#define warn_cxx0x_compat global_options.x_warn_cxx0x_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_align;
#else
  int x_warn_cast_align;
#define warn_cast_align global_options.x_warn_cast_align
#endif
#ifdef GENERATOR_FILE
extern int warn_cast_qual;
#else
  int x_warn_cast_qual;
#define warn_cast_qual global_options.x_warn_cast_qual
#endif
#ifdef GENERATOR_FILE
extern int warn_char_subscripts;
#else
  int x_warn_char_subscripts;
#define warn_char_subscripts global_options.x_warn_char_subscripts
#endif
#ifdef GENERATOR_FILE
extern int warn_clobbered;
#else
  int x_warn_clobbered;
#define warn_clobbered global_options.x_warn_clobbered
#endif
#ifdef GENERATOR_FILE
extern int warn_conditionally_supported;
#else
  int x_warn_conditionally_supported;
#define warn_conditionally_supported global_options.x_warn_conditionally_supported
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion;
#else
  int x_warn_conversion;
#define warn_conversion global_options.x_warn_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_conversion_null;
#else
  int x_warn_conversion_null;
#define warn_conversion_null global_options.x_warn_conversion_null
#endif
#ifdef GENERATOR_FILE
extern int warn_coverage_mismatch;
#else
  int x_warn_coverage_mismatch;
#define warn_coverage_mismatch global_options.x_warn_coverage_mismatch
#endif
#ifdef GENERATOR_FILE
extern int warn_cpp;
#else
  int x_warn_cpp;
#define warn_cpp global_options.x_warn_cpp
#endif
#ifdef GENERATOR_FILE
extern int warn_ctor_dtor_privacy;
#else
  int x_warn_ctor_dtor_privacy;
#define warn_ctor_dtor_privacy global_options.x_warn_ctor_dtor_privacy
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_date_time;
#else
  int x_cpp_warn_date_time;
#define cpp_warn_date_time global_options.x_cpp_warn_date_time
#endif
#ifdef GENERATOR_FILE
extern int warn_declaration_after_statement;
#else
  int x_warn_declaration_after_statement;
#define warn_declaration_after_statement global_options.x_warn_declaration_after_statement
#endif
#ifdef GENERATOR_FILE
extern int warn_delete_incomplete;
#else
  int x_warn_delete_incomplete;
#define warn_delete_incomplete global_options.x_warn_delete_incomplete
#endif
#ifdef GENERATOR_FILE
extern int warn_delnonvdtor;
#else
  int x_warn_delnonvdtor;
#define warn_delnonvdtor global_options.x_warn_delnonvdtor
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated;
#else
  int x_warn_deprecated;
#define warn_deprecated global_options.x_warn_deprecated
#endif
#ifdef GENERATOR_FILE
extern int warn_deprecated_decl;
#else
  int x_warn_deprecated_decl;
#define warn_deprecated_decl global_options.x_warn_deprecated_decl
#endif
#ifdef GENERATOR_FILE
extern int warn_disabled_optimization;
#else
  int x_warn_disabled_optimization;
#define warn_disabled_optimization global_options.x_warn_disabled_optimization
#endif
#ifdef GENERATOR_FILE
extern int warn_div_by_zero;
#else
  int x_warn_div_by_zero;
#define warn_div_by_zero global_options.x_warn_div_by_zero
#endif
#ifdef GENERATOR_FILE
extern int warn_double_promotion;
#else
  int x_warn_double_promotion;
#define warn_double_promotion global_options.x_warn_double_promotion
#endif
#ifdef GENERATOR_FILE
extern int warn_ecpp;
#else
  int x_warn_ecpp;
#define warn_ecpp global_options.x_warn_ecpp
#endif
#ifdef GENERATOR_FILE
extern int warn_empty_body;
#else
  int x_warn_empty_body;
#define warn_empty_body global_options.x_warn_empty_body
#endif
#ifdef GENERATOR_FILE
extern int warn_enum_compare;
#else
  int x_warn_enum_compare;
#define warn_enum_compare global_options.x_warn_enum_compare
#endif
#ifdef GENERATOR_FILE
extern int warnings_are_errors;
#else
  int x_warnings_are_errors;
#define warnings_are_errors global_options.x_warnings_are_errors
#endif
#ifdef GENERATOR_FILE
extern int extra_warnings;
#else
  int x_extra_warnings;
#define extra_warnings global_options.x_extra_warnings
#endif
#ifdef GENERATOR_FILE
extern int flag_extraneous_semicolon;
#else
  int x_flag_extraneous_semicolon;
#define flag_extraneous_semicolon global_options.x_flag_extraneous_semicolon
#endif
#ifdef GENERATOR_FILE
extern int flag_fatal_errors;
#else
  int x_flag_fatal_errors;
#define flag_fatal_errors global_options.x_flag_fatal_errors
#endif
#ifdef GENERATOR_FILE
extern int warn_float_conversion;
#else
  int x_warn_float_conversion;
#define warn_float_conversion global_options.x_warn_float_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_float_equal;
#else
  int x_warn_float_equal;
#define warn_float_equal global_options.x_warn_float_equal
#endif
#ifdef GENERATOR_FILE
extern int warn_format_contains_nul;
#else
  int x_warn_format_contains_nul;
#define warn_format_contains_nul global_options.x_warn_format_contains_nul
#endif
#ifdef GENERATOR_FILE
extern int warn_format_extra_args;
#else
  int x_warn_format_extra_args;
#define warn_format_extra_args global_options.x_warn_format_extra_args
#endif
#ifdef GENERATOR_FILE
extern int warn_format_nonliteral;
#else
  int x_warn_format_nonliteral;
#define warn_format_nonliteral global_options.x_warn_format_nonliteral
#endif
#ifdef GENERATOR_FILE
extern int warn_format_security;
#else
  int x_warn_format_security;
#define warn_format_security global_options.x_warn_format_security
#endif
#ifdef GENERATOR_FILE
extern int warn_format_y2k;
#else
  int x_warn_format_y2k;
#define warn_format_y2k global_options.x_warn_format_y2k
#endif
#ifdef GENERATOR_FILE
extern int warn_format_zero_length;
#else
  int x_warn_format_zero_length;
#define warn_format_zero_length global_options.x_warn_format_zero_length
#endif
#ifdef GENERATOR_FILE
extern int warn_format;
#else
  int x_warn_format;
#define warn_format global_options.x_warn_format
#endif
#ifdef GENERATOR_FILE
extern int warn_free_nonheap_object;
#else
  int x_warn_free_nonheap_object;
#define warn_free_nonheap_object global_options.x_warn_free_nonheap_object
#endif
#ifdef GENERATOR_FILE
extern int warn_ignored_qualifiers;
#else
  int x_warn_ignored_qualifiers;
#define warn_ignored_qualifiers global_options.x_warn_ignored_qualifiers
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit;
#else
  int x_warn_implicit;
#define warn_implicit global_options.x_warn_implicit
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_function_declaration;
#else
  int x_warn_implicit_function_declaration;
#define warn_implicit_function_declaration global_options.x_warn_implicit_function_declaration
#endif
#ifdef GENERATOR_FILE
extern int warn_implicit_int;
#else
  int x_warn_implicit_int;
#define warn_implicit_int global_options.x_warn_implicit_int
#endif
#ifdef GENERATOR_FILE
extern int warn_inh_var_ctor;
#else
  int x_warn_inh_var_ctor;
#define warn_inh_var_ctor global_options.x_warn_inh_var_ctor
#endif
#ifdef GENERATOR_FILE
extern int warn_init_self;
#else
  int x_warn_init_self;
#define warn_init_self global_options.x_warn_init_self
#endif
#ifdef GENERATOR_FILE
extern int warn_inline;
#else
  int x_warn_inline;
#define warn_inline global_options.x_warn_inline
#endif
#ifdef GENERATOR_FILE
extern int warn_int_to_pointer_cast;
#else
  int x_warn_int_to_pointer_cast;
#define warn_int_to_pointer_cast global_options.x_warn_int_to_pointer_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_memory_model;
#else
  int x_warn_invalid_memory_model;
#define warn_invalid_memory_model global_options.x_warn_invalid_memory_model
#endif
#ifdef GENERATOR_FILE
extern int warn_invalid_offsetof;
#else
  int x_warn_invalid_offsetof;
#define warn_invalid_offsetof global_options.x_warn_invalid_offsetof
#endif
#ifdef GENERATOR_FILE
extern int warn_jump_misses_init;
#else
  int x_warn_jump_misses_init;
#define warn_jump_misses_init global_options.x_warn_jump_misses_init
#endif
#ifdef GENERATOR_FILE
extern int warn_logical_op;
#else
  int x_warn_logical_op;
#define warn_logical_op global_options.x_warn_logical_op
#endif
#ifdef GENERATOR_FILE
extern int warn_long_long;
#else
  int x_warn_long_long;
#define warn_long_long global_options.x_warn_long_long
#endif
#ifdef GENERATOR_FILE
extern int warn_main;
#else
  int x_warn_main;
#define warn_main global_options.x_warn_main
#endif
#ifdef GENERATOR_FILE
extern int warn_maybe_uninitialized;
#else
  int x_warn_maybe_uninitialized;
#define warn_maybe_uninitialized global_options.x_warn_maybe_uninitialized
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_braces;
#else
  int x_warn_missing_braces;
#define warn_missing_braces global_options.x_warn_missing_braces
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_declarations;
#else
  int x_warn_missing_declarations;
#define warn_missing_declarations global_options.x_warn_missing_declarations
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_field_initializers;
#else
  int x_warn_missing_field_initializers;
#define warn_missing_field_initializers global_options.x_warn_missing_field_initializers
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_parameter_type;
#else
  int x_warn_missing_parameter_type;
#define warn_missing_parameter_type global_options.x_warn_missing_parameter_type
#endif
#ifdef GENERATOR_FILE
extern int warn_missing_prototypes;
#else
  int x_warn_missing_prototypes;
#define warn_missing_prototypes global_options.x_warn_missing_prototypes
#endif
#ifdef GENERATOR_FILE
extern int warn_narrowing;
#else
  int x_warn_narrowing;
#define warn_narrowing global_options.x_warn_narrowing
#endif
#ifdef GENERATOR_FILE
extern int warn_nested_externs;
#else
  int x_warn_nested_externs;
#define warn_nested_externs global_options.x_warn_nested_externs
#endif
#ifdef GENERATOR_FILE
extern int warn_noexcept;
#else
  int x_warn_noexcept;
#define warn_noexcept global_options.x_warn_noexcept
#endif
#ifdef GENERATOR_FILE
extern int warn_nontemplate_friend;
#else
  int x_warn_nontemplate_friend;
#define warn_nontemplate_friend global_options.x_warn_nontemplate_friend
#endif
#ifdef GENERATOR_FILE
extern int warn_nonvdtor;
#else
  int x_warn_nonvdtor;
#define warn_nonvdtor global_options.x_warn_nonvdtor
#endif
#ifdef GENERATOR_FILE
extern int warn_nonnull;
#else
  int x_warn_nonnull;
#define warn_nonnull global_options.x_warn_nonnull
#endif
#ifdef GENERATOR_FILE
extern int darwin_warn_nonportable_cfstrings;
#else
  int x_darwin_warn_nonportable_cfstrings;
#define darwin_warn_nonportable_cfstrings global_options.x_darwin_warn_nonportable_cfstrings
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_cast;
#else
  int x_warn_old_style_cast;
#define warn_old_style_cast global_options.x_warn_old_style_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_declaration;
#else
  int x_warn_old_style_declaration;
#define warn_old_style_declaration global_options.x_warn_old_style_declaration
#endif
#ifdef GENERATOR_FILE
extern int warn_old_style_definition;
#else
  int x_warn_old_style_definition;
#define warn_old_style_definition global_options.x_warn_old_style_definition
#endif
#ifdef GENERATOR_FILE
extern int warn_openmp_simd;
#else
  int x_warn_openmp_simd;
#define warn_openmp_simd global_options.x_warn_openmp_simd
#endif
#ifdef GENERATOR_FILE
extern int flag_newer;
#else
  int x_flag_newer;
#define flag_newer global_options.x_flag_newer
#endif
#ifdef GENERATOR_FILE
extern int warn_overflow;
#else
  int x_warn_overflow;
#define warn_overflow global_options.x_warn_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_overlength_strings;
#else
  int x_warn_overlength_strings;
#define warn_overlength_strings global_options.x_warn_overlength_strings
#endif
#ifdef GENERATOR_FILE
extern int warn_overloaded_virtual;
#else
  int x_warn_overloaded_virtual;
#define warn_overloaded_virtual global_options.x_warn_overloaded_virtual
#endif
#ifdef GENERATOR_FILE
extern int warn_override_init;
#else
  int x_warn_override_init;
#define warn_override_init global_options.x_warn_override_init
#endif
#ifdef GENERATOR_FILE
extern int warn_packed;
#else
  int x_warn_packed;
#define warn_packed global_options.x_warn_packed
#endif
#ifdef GENERATOR_FILE
extern int warn_packed_bitfield_compat;
#else
  int x_warn_packed_bitfield_compat;
#define warn_packed_bitfield_compat global_options.x_warn_packed_bitfield_compat
#endif
#ifdef GENERATOR_FILE
extern int warn_padded;
#else
  int x_warn_padded;
#define warn_padded global_options.x_warn_padded
#endif
#ifdef GENERATOR_FILE
extern int warn_parentheses;
#else
  int x_warn_parentheses;
#define warn_parentheses global_options.x_warn_parentheses
#endif
#ifdef GENERATOR_FILE
extern int pedantic;
#else
  int x_pedantic;
#define pedantic global_options.x_pedantic
#endif
#ifdef GENERATOR_FILE
extern int warn_pmf2ptr;
#else
  int x_warn_pmf2ptr;
#define warn_pmf2ptr global_options.x_warn_pmf2ptr
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_arith;
#else
  int x_warn_pointer_arith;
#define warn_pointer_arith global_options.x_warn_pointer_arith
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_sign;
#else
  int x_warn_pointer_sign;
#define warn_pointer_sign global_options.x_warn_pointer_sign
#endif
#ifdef GENERATOR_FILE
extern int warn_pointer_to_int_cast;
#else
  int x_warn_pointer_to_int_cast;
#define warn_pointer_to_int_cast global_options.x_warn_pointer_to_int_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_pragmas;
#else
  int x_warn_pragmas;
#define warn_pragmas global_options.x_warn_pragmas
#endif
#ifdef GENERATOR_FILE
extern int warn_property_assign_default;
#else
  int x_warn_property_assign_default;
#define warn_property_assign_default global_options.x_warn_property_assign_default
#endif
#ifdef GENERATOR_FILE
extern int warn_protocol;
#else
  int x_warn_protocol;
#define warn_protocol global_options.x_warn_protocol
#endif
#ifdef GENERATOR_FILE
extern int warn_psabi;
#else
  int x_warn_psabi;
#define warn_psabi global_options.x_warn_psabi
#endif
#ifdef GENERATOR_FILE
extern int warn_redundant_decls;
#else
  int x_warn_redundant_decls;
#define warn_redundant_decls global_options.x_warn_redundant_decls
#endif
#ifdef GENERATOR_FILE
extern int flag_redundant;
#else
  int x_flag_redundant;
#define flag_redundant global_options.x_flag_redundant
#endif
#ifdef GENERATOR_FILE
extern int warn_reorder;
#else
  int x_warn_reorder;
#define warn_reorder global_options.x_warn_reorder
#endif
#ifdef GENERATOR_FILE
extern int warn_return_local_addr;
#else
  int x_warn_return_local_addr;
#define warn_return_local_addr global_options.x_warn_return_local_addr
#endif
#ifdef GENERATOR_FILE
extern int warn_return_type;
#else
  int x_warn_return_type;
#define warn_return_type global_options.x_warn_return_type
#endif
#ifdef GENERATOR_FILE
extern int warn_selector;
#else
  int x_warn_selector;
#define warn_selector global_options.x_warn_selector
#endif
#ifdef GENERATOR_FILE
extern int warn_sequence_point;
#else
  int x_warn_sequence_point;
#define warn_sequence_point global_options.x_warn_sequence_point
#endif
#ifdef GENERATOR_FILE
extern int warn_shadow;
#else
  int x_warn_shadow;
#define warn_shadow global_options.x_warn_shadow
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_compare;
#else
  int x_warn_sign_compare;
#define warn_sign_compare global_options.x_warn_sign_compare
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_conversion;
#else
  int x_warn_sign_conversion;
#define warn_sign_conversion global_options.x_warn_sign_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_sign_promo;
#else
  int x_warn_sign_promo;
#define warn_sign_promo global_options.x_warn_sign_promo
#endif
#ifdef GENERATOR_FILE
extern int warn_sizeof_pointer_memaccess;
#else
  int x_warn_sizeof_pointer_memaccess;
#define warn_sizeof_pointer_memaccess global_options.x_warn_sizeof_pointer_memaccess
#endif
#ifdef GENERATOR_FILE
extern int warn_stack_protect;
#else
  int x_warn_stack_protect;
#define warn_stack_protect global_options.x_warn_stack_protect
#endif
#ifdef GENERATOR_FILE
extern int warn_stack_usage;
#else
  int x_warn_stack_usage;
#define warn_stack_usage global_options.x_warn_stack_usage
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_aliasing;
#else
  int x_warn_strict_aliasing;
#define warn_strict_aliasing global_options.x_warn_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_null_sentinel;
#else
  int x_warn_strict_null_sentinel;
#define warn_strict_null_sentinel global_options.x_warn_strict_null_sentinel
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_overflow;
#else
  int x_warn_strict_overflow;
#define warn_strict_overflow global_options.x_warn_strict_overflow
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_prototypes;
#else
  int x_warn_strict_prototypes;
#define warn_strict_prototypes global_options.x_warn_strict_prototypes
#endif
#ifdef GENERATOR_FILE
extern int warn_strict_selector_match;
#else
  int x_warn_strict_selector_match;
#define warn_strict_selector_match global_options.x_warn_strict_selector_match
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_const;
#else
  int x_warn_suggest_attribute_const;
#define warn_suggest_attribute_const global_options.x_warn_suggest_attribute_const
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_format;
#else
  int x_warn_suggest_attribute_format;
#define warn_suggest_attribute_format global_options.x_warn_suggest_attribute_format
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_noreturn;
#else
  int x_warn_suggest_attribute_noreturn;
#define warn_suggest_attribute_noreturn global_options.x_warn_suggest_attribute_noreturn
#endif
#ifdef GENERATOR_FILE
extern int warn_suggest_attribute_pure;
#else
  int x_warn_suggest_attribute_pure;
#define warn_suggest_attribute_pure global_options.x_warn_suggest_attribute_pure
#endif
#ifdef GENERATOR_FILE
extern int warn_switch;
#else
  int x_warn_switch;
#define warn_switch global_options.x_warn_switch
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_default;
#else
  int x_warn_switch_default;
#define warn_switch_default global_options.x_warn_switch_default
#endif
#ifdef GENERATOR_FILE
extern int warn_switch_enum;
#else
  int x_warn_switch_enum;
#define warn_switch_enum global_options.x_warn_switch_enum
#endif
#ifdef GENERATOR_FILE
extern int warn_sync_nand;
#else
  int x_warn_sync_nand;
#define warn_sync_nand global_options.x_warn_sync_nand
#endif
#ifdef GENERATOR_FILE
extern int warn_synth;
#else
  int x_warn_synth;
#define warn_synth global_options.x_warn_synth
#endif
#ifdef GENERATOR_FILE
extern int warn_system_headers;
#else
  int x_warn_system_headers;
#define warn_system_headers global_options.x_warn_system_headers
#endif
#ifdef GENERATOR_FILE
extern int warn_traditional;
#else
  int x_warn_traditional;
#define warn_traditional global_options.x_warn_traditional
#endif
#ifdef GENERATOR_FILE
extern int warn_traditional_conversion;
#else
  int x_warn_traditional_conversion;
#define warn_traditional_conversion global_options.x_warn_traditional_conversion
#endif
#ifdef GENERATOR_FILE
extern int warn_trampolines;
#else
  int x_warn_trampolines;
#define warn_trampolines global_options.x_warn_trampolines
#endif
#ifdef GENERATOR_FILE
extern int warn_type_limits;
#else
  int x_warn_type_limits;
#define warn_type_limits global_options.x_warn_type_limits
#endif
#ifdef GENERATOR_FILE
extern int warn_undeclared_selector;
#else
  int x_warn_undeclared_selector;
#define warn_undeclared_selector global_options.x_warn_undeclared_selector
#endif
#ifdef GENERATOR_FILE
extern int warn_uninitialized;
#else
  int x_warn_uninitialized;
#define warn_uninitialized global_options.x_warn_uninitialized
#endif
#ifdef GENERATOR_FILE
extern int warn_unknown_pragmas;
#else
  int x_warn_unknown_pragmas;
#define warn_unknown_pragmas global_options.x_warn_unknown_pragmas
#endif
#ifdef GENERATOR_FILE
extern int warn_unsafe_loop_optimizations;
#else
  int x_warn_unsafe_loop_optimizations;
#define warn_unsafe_loop_optimizations global_options.x_warn_unsafe_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int warn_unsuffixed_float_constants;
#else
  int x_warn_unsuffixed_float_constants;
#define warn_unsuffixed_float_constants global_options.x_warn_unsuffixed_float_constants
#endif
#ifdef GENERATOR_FILE
extern int warn_unused;
#else
  int x_warn_unused;
#define warn_unused global_options.x_warn_unused
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_but_set_parameter;
#else
  int x_warn_unused_but_set_parameter;
#define warn_unused_but_set_parameter global_options.x_warn_unused_but_set_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_but_set_variable;
#else
  int x_warn_unused_but_set_variable;
#define warn_unused_but_set_variable global_options.x_warn_unused_but_set_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_function;
#else
  int x_warn_unused_function;
#define warn_unused_function global_options.x_warn_unused_function
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_label;
#else
  int x_warn_unused_label;
#define warn_unused_label global_options.x_warn_unused_label
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_local_typedefs;
#else
  int x_warn_unused_local_typedefs;
#define warn_unused_local_typedefs global_options.x_warn_unused_local_typedefs
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_unused_macros;
#else
  int x_cpp_warn_unused_macros;
#define cpp_warn_unused_macros global_options.x_cpp_warn_unused_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_parameter;
#else
  int x_warn_unused_parameter;
#define warn_unused_parameter global_options.x_warn_unused_parameter
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_result;
#else
  int x_warn_unused_result;
#define warn_unused_result global_options.x_warn_unused_result
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_value;
#else
  int x_warn_unused_value;
#define warn_unused_value global_options.x_warn_unused_value
#endif
#ifdef GENERATOR_FILE
extern int warn_unused_variable;
#else
  int x_warn_unused_variable;
#define warn_unused_variable global_options.x_warn_unused_variable
#endif
#ifdef GENERATOR_FILE
extern int warn_useless_cast;
#else
  int x_warn_useless_cast;
#define warn_useless_cast global_options.x_warn_useless_cast
#endif
#ifdef GENERATOR_FILE
extern int warn_varargs;
#else
  int x_warn_varargs;
#define warn_varargs global_options.x_warn_varargs
#endif
#ifdef GENERATOR_FILE
extern int cpp_warn_variadic_macros;
#else
  int x_cpp_warn_variadic_macros;
#define cpp_warn_variadic_macros global_options.x_cpp_warn_variadic_macros
#endif
#ifdef GENERATOR_FILE
extern int warn_vector_operation_performance;
#else
  int x_warn_vector_operation_performance;
#define warn_vector_operation_performance global_options.x_warn_vector_operation_performance
#endif
#ifdef GENERATOR_FILE
extern int warn_virtual_move_assign;
#else
  int x_warn_virtual_move_assign;
#define warn_virtual_move_assign global_options.x_warn_virtual_move_assign
#endif
#ifdef GENERATOR_FILE
extern int warn_vla;
#else
  int x_warn_vla;
#define warn_vla global_options.x_warn_vla
#endif
#ifdef GENERATOR_FILE
extern int warn_volatile_register_var;
#else
  int x_warn_volatile_register_var;
#define warn_volatile_register_var global_options.x_warn_volatile_register_var
#endif
#ifdef GENERATOR_FILE
extern int warn_write_strings;
#else
  int x_warn_write_strings;
#define warn_write_strings global_options.x_warn_write_strings
#endif
#ifdef GENERATOR_FILE
extern int warn_zero_as_null_pointer_constant;
#else
  int x_warn_zero_as_null_pointer_constant;
#define warn_zero_as_null_pointer_constant global_options.x_warn_zero_as_null_pointer_constant
#endif
#ifdef GENERATOR_FILE
extern const char *aux_info_file_name;
#else
  const char *x_aux_info_file_name;
#define aux_info_file_name global_options.x_aux_info_file_name
#endif
#ifdef GENERATOR_FILE
extern const char *aux_base_name;
#else
  const char *x_aux_base_name;
#define aux_base_name global_options.x_aux_base_name
#endif
#ifdef GENERATOR_FILE
extern const char *dump_base_name;
#else
  const char *x_dump_base_name;
#define dump_base_name global_options.x_dump_base_name
#endif
#ifdef GENERATOR_FILE
extern const char *dump_dir_name;
#else
  const char *x_dump_dir_name;
#define dump_dir_name global_options.x_dump_dir_name
#endif
#ifdef GENERATOR_FILE
extern int flag_pic;
#else
  int x_flag_pic;
#define flag_pic global_options.x_flag_pic
#endif
#ifdef GENERATOR_FILE
extern int flag_pie;
#else
  int x_flag_pie;
#define flag_pie global_options.x_flag_pie
#endif
#ifdef GENERATOR_FILE
extern int flag_abi_version;
#else
  int x_flag_abi_version;
#define flag_abi_version global_options.x_flag_abi_version
#endif
#ifdef GENERATOR_FILE
extern int flag_access_control;
#else
  int x_flag_access_control;
#define flag_access_control global_options.x_flag_access_control
#endif
#ifdef GENERATOR_FILE
extern const char *ada_specs_parent;
#else
  const char *x_ada_specs_parent;
#define ada_specs_parent global_options.x_ada_specs_parent
#endif
#ifdef GENERATOR_FILE
extern int flag_aggressive_loop_optimizations;
#else
  int x_flag_aggressive_loop_optimizations;
#define flag_aggressive_loop_optimizations global_options.x_flag_aggressive_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int align_functions;
#else
  int x_align_functions;
#define align_functions global_options.x_align_functions
#endif
#ifdef GENERATOR_FILE
extern int align_jumps;
#else
  int x_align_jumps;
#define align_jumps global_options.x_align_jumps
#endif
#ifdef GENERATOR_FILE
extern int align_labels;
#else
  int x_align_labels;
#define align_labels global_options.x_align_labels
#endif
#ifdef GENERATOR_FILE
extern int align_loops;
#else
  int x_align_loops;
#define align_loops global_options.x_align_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_allow_parameterless_variadic_functions;
#else
  int x_flag_allow_parameterless_variadic_functions;
#define flag_allow_parameterless_variadic_functions global_options.x_flag_allow_parameterless_variadic_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_apple_kext;
#else
  int x_flag_apple_kext;
#define flag_apple_kext global_options.x_flag_apple_kext
#endif
#ifdef GENERATOR_FILE
extern int flag_no_asm;
#else
  int x_flag_no_asm;
#define flag_no_asm global_options.x_flag_no_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_assert;
#else
  int x_flag_assert;
#define flag_assert global_options.x_flag_assert
#endif
#ifdef GENERATOR_FILE
extern int flag_associative_math;
#else
  int x_flag_associative_math;
#define flag_associative_math global_options.x_flag_associative_math
#endif
#ifdef GENERATOR_FILE
extern int flag_asynchronous_unwind_tables;
#else
  int x_flag_asynchronous_unwind_tables;
#define flag_asynchronous_unwind_tables global_options.x_flag_asynchronous_unwind_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_auto_inc_dec;
#else
  int x_flag_auto_inc_dec;
#define flag_auto_inc_dec global_options.x_flag_auto_inc_dec
#endif
#ifdef GENERATOR_FILE
extern int flag_bootstrap_classes;
#else
  int x_flag_bootstrap_classes;
#define flag_bootstrap_classes global_options.x_flag_bootstrap_classes
#endif
#ifdef GENERATOR_FILE
extern int flag_bounds_check;
#else
  int x_flag_bounds_check;
#define flag_bounds_check global_options.x_flag_bounds_check
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_on_count_reg;
#else
  int x_flag_branch_on_count_reg;
#define flag_branch_on_count_reg global_options.x_flag_branch_on_count_reg
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_probabilities;
#else
  int x_flag_branch_probabilities;
#define flag_branch_probabilities global_options.x_flag_branch_probabilities
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_target_load_optimize;
#else
  int x_flag_branch_target_load_optimize;
#define flag_branch_target_load_optimize global_options.x_flag_branch_target_load_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_branch_target_load_optimize2;
#else
  int x_flag_branch_target_load_optimize2;
#define flag_branch_target_load_optimize2 global_options.x_flag_branch_target_load_optimize2
#endif
#ifdef GENERATOR_FILE
extern int flag_btr_bb_exclusive;
#else
  int x_flag_btr_bb_exclusive;
#define flag_btr_bb_exclusive global_options.x_flag_btr_bb_exclusive
#endif
#ifdef GENERATOR_FILE
extern int flag_building_libgcc;
#else
  int x_flag_building_libgcc;
#define flag_building_libgcc global_options.x_flag_building_libgcc
#endif
#ifdef GENERATOR_FILE
extern int flag_no_builtin;
#else
  int x_flag_no_builtin;
#define flag_no_builtin global_options.x_flag_no_builtin
#endif
#ifdef GENERATOR_FILE
extern void *common_deferred_options;
#else
  void *x_common_deferred_options;
#define common_deferred_options global_options.x_common_deferred_options
#endif
#ifdef GENERATOR_FILE
extern int flag_caller_saves;
#else
  int x_flag_caller_saves;
#define flag_caller_saves global_options.x_flag_caller_saves
#endif
#ifdef GENERATOR_FILE
extern int flag_check_data_deps;
#else
  int x_flag_check_data_deps;
#define flag_check_data_deps global_options.x_flag_check_data_deps
#endif
#ifdef GENERATOR_FILE
extern int flag_check_new;
#else
  int x_flag_check_new;
#define flag_check_new global_options.x_flag_check_new
#endif
#ifdef GENERATOR_FILE
extern int flag_check_references;
#else
  int x_flag_check_references;
#define flag_check_references global_options.x_flag_check_references
#endif
#ifdef GENERATOR_FILE
extern int flag_cilkplus;
#else
  int x_flag_cilkplus;
#define flag_cilkplus global_options.x_flag_cilkplus
#endif
#ifdef GENERATOR_FILE
extern int flag_combine_stack_adjustments;
#else
  int x_flag_combine_stack_adjustments;
#define flag_combine_stack_adjustments global_options.x_flag_combine_stack_adjustments
#endif
#ifdef GENERATOR_FILE
extern int flag_no_common;
#else
  int x_flag_no_common;
#define flag_no_common global_options.x_flag_no_common
#endif
#ifdef GENERATOR_FILE
extern int flag_compare_debug;
#else
  int x_flag_compare_debug;
#define flag_compare_debug global_options.x_flag_compare_debug
#endif
#ifdef GENERATOR_FILE
extern const char *flag_compare_debug_opt;
#else
  const char *x_flag_compare_debug_opt;
#define flag_compare_debug_opt global_options.x_flag_compare_debug_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_compare_elim_after_reload;
#else
  int x_flag_compare_elim_after_reload;
#define flag_compare_elim_after_reload global_options.x_flag_compare_elim_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_conserve_space;
#else
  int x_flag_conserve_space;
#define flag_conserve_space global_options.x_flag_conserve_space
#endif
#ifdef GENERATOR_FILE
extern int flag_conserve_stack;
#else
  int x_flag_conserve_stack;
#define flag_conserve_stack global_options.x_flag_conserve_stack
#endif
#ifdef GENERATOR_FILE
extern int max_constexpr_depth;
#else
  int x_max_constexpr_depth;
#define max_constexpr_depth global_options.x_max_constexpr_depth
#endif
#ifdef GENERATOR_FILE
extern int flag_cprop_registers;
#else
  int x_flag_cprop_registers;
#define flag_cprop_registers global_options.x_flag_cprop_registers
#endif
#ifdef GENERATOR_FILE
extern int flag_crossjumping;
#else
  int x_flag_crossjumping;
#define flag_crossjumping global_options.x_flag_crossjumping
#endif
#ifdef GENERATOR_FILE
extern int flag_cse_follow_jumps;
#else
  int x_flag_cse_follow_jumps;
#define flag_cse_follow_jumps global_options.x_flag_cse_follow_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_cx_fortran_rules;
#else
  int x_flag_cx_fortran_rules;
#define flag_cx_fortran_rules global_options.x_flag_cx_fortran_rules
#endif
#ifdef GENERATOR_FILE
extern int flag_cx_limited_range;
#else
  int x_flag_cx_limited_range;
#define flag_cx_limited_range global_options.x_flag_cx_limited_range
#endif
#ifdef GENERATOR_FILE
extern int flag_data_sections;
#else
  int x_flag_data_sections;
#define flag_data_sections global_options.x_flag_data_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_dce;
#else
  int x_flag_dce;
#define flag_dce global_options.x_flag_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_types_section;
#else
  int x_flag_debug_types_section;
#define flag_debug_types_section global_options.x_flag_debug_types_section
#endif
#ifdef GENERATOR_FILE
extern int flag_declone_ctor_dtor;
#else
  int x_flag_declone_ctor_dtor;
#define flag_declone_ctor_dtor global_options.x_flag_declone_ctor_dtor
#endif
#ifdef GENERATOR_FILE
extern int flag_deduce_init_list;
#else
  int x_flag_deduce_init_list;
#define flag_deduce_init_list global_options.x_flag_deduce_init_list
#endif
#ifdef GENERATOR_FILE
extern int flag_defer_pop;
#else
  int x_flag_defer_pop;
#define flag_defer_pop global_options.x_flag_defer_pop
#endif
#ifdef GENERATOR_FILE
extern int flag_delayed_branch;
#else
  int x_flag_delayed_branch;
#define flag_delayed_branch global_options.x_flag_delayed_branch
#endif
#ifdef GENERATOR_FILE
extern int flag_delete_dead_exceptions;
#else
  int x_flag_delete_dead_exceptions;
#define flag_delete_dead_exceptions global_options.x_flag_delete_dead_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_delete_null_pointer_checks;
#else
  int x_flag_delete_null_pointer_checks;
#define flag_delete_null_pointer_checks global_options.x_flag_delete_null_pointer_checks
#endif
#ifdef GENERATOR_FILE
extern int flag_devirtualize;
#else
  int x_flag_devirtualize;
#define flag_devirtualize global_options.x_flag_devirtualize
#endif
#ifdef GENERATOR_FILE
extern int flag_devirtualize_speculatively;
#else
  int x_flag_devirtualize_speculatively;
#define flag_devirtualize_speculatively global_options.x_flag_devirtualize_speculatively
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_color;
#else
  int x_flag_diagnostics_show_color;
#define flag_diagnostics_show_color global_options.x_flag_diagnostics_show_color
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_caret;
#else
  int x_flag_diagnostics_show_caret;
#define flag_diagnostics_show_caret global_options.x_flag_diagnostics_show_caret
#endif
#ifdef GENERATOR_FILE
extern int flag_diagnostics_show_option;
#else
  int x_flag_diagnostics_show_option;
#define flag_diagnostics_show_option global_options.x_flag_diagnostics_show_option
#endif
#ifdef GENERATOR_FILE
extern int flag_dse;
#else
  int x_flag_dse;
#define flag_dse global_options.x_flag_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_ada_spec;
#else
  int x_flag_dump_ada_spec;
#define flag_dump_ada_spec global_options.x_flag_dump_ada_spec
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_ada_spec_slim;
#else
  int x_flag_dump_ada_spec_slim;
#define flag_dump_ada_spec_slim global_options.x_flag_dump_ada_spec_slim
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_final_insns;
#else
  const char *x_flag_dump_final_insns;
#define flag_dump_final_insns global_options.x_flag_dump_final_insns
#endif
#ifdef GENERATOR_FILE
extern const char *flag_dump_go_spec;
#else
  const char *x_flag_dump_go_spec;
#define flag_dump_go_spec global_options.x_flag_dump_go_spec
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_noaddr;
#else
  int x_flag_dump_noaddr;
#define flag_dump_noaddr global_options.x_flag_dump_noaddr
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_passes;
#else
  int x_flag_dump_passes;
#define flag_dump_passes global_options.x_flag_dump_passes
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_unnumbered;
#else
  int x_flag_dump_unnumbered;
#define flag_dump_unnumbered global_options.x_flag_dump_unnumbered
#endif
#ifdef GENERATOR_FILE
extern int flag_dump_unnumbered_links;
#else
  int x_flag_dump_unnumbered_links;
#define flag_dump_unnumbered_links global_options.x_flag_dump_unnumbered_links
#endif
#ifdef GENERATOR_FILE
extern int flag_dwarf2_cfi_asm;
#else
  int x_flag_dwarf2_cfi_asm;
#define flag_dwarf2_cfi_asm global_options.x_flag_dwarf2_cfi_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_early_inlining;
#else
  int x_flag_early_inlining;
#define flag_early_inlining global_options.x_flag_early_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_elide_constructors;
#else
  int x_flag_elide_constructors;
#define flag_elide_constructors global_options.x_flag_elide_constructors
#endif
#ifdef GENERATOR_FILE
extern int flag_eliminate_dwarf2_dups;
#else
  int x_flag_eliminate_dwarf2_dups;
#define flag_eliminate_dwarf2_dups global_options.x_flag_eliminate_dwarf2_dups
#endif
#ifdef GENERATOR_FILE
extern int flag_debug_only_used_symbols;
#else
  int x_flag_debug_only_used_symbols;
#define flag_debug_only_used_symbols global_options.x_flag_debug_only_used_symbols
#endif
#ifdef GENERATOR_FILE
extern int flag_eliminate_unused_debug_types;
#else
  int x_flag_eliminate_unused_debug_types;
#define flag_eliminate_unused_debug_types global_options.x_flag_eliminate_unused_debug_types
#endif
#ifdef GENERATOR_FILE
extern int flag_emit_class_debug_always;
#else
  int x_flag_emit_class_debug_always;
#define flag_emit_class_debug_always global_options.x_flag_emit_class_debug_always
#endif
#ifdef GENERATOR_FILE
extern int flag_emit_class_files;
#else
  int x_flag_emit_class_files;
#define flag_emit_class_files global_options.x_flag_emit_class_files
#endif
#ifdef GENERATOR_FILE
extern int flag_enforce_eh_specs;
#else
  int x_flag_enforce_eh_specs;
#define flag_enforce_eh_specs global_options.x_flag_enforce_eh_specs
#endif
#ifdef GENERATOR_FILE
extern int flag_exceptions;
#else
  int x_flag_exceptions;
#define flag_exceptions global_options.x_flag_exceptions
#endif
#ifdef GENERATOR_FILE
extern enum excess_precision flag_excess_precision_cmdline;
#else
  enum excess_precision x_flag_excess_precision_cmdline;
#define flag_excess_precision_cmdline global_options.x_flag_excess_precision_cmdline
#endif
#ifdef GENERATOR_FILE
extern int flag_expensive_optimizations;
#else
  int x_flag_expensive_optimizations;
#define flag_expensive_optimizations global_options.x_flag_expensive_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_extern_tls_init;
#else
  int x_flag_extern_tls_init;
#define flag_extern_tls_init global_options.x_flag_extern_tls_init
#endif
#ifdef GENERATOR_FILE
extern int flag_fat_lto_objects;
#else
  int x_flag_fat_lto_objects;
#define flag_fat_lto_objects global_options.x_flag_fat_lto_objects
#endif
#ifdef GENERATOR_FILE
extern int flag_filelist_file;
#else
  int x_flag_filelist_file;
#define flag_filelist_file global_options.x_flag_filelist_file
#endif
#ifdef GENERATOR_FILE
extern int flag_finite_math_only;
#else
  int x_flag_finite_math_only;
#define flag_finite_math_only global_options.x_flag_finite_math_only
#endif
#ifdef GENERATOR_FILE
extern int flag_float_store;
#else
  int x_flag_float_store;
#define flag_float_store global_options.x_flag_float_store
#endif
#ifdef GENERATOR_FILE
extern int flag_new_for_scope;
#else
  int x_flag_new_for_scope;
#define flag_new_for_scope global_options.x_flag_new_for_scope
#endif
#ifdef GENERATOR_FILE
extern int flag_force_classes_archive_check;
#else
  int x_flag_force_classes_archive_check;
#define flag_force_classes_archive_check global_options.x_flag_force_classes_archive_check
#endif
#ifdef GENERATOR_FILE
extern int flag_forward_propagate;
#else
  int x_flag_forward_propagate;
#define flag_forward_propagate global_options.x_flag_forward_propagate
#endif
#ifdef GENERATOR_FILE
extern enum fp_contract_mode flag_fp_contract_mode;
#else
  enum fp_contract_mode x_flag_fp_contract_mode;
#define flag_fp_contract_mode global_options.x_flag_fp_contract_mode
#endif
#ifdef GENERATOR_FILE
extern int flag_friend_injection;
#else
  int x_flag_friend_injection;
#define flag_friend_injection global_options.x_flag_friend_injection
#endif
#ifdef GENERATOR_FILE
extern int flag_no_function_cse;
#else
  int x_flag_no_function_cse;
#define flag_no_function_cse global_options.x_flag_no_function_cse
#endif
#ifdef GENERATOR_FILE
extern int flag_function_sections;
#else
  int x_flag_function_sections;
#define flag_function_sections global_options.x_flag_function_sections
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse;
#else
  int x_flag_gcse;
#define flag_gcse global_options.x_flag_gcse
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_after_reload;
#else
  int x_flag_gcse_after_reload;
#define flag_gcse_after_reload global_options.x_flag_gcse_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_las;
#else
  int x_flag_gcse_las;
#define flag_gcse_las global_options.x_flag_gcse_las
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_lm;
#else
  int x_flag_gcse_lm;
#define flag_gcse_lm global_options.x_flag_gcse_lm
#endif
#ifdef GENERATOR_FILE
extern int flag_gcse_sm;
#else
  int x_flag_gcse_sm;
#define flag_gcse_sm global_options.x_flag_gcse_sm
#endif
#ifdef GENERATOR_FILE
extern int flag_no_gnu_keywords;
#else
  int x_flag_no_gnu_keywords;
#define flag_no_gnu_keywords global_options.x_flag_no_gnu_keywords
#endif
#ifdef GENERATOR_FILE
extern int flag_next_runtime;
#else
  int x_flag_next_runtime;
#define flag_next_runtime global_options.x_flag_next_runtime
#endif
#ifdef GENERATOR_FILE
extern int flag_tm;
#else
  int x_flag_tm;
#define flag_tm global_options.x_flag_tm
#endif
#ifdef GENERATOR_FILE
extern int flag_gnu_unique;
#else
  int x_flag_gnu_unique;
#define flag_gnu_unique global_options.x_flag_gnu_unique
#endif
#ifdef GENERATOR_FILE
extern int flag_gnu89_inline;
#else
  int x_flag_gnu89_inline;
#define flag_gnu89_inline global_options.x_flag_gnu89_inline
#endif
#ifdef GENERATOR_FILE
extern int go_check_divide_overflow;
#else
  int x_go_check_divide_overflow;
#define go_check_divide_overflow global_options.x_go_check_divide_overflow
#endif
#ifdef GENERATOR_FILE
extern int go_check_divide_zero;
#else
  int x_go_check_divide_zero;
#define go_check_divide_zero global_options.x_go_check_divide_zero
#endif
#ifdef GENERATOR_FILE
extern int flag_graphite;
#else
  int x_flag_graphite;
#define flag_graphite global_options.x_flag_graphite
#endif
#ifdef GENERATOR_FILE
extern int flag_graphite_identity;
#else
  int x_flag_graphite_identity;
#define flag_graphite_identity global_options.x_flag_graphite_identity
#endif
#ifdef GENERATOR_FILE
extern int flag_guess_branch_prob;
#else
  int x_flag_guess_branch_prob;
#define flag_guess_branch_prob global_options.x_flag_guess_branch_prob
#endif
#ifdef GENERATOR_FILE
extern int flag_hash_synchronization;
#else
  int x_flag_hash_synchronization;
#define flag_hash_synchronization global_options.x_flag_hash_synchronization
#endif
#ifdef GENERATOR_FILE
extern int flag_hoist_adjacent_loads;
#else
  int x_flag_hoist_adjacent_loads;
#define flag_hoist_adjacent_loads global_options.x_flag_hoist_adjacent_loads
#endif
#ifdef GENERATOR_FILE
extern int flag_no_ident;
#else
  int x_flag_no_ident;
#define flag_no_ident global_options.x_flag_no_ident
#endif
#ifdef GENERATOR_FILE
extern int flag_if_conversion;
#else
  int x_flag_if_conversion;
#define flag_if_conversion global_options.x_flag_if_conversion
#endif
#ifdef GENERATOR_FILE
extern int flag_if_conversion2;
#else
  int x_flag_if_conversion2;
#define flag_if_conversion2 global_options.x_flag_if_conversion2
#endif
#ifdef GENERATOR_FILE
extern int flag_implement_inlines;
#else
  int x_flag_implement_inlines;
#define flag_implement_inlines global_options.x_flag_implement_inlines
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_inline_templates;
#else
  int x_flag_implicit_inline_templates;
#define flag_implicit_inline_templates global_options.x_flag_implicit_inline_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_implicit_templates;
#else
  int x_flag_implicit_templates;
#define flag_implicit_templates global_options.x_flag_implicit_templates
#endif
#ifdef GENERATOR_FILE
extern int flag_indirect_classes;
#else
  int x_flag_indirect_classes;
#define flag_indirect_classes global_options.x_flag_indirect_classes
#endif
#ifdef GENERATOR_FILE
extern int flag_indirect_dispatch;
#else
  int x_flag_indirect_dispatch;
#define flag_indirect_dispatch global_options.x_flag_indirect_dispatch
#endif
#ifdef GENERATOR_FILE
extern int flag_indirect_inlining;
#else
  int x_flag_indirect_inlining;
#define flag_indirect_inlining global_options.x_flag_indirect_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_inhibit_size_directive;
#else
  int x_flag_inhibit_size_directive;
#define flag_inhibit_size_directive global_options.x_flag_inhibit_size_directive
#endif
#ifdef GENERATOR_FILE
extern int flag_no_inline;
#else
  int x_flag_no_inline;
#define flag_no_inline global_options.x_flag_no_inline
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_atomics;
#else
  int x_flag_inline_atomics;
#define flag_inline_atomics global_options.x_flag_inline_atomics
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_functions;
#else
  int x_flag_inline_functions;
#define flag_inline_functions global_options.x_flag_inline_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_functions_called_once;
#else
  int x_flag_inline_functions_called_once;
#define flag_inline_functions_called_once global_options.x_flag_inline_functions_called_once
#endif
#ifdef GENERATOR_FILE
extern int flag_inline_small_functions;
#else
  int x_flag_inline_small_functions;
#define flag_inline_small_functions global_options.x_flag_inline_small_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_instrument_function_entry_exit;
#else
  int x_flag_instrument_function_entry_exit;
#define flag_instrument_function_entry_exit global_options.x_flag_instrument_function_entry_exit
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp;
#else
  int x_flag_ipa_cp;
#define flag_ipa_cp global_options.x_flag_ipa_cp
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_cp_clone;
#else
  int x_flag_ipa_cp_clone;
#define flag_ipa_cp_clone global_options.x_flag_ipa_cp_clone
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_profile;
#else
  int x_flag_ipa_profile;
#define flag_ipa_profile global_options.x_flag_ipa_profile
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_pta;
#else
  int x_flag_ipa_pta;
#define flag_ipa_pta global_options.x_flag_ipa_pta
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_pure_const;
#else
  int x_flag_ipa_pure_const;
#define flag_ipa_pure_const global_options.x_flag_ipa_pure_const
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_reference;
#else
  int x_flag_ipa_reference;
#define flag_ipa_reference global_options.x_flag_ipa_reference
#endif
#ifdef GENERATOR_FILE
extern int flag_ipa_sra;
#else
  int x_flag_ipa_sra;
#define flag_ipa_sra global_options.x_flag_ipa_sra
#endif
#ifdef GENERATOR_FILE
extern enum ira_algorithm flag_ira_algorithm;
#else
  enum ira_algorithm x_flag_ira_algorithm;
#define flag_ira_algorithm global_options.x_flag_ira_algorithm
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_hoist_pressure;
#else
  int x_flag_ira_hoist_pressure;
#define flag_ira_hoist_pressure global_options.x_flag_ira_hoist_pressure
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_loop_pressure;
#else
  int x_flag_ira_loop_pressure;
#define flag_ira_loop_pressure global_options.x_flag_ira_loop_pressure
#endif
#ifdef GENERATOR_FILE
extern enum ira_region flag_ira_region;
#else
  enum ira_region x_flag_ira_region;
#define flag_ira_region global_options.x_flag_ira_region
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_share_save_slots;
#else
  int x_flag_ira_share_save_slots;
#define flag_ira_share_save_slots global_options.x_flag_ira_share_save_slots
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_share_spill_slots;
#else
  int x_flag_ira_share_spill_slots;
#define flag_ira_share_spill_slots global_options.x_flag_ira_share_spill_slots
#endif
#ifdef GENERATOR_FILE
extern int flag_ira_verbose;
#else
  int x_flag_ira_verbose;
#define flag_ira_verbose global_options.x_flag_ira_verbose
#endif
#ifdef GENERATOR_FILE
extern int flag_isolate_erroneous_paths_attribute;
#else
  int x_flag_isolate_erroneous_paths_attribute;
#define flag_isolate_erroneous_paths_attribute global_options.x_flag_isolate_erroneous_paths_attribute
#endif
#ifdef GENERATOR_FILE
extern int flag_isolate_erroneous_paths_dereference;
#else
  int x_flag_isolate_erroneous_paths_dereference;
#define flag_isolate_erroneous_paths_dereference global_options.x_flag_isolate_erroneous_paths_dereference
#endif
#ifdef GENERATOR_FILE
extern int flag_ivopts;
#else
  int x_flag_ivopts;
#define flag_ivopts global_options.x_flag_ivopts
#endif
#ifdef GENERATOR_FILE
extern int flag_jni;
#else
  int x_flag_jni;
#define flag_jni global_options.x_flag_jni
#endif
#ifdef GENERATOR_FILE
extern int flag_jump_tables;
#else
  int x_flag_jump_tables;
#define flag_jump_tables global_options.x_flag_jump_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_inline_dllexport;
#else
  int x_flag_keep_inline_dllexport;
#define flag_keep_inline_dllexport global_options.x_flag_keep_inline_dllexport
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_inline_functions;
#else
  int x_flag_keep_inline_functions;
#define flag_keep_inline_functions global_options.x_flag_keep_inline_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_keep_static_consts;
#else
  int x_flag_keep_static_consts;
#define flag_keep_static_consts global_options.x_flag_keep_static_consts
#endif
#ifdef GENERATOR_FILE
extern int flag_lax_vector_conversions;
#else
  int x_flag_lax_vector_conversions;
#define flag_lax_vector_conversions global_options.x_flag_lax_vector_conversions
#endif
#ifdef GENERATOR_FILE
extern int flag_leading_underscore;
#else
  int x_flag_leading_underscore;
#define flag_leading_underscore global_options.x_flag_leading_underscore
#endif
#ifdef GENERATOR_FILE
extern int flag_live_range_shrinkage;
#else
  int x_flag_live_range_shrinkage;
#define flag_live_range_shrinkage global_options.x_flag_live_range_shrinkage
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_block;
#else
  int x_flag_loop_block;
#define flag_loop_block global_options.x_flag_loop_block
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_interchange;
#else
  int x_flag_loop_interchange;
#define flag_loop_interchange global_options.x_flag_loop_interchange
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_optimize_isl;
#else
  int x_flag_loop_optimize_isl;
#define flag_loop_optimize_isl global_options.x_flag_loop_optimize_isl
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_parallelize_all;
#else
  int x_flag_loop_parallelize_all;
#define flag_loop_parallelize_all global_options.x_flag_loop_parallelize_all
#endif
#ifdef GENERATOR_FILE
extern int flag_loop_strip_mine;
#else
  int x_flag_loop_strip_mine;
#define flag_loop_strip_mine global_options.x_flag_loop_strip_mine
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_compression_level;
#else
  int x_flag_lto_compression_level;
#define flag_lto_compression_level global_options.x_flag_lto_compression_level
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_partition_1to1;
#else
  int x_flag_lto_partition_1to1;
#define flag_lto_partition_1to1 global_options.x_flag_lto_partition_1to1
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_partition_balanced;
#else
  int x_flag_lto_partition_balanced;
#define flag_lto_partition_balanced global_options.x_flag_lto_partition_balanced
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_partition_max;
#else
  int x_flag_lto_partition_max;
#define flag_lto_partition_max global_options.x_flag_lto_partition_max
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_partition_none;
#else
  int x_flag_lto_partition_none;
#define flag_lto_partition_none global_options.x_flag_lto_partition_none
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_report;
#else
  int x_flag_lto_report;
#define flag_lto_report global_options.x_flag_lto_report
#endif
#ifdef GENERATOR_FILE
extern int flag_lto_report_wpa;
#else
  int x_flag_lto_report_wpa;
#define flag_lto_report_wpa global_options.x_flag_lto_report_wpa
#endif
#ifdef GENERATOR_FILE
extern const char *flag_lto;
#else
  const char *x_flag_lto;
#define flag_lto global_options.x_flag_lto
#endif
#ifdef GENERATOR_FILE
extern int flag_ltrans;
#else
  int x_flag_ltrans;
#define flag_ltrans global_options.x_flag_ltrans
#endif
#ifdef GENERATOR_FILE
extern const char *ltrans_output_list;
#else
  const char *x_ltrans_output_list;
#define ltrans_output_list global_options.x_ltrans_output_list
#endif
#ifdef GENERATOR_FILE
extern int flag_errno_math;
#else
  int x_flag_errno_math;
#define flag_errno_math global_options.x_flag_errno_math
#endif
#ifdef GENERATOR_FILE
extern int flag_max_errors;
#else
  int x_flag_max_errors;
#define flag_max_errors global_options.x_flag_max_errors
#endif
#ifdef GENERATOR_FILE
extern int mem_report;
#else
  int x_mem_report;
#define mem_report global_options.x_mem_report
#endif
#ifdef GENERATOR_FILE
extern int mem_report_wpa;
#else
  int x_mem_report_wpa;
#define mem_report_wpa global_options.x_mem_report_wpa
#endif
#ifdef GENERATOR_FILE
extern int flag_merge_constants;
#else
  int x_flag_merge_constants;
#define flag_merge_constants global_options.x_flag_merge_constants
#endif
#ifdef GENERATOR_FILE
extern int flag_merge_debug_strings;
#else
  int x_flag_merge_debug_strings;
#define flag_merge_debug_strings global_options.x_flag_merge_debug_strings
#endif
#ifdef GENERATOR_FILE
extern int flag_modulo_sched;
#else
  int x_flag_modulo_sched;
#define flag_modulo_sched global_options.x_flag_modulo_sched
#endif
#ifdef GENERATOR_FILE
extern int flag_modulo_sched_allow_regmoves;
#else
  int x_flag_modulo_sched_allow_regmoves;
#define flag_modulo_sched_allow_regmoves global_options.x_flag_modulo_sched_allow_regmoves
#endif
#ifdef GENERATOR_FILE
extern int flag_move_loop_invariants;
#else
  int x_flag_move_loop_invariants;
#define flag_move_loop_invariants global_options.x_flag_move_loop_invariants
#endif
#ifdef GENERATOR_FILE
extern int flag_ms_extensions;
#else
  int x_flag_ms_extensions;
#define flag_ms_extensions global_options.x_flag_ms_extensions
#endif
#ifdef GENERATOR_FILE
extern int flag_nil_receivers;
#else
  int x_flag_nil_receivers;
#define flag_nil_receivers global_options.x_flag_nil_receivers
#endif
#ifdef GENERATOR_FILE
extern int flag_non_call_exceptions;
#else
  int x_flag_non_call_exceptions;
#define flag_non_call_exceptions global_options.x_flag_non_call_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_no_nonansi_builtin;
#else
  int x_flag_no_nonansi_builtin;
#define flag_no_nonansi_builtin global_options.x_flag_no_nonansi_builtin
#endif
#ifdef GENERATOR_FILE
extern int flag_nothrow_opt;
#else
  int x_flag_nothrow_opt;
#define flag_nothrow_opt global_options.x_flag_nothrow_opt
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_abi;
#else
  int x_flag_objc_abi;
#define flag_objc_abi global_options.x_flag_objc_abi
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_call_cxx_cdtors;
#else
  int x_flag_objc_call_cxx_cdtors;
#define flag_objc_call_cxx_cdtors global_options.x_flag_objc_call_cxx_cdtors
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_direct_dispatch;
#else
  int x_flag_objc_direct_dispatch;
#define flag_objc_direct_dispatch global_options.x_flag_objc_direct_dispatch
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_exceptions;
#else
  int x_flag_objc_exceptions;
#define flag_objc_exceptions global_options.x_flag_objc_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_gc;
#else
  int x_flag_objc_gc;
#define flag_objc_gc global_options.x_flag_objc_gc
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_nilcheck;
#else
  int x_flag_objc_nilcheck;
#define flag_objc_nilcheck global_options.x_flag_objc_nilcheck
#endif
#ifdef GENERATOR_FILE
extern int flag_objc_sjlj_exceptions;
#else
  int x_flag_objc_sjlj_exceptions;
#define flag_objc_sjlj_exceptions global_options.x_flag_objc_sjlj_exceptions
#endif
#ifdef GENERATOR_FILE
extern int flag_objc1_only;
#else
  int x_flag_objc1_only;
#define flag_objc1_only global_options.x_flag_objc1_only
#endif
#ifdef GENERATOR_FILE
extern int flag_omit_frame_pointer;
#else
  int x_flag_omit_frame_pointer;
#define flag_omit_frame_pointer global_options.x_flag_omit_frame_pointer
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp;
#else
  int x_flag_openmp;
#define flag_openmp global_options.x_flag_openmp
#endif
#ifdef GENERATOR_FILE
extern int flag_openmp_simd;
#else
  int x_flag_openmp_simd;
#define flag_openmp_simd global_options.x_flag_openmp_simd
#endif
#ifdef GENERATOR_FILE
extern int flag_opt_info;
#else
  int x_flag_opt_info;
#define flag_opt_info global_options.x_flag_opt_info
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_sibling_calls;
#else
  int x_flag_optimize_sibling_calls;
#define flag_optimize_sibling_calls global_options.x_flag_optimize_sibling_calls
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_sci;
#else
  int x_flag_optimize_sci;
#define flag_optimize_sci global_options.x_flag_optimize_sci
#endif
#ifdef GENERATOR_FILE
extern int flag_optimize_strlen;
#else
  int x_flag_optimize_strlen;
#define flag_optimize_strlen global_options.x_flag_optimize_strlen
#endif
#ifdef GENERATOR_FILE
extern int flag_pack_struct;
#else
  int x_flag_pack_struct;
#define flag_pack_struct global_options.x_flag_pack_struct
#endif
#ifdef GENERATOR_FILE
extern int flag_partial_inlining;
#else
  int x_flag_partial_inlining;
#define flag_partial_inlining global_options.x_flag_partial_inlining
#endif
#ifdef GENERATOR_FILE
extern int flag_pcc_struct_return;
#else
  int x_flag_pcc_struct_return;
#define flag_pcc_struct_return global_options.x_flag_pcc_struct_return
#endif
#ifdef GENERATOR_FILE
extern int flag_peel_loops;
#else
  int x_flag_peel_loops;
#define flag_peel_loops global_options.x_flag_peel_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_no_peephole;
#else
  int x_flag_no_peephole;
#define flag_no_peephole global_options.x_flag_no_peephole
#endif
#ifdef GENERATOR_FILE
extern int flag_peephole2;
#else
  int x_flag_peephole2;
#define flag_peephole2 global_options.x_flag_peephole2
#endif
#ifdef GENERATOR_FILE
extern int flag_permissive;
#else
  int x_flag_permissive;
#define flag_permissive global_options.x_flag_permissive
#endif
#ifdef GENERATOR_FILE
extern int flag_plan9_extensions;
#else
  int x_flag_plan9_extensions;
#define flag_plan9_extensions global_options.x_flag_plan9_extensions
#endif
#ifdef GENERATOR_FILE
extern int post_ipa_mem_report;
#else
  int x_post_ipa_mem_report;
#define post_ipa_mem_report global_options.x_post_ipa_mem_report
#endif
#ifdef GENERATOR_FILE
extern int pre_ipa_mem_report;
#else
  int x_pre_ipa_mem_report;
#define pre_ipa_mem_report global_options.x_pre_ipa_mem_report
#endif
#ifdef GENERATOR_FILE
extern int flag_predictive_commoning;
#else
  int x_flag_predictive_commoning;
#define flag_predictive_commoning global_options.x_flag_predictive_commoning
#endif
#ifdef GENERATOR_FILE
extern int flag_prefetch_loop_arrays;
#else
  int x_flag_prefetch_loop_arrays;
#define flag_prefetch_loop_arrays global_options.x_flag_prefetch_loop_arrays
#endif
#ifdef GENERATOR_FILE
extern int flag_pretty_templates;
#else
  int x_flag_pretty_templates;
#define flag_pretty_templates global_options.x_flag_pretty_templates
#endif
#ifdef GENERATOR_FILE
extern int profile_flag;
#else
  int x_profile_flag;
#define profile_flag global_options.x_profile_flag
#endif
#ifdef GENERATOR_FILE
extern int profile_arc_flag;
#else
  int x_profile_arc_flag;
#define profile_arc_flag global_options.x_profile_arc_flag
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_correction;
#else
  int x_flag_profile_correction;
#define flag_profile_correction global_options.x_flag_profile_correction
#endif
#ifdef GENERATOR_FILE
extern const char *profile_data_prefix;
#else
  const char *x_profile_data_prefix;
#define profile_data_prefix global_options.x_profile_data_prefix
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_reorder_functions;
#else
  int x_flag_profile_reorder_functions;
#define flag_profile_reorder_functions global_options.x_flag_profile_reorder_functions
#endif
#ifdef GENERATOR_FILE
extern int profile_report;
#else
  int x_profile_report;
#define profile_report global_options.x_profile_report
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_use;
#else
  int x_flag_profile_use;
#define flag_profile_use global_options.x_flag_profile_use
#endif
#ifdef GENERATOR_FILE
extern int flag_profile_values;
#else
  int x_flag_profile_values;
#define flag_profile_values global_options.x_flag_profile_values
#endif
#ifdef GENERATOR_FILE
extern int flag_reciprocal_math;
#else
  int x_flag_reciprocal_math;
#define flag_reciprocal_math global_options.x_flag_reciprocal_math
#endif
#ifdef GENERATOR_FILE
extern int flag_record_gcc_switches;
#else
  int x_flag_record_gcc_switches;
#define flag_record_gcc_switches global_options.x_flag_record_gcc_switches
#endif
#ifdef GENERATOR_FILE
extern int flag_reduced_reflection;
#else
  int x_flag_reduced_reflection;
#define flag_reduced_reflection global_options.x_flag_reduced_reflection
#endif
#ifdef GENERATOR_FILE
extern int flag_ree;
#else
  int x_flag_ree;
#define flag_ree global_options.x_flag_ree
#endif
#ifdef GENERATOR_FILE
extern int flag_rename_registers;
#else
  int x_flag_rename_registers;
#define flag_rename_registers global_options.x_flag_rename_registers
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_blocks;
#else
  int x_flag_reorder_blocks;
#define flag_reorder_blocks global_options.x_flag_reorder_blocks
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_blocks_and_partition;
#else
  int x_flag_reorder_blocks_and_partition;
#define flag_reorder_blocks_and_partition global_options.x_flag_reorder_blocks_and_partition
#endif
#ifdef GENERATOR_FILE
extern int flag_reorder_functions;
#else
  int x_flag_reorder_functions;
#define flag_reorder_functions global_options.x_flag_reorder_functions
#endif
#ifdef GENERATOR_FILE
extern int flag_replace_objc_classes;
#else
  int x_flag_replace_objc_classes;
#define flag_replace_objc_classes global_options.x_flag_replace_objc_classes
#endif
#ifdef GENERATOR_FILE
extern int go_require_return_statement;
#else
  int x_go_require_return_statement;
#define go_require_return_statement global_options.x_go_require_return_statement
#endif
#ifdef GENERATOR_FILE
extern int flag_rerun_cse_after_loop;
#else
  int x_flag_rerun_cse_after_loop;
#define flag_rerun_cse_after_loop global_options.x_flag_rerun_cse_after_loop
#endif
#ifdef GENERATOR_FILE
extern int flag_resched_modulo_sched;
#else
  int x_flag_resched_modulo_sched;
#define flag_resched_modulo_sched global_options.x_flag_resched_modulo_sched
#endif
#ifdef GENERATOR_FILE
extern int flag_rounding_math;
#else
  int x_flag_rounding_math;
#define flag_rounding_math global_options.x_flag_rounding_math
#endif
#ifdef GENERATOR_FILE
extern int flag_rtti;
#else
  int x_flag_rtti;
#define flag_rtti global_options.x_flag_rtti
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_critical_path_heuristic;
#else
  int x_flag_sched_critical_path_heuristic;
#define flag_sched_critical_path_heuristic global_options.x_flag_sched_critical_path_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_dep_count_heuristic;
#else
  int x_flag_sched_dep_count_heuristic;
#define flag_sched_dep_count_heuristic global_options.x_flag_sched_dep_count_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_group_heuristic;
#else
  int x_flag_sched_group_heuristic;
#define flag_sched_group_heuristic global_options.x_flag_sched_group_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_interblock;
#else
  int x_flag_schedule_interblock;
#define flag_schedule_interblock global_options.x_flag_schedule_interblock
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_last_insn_heuristic;
#else
  int x_flag_sched_last_insn_heuristic;
#define flag_sched_last_insn_heuristic global_options.x_flag_sched_last_insn_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_pressure;
#else
  int x_flag_sched_pressure;
#define flag_sched_pressure global_options.x_flag_sched_pressure
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_rank_heuristic;
#else
  int x_flag_sched_rank_heuristic;
#define flag_sched_rank_heuristic global_options.x_flag_sched_rank_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative;
#else
  int x_flag_schedule_speculative;
#define flag_schedule_speculative global_options.x_flag_schedule_speculative
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_spec_insn_heuristic;
#else
  int x_flag_sched_spec_insn_heuristic;
#define flag_sched_spec_insn_heuristic global_options.x_flag_sched_spec_insn_heuristic
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative_load;
#else
  int x_flag_schedule_speculative_load;
#define flag_schedule_speculative_load global_options.x_flag_schedule_speculative_load
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_speculative_load_dangerous;
#else
  int x_flag_schedule_speculative_load_dangerous;
#define flag_schedule_speculative_load_dangerous global_options.x_flag_schedule_speculative_load_dangerous
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_stalled_insns;
#else
  int x_flag_sched_stalled_insns;
#define flag_sched_stalled_insns global_options.x_flag_sched_stalled_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_sched_stalled_insns_dep;
#else
  int x_flag_sched_stalled_insns_dep;
#define flag_sched_stalled_insns_dep global_options.x_flag_sched_stalled_insns_dep
#endif
#ifdef GENERATOR_FILE
extern int sched_verbose_param;
#else
  int x_sched_verbose_param;
#define sched_verbose_param global_options.x_sched_verbose_param
#endif
#ifdef GENERATOR_FILE
extern int flag_sched2_use_superblocks;
#else
  int x_flag_sched2_use_superblocks;
#define flag_sched2_use_superblocks global_options.x_flag_sched2_use_superblocks
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_insns;
#else
  int x_flag_schedule_insns;
#define flag_schedule_insns global_options.x_flag_schedule_insns
#endif
#ifdef GENERATOR_FILE
extern int flag_schedule_insns_after_reload;
#else
  int x_flag_schedule_insns_after_reload;
#define flag_schedule_insns_after_reload global_options.x_flag_schedule_insns_after_reload
#endif
#ifdef GENERATOR_FILE
extern int flag_section_anchors;
#else
  int x_flag_section_anchors;
#define flag_section_anchors global_options.x_flag_section_anchors
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_pipelining;
#else
  int x_flag_sel_sched_pipelining;
#define flag_sel_sched_pipelining global_options.x_flag_sel_sched_pipelining
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_pipelining_outer_loops;
#else
  int x_flag_sel_sched_pipelining_outer_loops;
#define flag_sel_sched_pipelining_outer_loops global_options.x_flag_sel_sched_pipelining_outer_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_sel_sched_reschedule_pipelined;
#else
  int x_flag_sel_sched_reschedule_pipelined;
#define flag_sel_sched_reschedule_pipelined global_options.x_flag_sel_sched_reschedule_pipelined
#endif
#ifdef GENERATOR_FILE
extern int flag_selective_scheduling;
#else
  int x_flag_selective_scheduling;
#define flag_selective_scheduling global_options.x_flag_selective_scheduling
#endif
#ifdef GENERATOR_FILE
extern int flag_selective_scheduling2;
#else
  int x_flag_selective_scheduling2;
#define flag_selective_scheduling2 global_options.x_flag_selective_scheduling2
#endif
#ifdef GENERATOR_FILE
extern int flag_short_double;
#else
  int x_flag_short_double;
#define flag_short_double global_options.x_flag_short_double
#endif
#ifdef GENERATOR_FILE
extern int flag_short_enums;
#else
  int x_flag_short_enums;
#define flag_short_enums global_options.x_flag_short_enums
#endif
#ifdef GENERATOR_FILE
extern int flag_short_wchar;
#else
  int x_flag_short_wchar;
#define flag_short_wchar global_options.x_flag_short_wchar
#endif
#ifdef GENERATOR_FILE
extern int flag_show_column;
#else
  int x_flag_show_column;
#define flag_show_column global_options.x_flag_show_column
#endif
#ifdef GENERATOR_FILE
extern int flag_shrink_wrap;
#else
  int x_flag_shrink_wrap;
#define flag_shrink_wrap global_options.x_flag_shrink_wrap
#endif
#ifdef GENERATOR_FILE
extern int flag_signaling_nans;
#else
  int x_flag_signaling_nans;
#define flag_signaling_nans global_options.x_flag_signaling_nans
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_bitfields;
#else
  int x_flag_signed_bitfields;
#define flag_signed_bitfields global_options.x_flag_signed_bitfields
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_char;
#else
  int x_flag_signed_char;
#define flag_signed_char global_options.x_flag_signed_char
#endif
#ifdef GENERATOR_FILE
extern int flag_signed_zeros;
#else
  int x_flag_signed_zeros;
#define flag_signed_zeros global_options.x_flag_signed_zeros
#endif
#ifdef GENERATOR_FILE
extern enum vect_cost_model flag_simd_cost_model;
#else
  enum vect_cost_model x_flag_simd_cost_model;
#define flag_simd_cost_model global_options.x_flag_simd_cost_model
#endif
#ifdef GENERATOR_FILE
extern int flag_single_precision_constant;
#else
  int x_flag_single_precision_constant;
#define flag_single_precision_constant global_options.x_flag_single_precision_constant
#endif
#ifdef GENERATOR_FILE
extern int flag_split_ivs_in_unroller;
#else
  int x_flag_split_ivs_in_unroller;
#define flag_split_ivs_in_unroller global_options.x_flag_split_ivs_in_unroller
#endif
#ifdef GENERATOR_FILE
extern int flag_split_stack;
#else
  int x_flag_split_stack;
#define flag_split_stack global_options.x_flag_split_stack
#endif
#ifdef GENERATOR_FILE
extern int flag_split_wide_types;
#else
  int x_flag_split_wide_types;
#define flag_split_wide_types global_options.x_flag_split_wide_types
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_protect;
#else
  int x_flag_stack_protect;
#define flag_stack_protect global_options.x_flag_stack_protect
#endif
#ifdef GENERATOR_FILE
extern enum stack_reuse_level flag_stack_reuse;
#else
  enum stack_reuse_level x_flag_stack_reuse;
#define flag_stack_reuse global_options.x_flag_stack_reuse
#endif
#ifdef GENERATOR_FILE
extern int flag_stack_usage;
#else
  int x_flag_stack_usage;
#define flag_stack_usage global_options.x_flag_stack_usage
#endif
#ifdef GENERATOR_FILE
extern int flag_detailed_statistics;
#else
  int x_flag_detailed_statistics;
#define flag_detailed_statistics global_options.x_flag_detailed_statistics
#endif
#ifdef GENERATOR_FILE
extern int flag_store_check;
#else
  int x_flag_store_check;
#define flag_store_check global_options.x_flag_store_check
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_aliasing;
#else
  int x_flag_strict_aliasing;
#define flag_strict_aliasing global_options.x_flag_strict_aliasing
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_enums;
#else
  int x_flag_strict_enums;
#define flag_strict_enums global_options.x_flag_strict_enums
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_overflow;
#else
  int x_flag_strict_overflow;
#define flag_strict_overflow global_options.x_flag_strict_overflow
#endif
#ifdef GENERATOR_FILE
extern int flag_strict_volatile_bitfields;
#else
  int x_flag_strict_volatile_bitfields;
#define flag_strict_volatile_bitfields global_options.x_flag_strict_volatile_bitfields
#endif
#ifdef GENERATOR_FILE
extern int flag_sync_libcalls;
#else
  int x_flag_sync_libcalls;
#define flag_sync_libcalls global_options.x_flag_sync_libcalls
#endif
#ifdef GENERATOR_FILE
extern int flag_syntax_only;
#else
  int x_flag_syntax_only;
#define flag_syntax_only global_options.x_flag_syntax_only
#endif
#ifdef GENERATOR_FILE
extern int template_backtrace_limit;
#else
  int x_template_backtrace_limit;
#define template_backtrace_limit global_options.x_template_backtrace_limit
#endif
#ifdef GENERATOR_FILE
extern int flag_test_coverage;
#else
  int x_flag_test_coverage;
#define flag_test_coverage global_options.x_flag_test_coverage
#endif
#ifdef GENERATOR_FILE
extern int flag_thread_jumps;
#else
  int x_flag_thread_jumps;
#define flag_thread_jumps global_options.x_flag_thread_jumps
#endif
#ifdef GENERATOR_FILE
extern int flag_threadsafe_statics;
#else
  int x_flag_threadsafe_statics;
#define flag_threadsafe_statics global_options.x_flag_threadsafe_statics
#endif
#ifdef GENERATOR_FILE
extern int time_report;
#else
  int x_time_report;
#define time_report global_options.x_time_report
#endif
#ifdef GENERATOR_FILE
extern enum tls_model flag_tls_default;
#else
  enum tls_model x_flag_tls_default;
#define flag_tls_default global_options.x_flag_tls_default
#endif
#ifdef GENERATOR_FILE
extern int flag_toplevel_reorder;
#else
  int x_flag_toplevel_reorder;
#define flag_toplevel_reorder global_options.x_flag_toplevel_reorder
#endif
#ifdef GENERATOR_FILE
extern int flag_tracer;
#else
  int x_flag_tracer;
#define flag_tracer global_options.x_flag_tracer
#endif
#ifdef GENERATOR_FILE
extern int flag_trapping_math;
#else
  int x_flag_trapping_math;
#define flag_trapping_math global_options.x_flag_trapping_math
#endif
#ifdef GENERATOR_FILE
extern int flag_trapv;
#else
  int x_flag_trapv;
#define flag_trapv global_options.x_flag_trapv
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_bit_ccp;
#else
  int x_flag_tree_bit_ccp;
#define flag_tree_bit_ccp global_options.x_flag_tree_bit_ccp
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_builtin_call_dce;
#else
  int x_flag_tree_builtin_call_dce;
#define flag_tree_builtin_call_dce global_options.x_flag_tree_builtin_call_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ccp;
#else
  int x_flag_tree_ccp;
#define flag_tree_ccp global_options.x_flag_tree_ccp
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ch;
#else
  int x_flag_tree_ch;
#define flag_tree_ch global_options.x_flag_tree_ch
#endif
#ifdef GENERATOR_FILE
extern int flag_ssa_coalesce_vars;
#else
  int x_flag_ssa_coalesce_vars;
#define flag_ssa_coalesce_vars global_options.x_flag_ssa_coalesce_vars
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_copy_prop;
#else
  int x_flag_tree_copy_prop;
#define flag_tree_copy_prop global_options.x_flag_tree_copy_prop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_copyrename;
#else
  int x_flag_tree_copyrename;
#define flag_tree_copyrename global_options.x_flag_tree_copyrename
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_cselim;
#else
  int x_flag_tree_cselim;
#define flag_tree_cselim global_options.x_flag_tree_cselim
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dce;
#else
  int x_flag_tree_dce;
#define flag_tree_dce global_options.x_flag_tree_dce
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dom;
#else
  int x_flag_tree_dom;
#define flag_tree_dom global_options.x_flag_tree_dom
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_dse;
#else
  int x_flag_tree_dse;
#define flag_tree_dse global_options.x_flag_tree_dse
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_forwprop;
#else
  int x_flag_tree_forwprop;
#define flag_tree_forwprop global_options.x_flag_tree_forwprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_fre;
#else
  int x_flag_tree_fre;
#define flag_tree_fre global_options.x_flag_tree_fre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_distribute_patterns;
#else
  int x_flag_tree_loop_distribute_patterns;
#define flag_tree_loop_distribute_patterns global_options.x_flag_tree_loop_distribute_patterns
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_distribution;
#else
  int x_flag_tree_loop_distribution;
#define flag_tree_loop_distribution global_options.x_flag_tree_loop_distribution
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_if_convert;
#else
  int x_flag_tree_loop_if_convert;
#define flag_tree_loop_if_convert global_options.x_flag_tree_loop_if_convert
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_if_convert_stores;
#else
  int x_flag_tree_loop_if_convert_stores;
#define flag_tree_loop_if_convert_stores global_options.x_flag_tree_loop_if_convert_stores
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_im;
#else
  int x_flag_tree_loop_im;
#define flag_tree_loop_im global_options.x_flag_tree_loop_im
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_ivcanon;
#else
  int x_flag_tree_loop_ivcanon;
#define flag_tree_loop_ivcanon global_options.x_flag_tree_loop_ivcanon
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_optimize;
#else
  int x_flag_tree_loop_optimize;
#define flag_tree_loop_optimize global_options.x_flag_tree_loop_optimize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_loop_vectorize;
#else
  int x_flag_tree_loop_vectorize;
#define flag_tree_loop_vectorize global_options.x_flag_tree_loop_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_live_range_split;
#else
  int x_flag_tree_live_range_split;
#define flag_tree_live_range_split global_options.x_flag_tree_live_range_split
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_parallelize_loops;
#else
  int x_flag_tree_parallelize_loops;
#define flag_tree_parallelize_loops global_options.x_flag_tree_parallelize_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_partial_pre;
#else
  int x_flag_tree_partial_pre;
#define flag_tree_partial_pre global_options.x_flag_tree_partial_pre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_phiprop;
#else
  int x_flag_tree_phiprop;
#define flag_tree_phiprop global_options.x_flag_tree_phiprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_pre;
#else
  int x_flag_tree_pre;
#define flag_tree_pre global_options.x_flag_tree_pre
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_pta;
#else
  int x_flag_tree_pta;
#define flag_tree_pta global_options.x_flag_tree_pta
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_reassoc;
#else
  int x_flag_tree_reassoc;
#define flag_tree_reassoc global_options.x_flag_tree_reassoc
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_scev_cprop;
#else
  int x_flag_tree_scev_cprop;
#define flag_tree_scev_cprop global_options.x_flag_tree_scev_cprop
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_sink;
#else
  int x_flag_tree_sink;
#define flag_tree_sink global_options.x_flag_tree_sink
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_slp_vectorize;
#else
  int x_flag_tree_slp_vectorize;
#define flag_tree_slp_vectorize global_options.x_flag_tree_slp_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_slsr;
#else
  int x_flag_tree_slsr;
#define flag_tree_slsr global_options.x_flag_tree_slsr
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_sra;
#else
  int x_flag_tree_sra;
#define flag_tree_sra global_options.x_flag_tree_sra
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_switch_conversion;
#else
  int x_flag_tree_switch_conversion;
#define flag_tree_switch_conversion global_options.x_flag_tree_switch_conversion
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_tail_merge;
#else
  int x_flag_tree_tail_merge;
#define flag_tree_tail_merge global_options.x_flag_tree_tail_merge
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_ter;
#else
  int x_flag_tree_ter;
#define flag_tree_ter global_options.x_flag_tree_ter
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_vectorize;
#else
  int x_flag_tree_vectorize;
#define flag_tree_vectorize global_options.x_flag_tree_vectorize
#endif
#ifdef GENERATOR_FILE
extern int flag_tree_vrp;
#else
  int x_flag_tree_vrp;
#define flag_tree_vrp global_options.x_flag_tree_vrp
#endif
#ifdef GENERATOR_FILE
extern int flag_unit_at_a_time;
#else
  int x_flag_unit_at_a_time;
#define flag_unit_at_a_time global_options.x_flag_unit_at_a_time
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_all_loops;
#else
  int x_flag_unroll_all_loops;
#define flag_unroll_all_loops global_options.x_flag_unroll_all_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unroll_loops;
#else
  int x_flag_unroll_loops;
#define flag_unroll_loops global_options.x_flag_unroll_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unsafe_loop_optimizations;
#else
  int x_flag_unsafe_loop_optimizations;
#define flag_unsafe_loop_optimizations global_options.x_flag_unsafe_loop_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_unsafe_math_optimizations;
#else
  int x_flag_unsafe_math_optimizations;
#define flag_unsafe_math_optimizations global_options.x_flag_unsafe_math_optimizations
#endif
#ifdef GENERATOR_FILE
extern int flag_unswitch_loops;
#else
  int x_flag_unswitch_loops;
#define flag_unswitch_loops global_options.x_flag_unswitch_loops
#endif
#ifdef GENERATOR_FILE
extern int flag_unwind_tables;
#else
  int x_flag_unwind_tables;
#define flag_unwind_tables global_options.x_flag_unwind_tables
#endif
#ifdef GENERATOR_FILE
extern int flag_use_atomic_builtins;
#else
  int x_flag_use_atomic_builtins;
#define flag_use_atomic_builtins global_options.x_flag_use_atomic_builtins
#endif
#ifdef GENERATOR_FILE
extern int flag_use_boehm_gc;
#else
  int x_flag_use_boehm_gc;
#define flag_use_boehm_gc global_options.x_flag_use_boehm_gc
#endif
#ifdef GENERATOR_FILE
extern int flag_use_cxa_atexit;
#else
  int x_flag_use_cxa_atexit;
#define flag_use_cxa_atexit global_options.x_flag_use_cxa_atexit
#endif
#ifdef GENERATOR_FILE
extern int flag_use_cxa_get_exception_ptr;
#else
  int x_flag_use_cxa_get_exception_ptr;
#define flag_use_cxa_get_exception_ptr global_options.x_flag_use_cxa_get_exception_ptr
#endif
#ifdef GENERATOR_FILE
extern int flag_use_divide_subroutine;
#else
  int x_flag_use_divide_subroutine;
#define flag_use_divide_subroutine global_options.x_flag_use_divide_subroutine
#endif
#ifdef GENERATOR_FILE
extern int flag_use_linker_plugin;
#else
  int x_flag_use_linker_plugin;
#define flag_use_linker_plugin global_options.x_flag_use_linker_plugin
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking;
#else
  int x_flag_var_tracking;
#define flag_var_tracking global_options.x_flag_var_tracking
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_assignments;
#else
  int x_flag_var_tracking_assignments;
#define flag_var_tracking_assignments global_options.x_flag_var_tracking_assignments
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_assignments_toggle;
#else
  int x_flag_var_tracking_assignments_toggle;
#define flag_var_tracking_assignments_toggle global_options.x_flag_var_tracking_assignments_toggle
#endif
#ifdef GENERATOR_FILE
extern int flag_var_tracking_uninit;
#else
  int x_flag_var_tracking_uninit;
#define flag_var_tracking_uninit global_options.x_flag_var_tracking_uninit
#endif
#ifdef GENERATOR_FILE
extern int flag_variable_expansion_in_unroller;
#else
  int x_flag_variable_expansion_in_unroller;
#define flag_variable_expansion_in_unroller global_options.x_flag_variable_expansion_in_unroller
#endif
#ifdef GENERATOR_FILE
extern enum vect_cost_model flag_vect_cost_model;
#else
  enum vect_cost_model x_flag_vect_cost_model;
#define flag_vect_cost_model global_options.x_flag_vect_cost_model
#endif
#ifdef GENERATOR_FILE
extern int flag_verbose_asm;
#else
  int x_flag_verbose_asm;
#define flag_verbose_asm global_options.x_flag_verbose_asm
#endif
#ifdef GENERATOR_FILE
extern int flag_visibility_ms_compat;
#else
  int x_flag_visibility_ms_compat;
#define flag_visibility_ms_compat global_options.x_flag_visibility_ms_compat
#endif
#ifdef GENERATOR_FILE
extern enum symbol_visibility default_visibility;
#else
  enum symbol_visibility x_default_visibility;
#define default_visibility global_options.x_default_visibility
#endif
#ifdef GENERATOR_FILE
extern int flag_value_profile_transformations;
#else
  int x_flag_value_profile_transformations;
#define flag_value_profile_transformations global_options.x_flag_value_profile_transformations
#endif
#ifdef GENERATOR_FILE
extern enum vtv_priority flag_vtable_verify;
#else
  enum vtv_priority x_flag_vtable_verify;
#define flag_vtable_verify global_options.x_flag_vtable_verify
#endif
#ifdef GENERATOR_FILE
extern int flag_vtv_counts;
#else
  int x_flag_vtv_counts;
#define flag_vtv_counts global_options.x_flag_vtv_counts
#endif
#ifdef GENERATOR_FILE
extern int flag_vtv_debug;
#else
  int x_flag_vtv_debug;
#define flag_vtv_debug global_options.x_flag_vtv_debug
#endif
#ifdef GENERATOR_FILE
extern int flag_weak;
#else
  int x_flag_weak;
#define flag_weak global_options.x_flag_weak
#endif
#ifdef GENERATOR_FILE
extern int flag_web;
#else
  int x_flag_web;
#define flag_web global_options.x_flag_web
#endif
#ifdef GENERATOR_FILE
extern int flag_whole_program;
#else
  int x_flag_whole_program;
#define flag_whole_program global_options.x_flag_whole_program
#endif
#ifdef GENERATOR_FILE
extern int flag_working_directory;
#else
  int x_flag_working_directory;
#define flag_working_directory global_options.x_flag_working_directory
#endif
#ifdef GENERATOR_FILE
extern const char *flag_wpa;
#else
  const char *x_flag_wpa;
#define flag_wpa global_options.x_flag_wpa
#endif
#ifdef GENERATOR_FILE
extern int flag_wrapv;
#else
  int x_flag_wrapv;
#define flag_wrapv global_options.x_flag_wrapv
#endif
#ifdef GENERATOR_FILE
extern int flag_zero_initialized_in_bss;
#else
  int x_flag_zero_initialized_in_bss;
#define flag_zero_initialized_in_bss global_options.x_flag_zero_initialized_in_bss
#endif
#ifdef GENERATOR_FILE
extern int flag_zero_link;
#else
  int x_flag_zero_link;
#define flag_zero_link global_options.x_flag_zero_link
#endif
#ifdef GENERATOR_FILE
extern int dwarf_version;
#else
  int x_dwarf_version;
#define dwarf_version global_options.x_dwarf_version
#endif
#ifdef GENERATOR_FILE
extern int flag_gen_declaration;
#else
  int x_flag_gen_declaration;
#define flag_gen_declaration global_options.x_flag_gen_declaration
#endif
#ifdef GENERATOR_FILE
extern int debug_generate_pub_sections;
#else
  int x_debug_generate_pub_sections;
#define debug_generate_pub_sections global_options.x_debug_generate_pub_sections
#endif
#ifdef GENERATOR_FILE
extern int dwarf_record_gcc_switches;
#else
  int x_dwarf_record_gcc_switches;
#define dwarf_record_gcc_switches global_options.x_dwarf_record_gcc_switches
#endif
#ifdef GENERATOR_FILE
extern int dwarf_split_debug_info;
#else
  int x_dwarf_split_debug_info;
#define dwarf_split_debug_info global_options.x_dwarf_split_debug_info
#endif
#ifdef GENERATOR_FILE
extern int dwarf_strict;
#else
  int x_dwarf_strict;
#define dwarf_strict global_options.x_dwarf_strict
#endif
#ifdef GENERATOR_FILE
extern int flag_gtoggle;
#else
  int x_flag_gtoggle;
#define flag_gtoggle global_options.x_flag_gtoggle
#endif
#ifdef GENERATOR_FILE
extern const char *imultiarch;
#else
  const char *x_imultiarch;
#define imultiarch global_options.x_imultiarch
#endif
#ifdef GENERATOR_FILE
extern const char *plugindir_string;
#else
  const char *x_plugindir_string;
#define plugindir_string global_options.x_plugindir_string
#endif
#ifdef GENERATOR_FILE
extern enum calling_abi ix86_abi;
#else
  enum calling_abi x_ix86_abi;
#define ix86_abi global_options.x_ix86_abi
#endif
#ifdef GENERATOR_FILE
extern enum pmode ix86_pmode;
#else
  enum pmode x_ix86_pmode;
#define ix86_pmode global_options.x_ix86_pmode
#endif
#ifdef GENERATOR_FILE
extern const char *ix86_arch_string;
#else
  const char *x_ix86_arch_string;
#define ix86_arch_string global_options.x_ix86_arch_string
#endif
#ifdef GENERATOR_FILE
extern enum asm_dialect ix86_asm_dialect;
#else
  enum asm_dialect x_ix86_asm_dialect;
#define ix86_asm_dialect global_options.x_ix86_asm_dialect
#endif
#ifdef GENERATOR_FILE
extern int darwin_macho_att_stub;
#else
  int x_darwin_macho_att_stub;
#define darwin_macho_att_stub global_options.x_darwin_macho_att_stub
#endif
#ifdef GENERATOR_FILE
extern int ix86_branch_cost;
#else
  int x_ix86_branch_cost;
#define ix86_branch_cost global_options.x_ix86_branch_cost
#endif
#ifdef GENERATOR_FILE
extern enum cmodel ix86_cmodel;
#else
  enum cmodel x_ix86_cmodel;
#define ix86_cmodel global_options.x_ix86_cmodel
#endif
#ifdef GENERATOR_FILE
extern int darwin_constant_cfstrings;
#else
  int x_darwin_constant_cfstrings;
#define darwin_constant_cfstrings global_options.x_darwin_constant_cfstrings
#endif
#ifdef GENERATOR_FILE
extern int flag_dispatch_scheduler;
#else
  int x_flag_dispatch_scheduler;
#define flag_dispatch_scheduler global_options.x_flag_dispatch_scheduler
#endif
#ifdef GENERATOR_FILE
extern int ix86_dump_tunes;
#else
  int x_ix86_dump_tunes;
#define ix86_dump_tunes global_options.x_ix86_dump_tunes
#endif
#ifdef GENERATOR_FILE
extern int flag_fentry;
#else
  int x_flag_fentry;
#define flag_fentry global_options.x_flag_fentry
#endif
#ifdef GENERATOR_FILE
extern int darwin_fix_and_continue;
#else
  int x_darwin_fix_and_continue;
#define darwin_fix_and_continue global_options.x_darwin_fix_and_continue
#endif
#ifdef GENERATOR_FILE
extern int ix86_force_drap;
#else
  int x_ix86_force_drap;
#define ix86_force_drap global_options.x_ix86_force_drap
#endif
#ifdef GENERATOR_FILE
extern enum fpmath_unit ix86_fpmath;
#else
  enum fpmath_unit x_ix86_fpmath;
#define ix86_fpmath global_options.x_ix86_fpmath
#endif
#ifdef GENERATOR_FILE
extern int ix86_incoming_stack_boundary_arg;
#else
  int x_ix86_incoming_stack_boundary_arg;
#define ix86_incoming_stack_boundary_arg global_options.x_ix86_incoming_stack_boundary_arg
#endif
#ifdef GENERATOR_FILE
extern int flag_mkernel;
#else
  int x_flag_mkernel;
#define flag_mkernel global_options.x_flag_mkernel
#endif
#ifdef GENERATOR_FILE
extern int ix86_section_threshold;
#else
  int x_ix86_section_threshold;
#define ix86_section_threshold global_options.x_ix86_section_threshold
#endif
#ifdef GENERATOR_FILE
extern const char *darwin_macosx_version_min;
#else
  const char *x_darwin_macosx_version_min;
#define darwin_macosx_version_min global_options.x_darwin_macosx_version_min
#endif
#ifdef GENERATOR_FILE
extern const char *ix86_tune_memcpy_strategy;
#else
  const char *x_ix86_tune_memcpy_strategy;
#define ix86_tune_memcpy_strategy global_options.x_ix86_tune_memcpy_strategy
#endif
#ifdef GENERATOR_FILE
extern const char *ix86_tune_memset_strategy;
#else
  const char *x_ix86_tune_memset_strategy;
#define ix86_tune_memset_strategy global_options.x_ix86_tune_memset_strategy
#endif
#ifdef GENERATOR_FILE
extern int ix86_tune_no_default;
#else
  int x_ix86_tune_no_default;
#define ix86_tune_no_default global_options.x_ix86_tune_no_default
#endif
#ifdef GENERATOR_FILE
extern int darwin_one_byte_bool;
#else
  int x_darwin_one_byte_bool;
#define darwin_one_byte_bool global_options.x_darwin_one_byte_bool
#endif
#ifdef GENERATOR_FILE
extern int ix86_preferred_stack_boundary_arg;
#else
  int x_ix86_preferred_stack_boundary_arg;
#define ix86_preferred_stack_boundary_arg global_options.x_ix86_preferred_stack_boundary_arg
#endif
#ifdef GENERATOR_FILE
extern const char *ix86_recip_name;
#else
  const char *x_ix86_recip_name;
#define ix86_recip_name global_options.x_ix86_recip_name
#endif
#ifdef GENERATOR_FILE
extern int ix86_regparm;
#else
  int x_ix86_regparm;
#define ix86_regparm global_options.x_ix86_regparm
#endif
#ifdef GENERATOR_FILE
extern int ix86_sse2avx;
#else
  int x_ix86_sse2avx;
#define ix86_sse2avx global_options.x_ix86_sse2avx
#endif
#ifdef GENERATOR_FILE
extern enum stack_protector_guard ix86_stack_protector_guard;
#else
  enum stack_protector_guard x_ix86_stack_protector_guard;
#define ix86_stack_protector_guard global_options.x_ix86_stack_protector_guard
#endif
#ifdef GENERATOR_FILE
extern int ix86_force_align_arg_pointer;
#else
  int x_ix86_force_align_arg_pointer;
#define ix86_force_align_arg_pointer global_options.x_ix86_force_align_arg_pointer
#endif
#ifdef GENERATOR_FILE
extern enum stringop_alg ix86_stringop_alg;
#else
  enum stringop_alg x_ix86_stringop_alg;
#define ix86_stringop_alg global_options.x_ix86_stringop_alg
#endif
#ifdef GENERATOR_FILE
extern enum tls_dialect ix86_tls_dialect;
#else
  enum tls_dialect x_ix86_tls_dialect;
#define ix86_tls_dialect global_options.x_ix86_tls_dialect
#endif
#ifdef GENERATOR_FILE
extern const char *ix86_tune_ctrl_string;
#else
  const char *x_ix86_tune_ctrl_string;
#define ix86_tune_ctrl_string global_options.x_ix86_tune_ctrl_string
#endif
#ifdef GENERATOR_FILE
extern const char *ix86_tune_string;
#else
  const char *x_ix86_tune_string;
#define ix86_tune_string global_options.x_ix86_tune_string
#endif
#ifdef GENERATOR_FILE
extern enum ix86_veclibabi ix86_veclibabi_type;
#else
  enum ix86_veclibabi x_ix86_veclibabi_type;
#define ix86_veclibabi_type global_options.x_ix86_veclibabi_type
#endif
#ifdef GENERATOR_FILE
extern const char *asm_file_name;
#else
  const char *x_asm_file_name;
#define asm_file_name global_options.x_asm_file_name
#endif
#ifdef GENERATOR_FILE
extern int pass_exit_codes;
#else
  int x_pass_exit_codes;
#define pass_exit_codes global_options.x_pass_exit_codes
#endif
#ifdef GENERATOR_FILE
extern int flag_pedantic_errors;
#else
  int x_flag_pedantic_errors;
#define flag_pedantic_errors global_options.x_flag_pedantic_errors
#endif
#ifdef GENERATOR_FILE
extern int use_pipes;
#else
  int x_use_pipes;
#define use_pipes global_options.x_use_pipes
#endif
#ifdef GENERATOR_FILE
extern const char *print_file_name;
#else
  const char *x_print_file_name;
#define print_file_name global_options.x_print_file_name
#endif
#ifdef GENERATOR_FILE
extern int print_multi_directory;
#else
  int x_print_multi_directory;
#define print_multi_directory global_options.x_print_multi_directory
#endif
#ifdef GENERATOR_FILE
extern int print_multi_lib;
#else
  int x_print_multi_lib;
#define print_multi_lib global_options.x_print_multi_lib
#endif
#ifdef GENERATOR_FILE
extern int print_multi_os_directory;
#else
  int x_print_multi_os_directory;
#define print_multi_os_directory global_options.x_print_multi_os_directory
#endif
#ifdef GENERATOR_FILE
extern int print_multiarch;
#else
  int x_print_multiarch;
#define print_multiarch global_options.x_print_multiarch
#endif
#ifdef GENERATOR_FILE
extern const char *print_prog_name;
#else
  const char *x_print_prog_name;
#define print_prog_name global_options.x_print_prog_name
#endif
#ifdef GENERATOR_FILE
extern int print_search_dirs;
#else
  int x_print_search_dirs;
#define print_search_dirs global_options.x_print_search_dirs
#endif
#ifdef GENERATOR_FILE
extern int print_sysroot;
#else
  int x_print_sysroot;
#define print_sysroot global_options.x_print_sysroot
#endif
#ifdef GENERATOR_FILE
extern int print_sysroot_headers_suffix;
#else
  int x_print_sysroot_headers_suffix;
#define print_sysroot_headers_suffix global_options.x_print_sysroot_headers_suffix
#endif
#ifdef GENERATOR_FILE
extern int quiet_flag;
#else
  int x_quiet_flag;
#define quiet_flag global_options.x_quiet_flag
#endif
#ifdef GENERATOR_FILE
extern int report_times;
#else
  int x_report_times;
#define report_times global_options.x_report_times
#endif
#ifdef GENERATOR_FILE
extern int flag_undef;
#else
  int x_flag_undef;
#define flag_undef global_options.x_flag_undef
#endif
#ifdef GENERATOR_FILE
extern int verbose_flag;
#else
  int x_verbose_flag;
#define verbose_flag global_options.x_verbose_flag
#endif
#ifdef GENERATOR_FILE
extern int version_flag;
#else
  int x_version_flag;
#define version_flag global_options.x_version_flag
#endif
#ifdef GENERATOR_FILE
extern int inhibit_warnings;
#else
  int x_inhibit_warnings;
#define inhibit_warnings global_options.x_inhibit_warnings
#endif
#ifdef GENERATOR_FILE
extern const char *wrapper_string;
#else
  const char *x_wrapper_string;
#define wrapper_string global_options.x_wrapper_string
#endif
#ifndef GENERATOR_FILE
  const char *x_VAR_iframework;
#define x_VAR_iframework do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_malign_functions_;
#define x_VAR_malign_functions_ do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_malign_jumps_;
#define x_VAR_malign_jumps_ do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_malign_loops_;
#define x_VAR_malign_loops_ do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mpc32;
#define x_VAR_mpc32 do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mpc64;
#define x_VAR_mpc64 do_not_use
#endif
#ifndef GENERATOR_FILE
  int x_VAR_mpc80;
#define x_VAR_mpc80 do_not_use
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_associative_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_cx_limited_range;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_finite_math_only;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_errno_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_reciprocal_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_rounding_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_signaling_nans;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_signed_zeros;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_trapping_math;
#endif
#ifndef GENERATOR_FILE
  bool frontend_set_flag_unsafe_math_optimizations;
#endif
#ifndef GENERATOR_FILE
};
extern struct gcc_options global_options;
extern const struct gcc_options global_options_init;
extern struct gcc_options global_options_set;
#define target_flags_explicit global_options_set.x_target_flags
#endif
#endif

#if !defined(IN_LIBGCC2) && !defined(IN_TARGET_LIBS) && !defined(IN_RTS)

/* Structure to save/restore optimization and target specific options.  */
struct GTY(()) cl_optimization
{
  int x_align_functions;
  int x_align_jumps;
  int x_align_labels;
  int x_align_loops;
  int x_flag_sched_stalled_insns;
  int x_flag_sched_stalled_insns_dep;
  enum fp_contract_mode x_flag_fp_contract_mode;
  unsigned char x_optimize;
  unsigned char x_optimize_size;
  signed char x_flag_aggressive_loop_optimizations;
  signed char x_flag_asynchronous_unwind_tables;
  signed char x_flag_branch_on_count_reg;
  signed char x_flag_branch_probabilities;
  signed char x_flag_branch_target_load_optimize;
  signed char x_flag_branch_target_load_optimize2;
  signed char x_flag_btr_bb_exclusive;
  signed char x_flag_caller_saves;
  signed char x_flag_combine_stack_adjustments;
  signed char x_flag_no_common;
  signed char x_flag_compare_elim_after_reload;
  signed char x_flag_conserve_stack;
  signed char x_flag_cprop_registers;
  signed char x_flag_crossjumping;
  signed char x_flag_cse_follow_jumps;
  signed char x_flag_cx_fortran_rules;
  signed char x_flag_cx_limited_range;
  signed char x_flag_data_sections;
  signed char x_flag_dce;
  signed char x_flag_defer_pop;
  signed char x_flag_delayed_branch;
  signed char x_flag_delete_null_pointer_checks;
  signed char x_flag_devirtualize;
  signed char x_flag_devirtualize_speculatively;
  signed char x_flag_dse;
  signed char x_flag_early_inlining;
  signed char x_flag_exceptions;
  signed char x_flag_expensive_optimizations;
  signed char x_flag_finite_math_only;
  signed char x_flag_float_store;
  signed char x_flag_forward_propagate;
  signed char x_flag_gcse;
  signed char x_flag_gcse_after_reload;
  signed char x_flag_gcse_las;
  signed char x_flag_gcse_lm;
  signed char x_flag_gcse_sm;
  signed char x_flag_graphite_identity;
  signed char x_flag_guess_branch_prob;
  signed char x_flag_hoist_adjacent_loads;
  signed char x_flag_if_conversion;
  signed char x_flag_if_conversion2;
  signed char x_flag_no_inline;
  signed char x_flag_inline_atomics;
  signed char x_flag_inline_functions;
  signed char x_flag_inline_functions_called_once;
  signed char x_flag_inline_small_functions;
  signed char x_flag_ipa_cp;
  signed char x_flag_ipa_cp_clone;
  signed char x_flag_ipa_profile;
  signed char x_flag_ipa_pta;
  signed char x_flag_ipa_pure_const;
  signed char x_flag_ipa_reference;
  signed char x_flag_ipa_sra;
  signed char x_flag_ira_hoist_pressure;
  signed char x_flag_ira_loop_pressure;
  signed char x_flag_isolate_erroneous_paths_attribute;
  signed char x_flag_isolate_erroneous_paths_dereference;
  signed char x_flag_ivopts;
  signed char x_flag_jump_tables;
  signed char x_flag_live_range_shrinkage;
  signed char x_flag_loop_block;
  signed char x_flag_loop_interchange;
  signed char x_flag_loop_optimize_isl;
  signed char x_flag_loop_parallelize_all;
  signed char x_flag_loop_strip_mine;
  signed char x_flag_errno_math;
  signed char x_flag_merge_constants;
  signed char x_flag_modulo_sched;
  signed char x_flag_move_loop_invariants;
  signed char x_flag_non_call_exceptions;
  signed char x_flag_nothrow_opt;
  signed char x_flag_omit_frame_pointer;
  signed char x_flag_opt_info;
  signed char x_flag_optimize_sibling_calls;
  signed char x_flag_optimize_strlen;
  signed char x_flag_pack_struct;
  signed char x_flag_peel_loops;
  signed char x_flag_no_peephole;
  signed char x_flag_peephole2;
  signed char x_flag_predictive_commoning;
  signed char x_flag_prefetch_loop_arrays;
  signed char x_flag_pcc_struct_return;
  signed char x_flag_rename_registers;
  signed char x_flag_reorder_blocks;
  signed char x_flag_reorder_blocks_and_partition;
  signed char x_flag_reorder_functions;
  signed char x_flag_rerun_cse_after_loop;
  signed char x_flag_resched_modulo_sched;
  signed char x_flag_rounding_math;
  signed char x_flag_rtti;
  signed char x_flag_sched_critical_path_heuristic;
  signed char x_flag_sched_dep_count_heuristic;
  signed char x_flag_sched_group_heuristic;
  signed char x_flag_schedule_interblock;
  signed char x_flag_sched_last_insn_heuristic;
  signed char x_flag_sched_pressure;
  signed char x_flag_sched_rank_heuristic;
  signed char x_flag_schedule_speculative;
  signed char x_flag_sched_spec_insn_heuristic;
  signed char x_flag_schedule_speculative_load;
  signed char x_flag_schedule_speculative_load_dangerous;
  signed char x_flag_sched2_use_superblocks;
  signed char x_flag_schedule_insns;
  signed char x_flag_schedule_insns_after_reload;
  signed char x_flag_section_anchors;
  signed char x_flag_sel_sched_pipelining;
  signed char x_flag_sel_sched_pipelining_outer_loops;
  signed char x_flag_sel_sched_reschedule_pipelined;
  signed char x_flag_selective_scheduling;
  signed char x_flag_selective_scheduling2;
  signed char x_flag_short_double;
  signed char x_flag_short_enums;
  signed char x_flag_short_wchar;
  signed char x_flag_shrink_wrap;
  signed char x_flag_signaling_nans;
  signed char x_flag_signed_zeros;
  signed char x_flag_single_precision_constant;
  signed char x_flag_split_ivs_in_unroller;
  signed char x_flag_split_wide_types;
  signed char x_flag_strict_aliasing;
  signed char x_flag_strict_enums;
  signed char x_flag_thread_jumps;
  signed char x_flag_threadsafe_statics;
  signed char x_flag_toplevel_reorder;
  signed char x_flag_trapping_math;
  signed char x_flag_trapv;
  signed char x_flag_tree_bit_ccp;
  signed char x_flag_tree_builtin_call_dce;
  signed char x_flag_tree_ccp;
  signed char x_flag_tree_ch;
  signed char x_flag_ssa_coalesce_vars;
  signed char x_flag_tree_copy_prop;
  signed char x_flag_tree_copyrename;
  signed char x_flag_tree_cselim;
  signed char x_flag_tree_dce;
  signed char x_flag_tree_dom;
  signed char x_flag_tree_dse;
  signed char x_flag_tree_forwprop;
  signed char x_flag_tree_fre;
  signed char x_flag_tree_loop_distribute_patterns;
  signed char x_flag_tree_loop_distribution;
  signed char x_flag_tree_loop_if_convert;
  signed char x_flag_tree_loop_if_convert_stores;
  signed char x_flag_tree_loop_im;
  signed char x_flag_tree_loop_ivcanon;
  signed char x_flag_tree_loop_optimize;
  signed char x_flag_tree_loop_vectorize;
  signed char x_flag_tree_live_range_split;
  signed char x_flag_tree_partial_pre;
  signed char x_flag_tree_phiprop;
  signed char x_flag_tree_pre;
  signed char x_flag_tree_pta;
  signed char x_flag_tree_reassoc;
  signed char x_flag_tree_scev_cprop;
  signed char x_flag_tree_sink;
  signed char x_flag_tree_slp_vectorize;
  signed char x_flag_tree_slsr;
  signed char x_flag_tree_sra;
  signed char x_flag_tree_switch_conversion;
  signed char x_flag_tree_tail_merge;
  signed char x_flag_tree_ter;
  signed char x_flag_tree_vectorize;
  signed char x_flag_tree_vrp;
  signed char x_flag_unit_at_a_time;
  signed char x_flag_unroll_all_loops;
  signed char x_flag_unroll_loops;
  signed char x_flag_unsafe_loop_optimizations;
  signed char x_flag_unsafe_math_optimizations;
  signed char x_flag_unswitch_loops;
  signed char x_flag_unwind_tables;
  signed char x_flag_var_tracking;
  signed char x_flag_var_tracking_assignments;
  signed char x_flag_var_tracking_assignments_toggle;
  signed char x_flag_var_tracking_uninit;
  signed char x_flag_variable_expansion_in_unroller;
  signed char x_flag_value_profile_transformations;
  signed char x_flag_web;
  signed char x_flag_whole_program;
  signed char x_flag_wrapv;
};

/* Structure to save/restore selected target specific options.  */
struct GTY(()) cl_target_option
{
  HOST_WIDE_INT x_ix86_isa_flags_explicit;
  HOST_WIDE_INT x_ix86_target_flags_explicit;
  const char *x_ix86_arch_string;
  const char *x_ix86_recip_name;
  const char *x_ix86_tune_ctrl_string;
  const char *x_ix86_tune_memcpy_strategy;
  const char *x_ix86_tune_memset_strategy;
  const char *x_ix86_tune_string;
  HOST_WIDE_INT x_ix86_isa_flags;
  enum fpmath_unit x_ix86_fpmath;
  enum asm_dialect x_ix86_asm_dialect;
  enum calling_abi x_ix86_abi;
  enum cmodel x_ix86_cmodel;
  enum ix86_veclibabi x_ix86_veclibabi_type;
  enum pmode x_ix86_pmode;
  enum stack_protector_guard x_ix86_stack_protector_guard;
  enum stringop_alg x_ix86_stringop_alg;
  enum tls_dialect x_ix86_tls_dialect;
  int x_ix86_branch_cost;
  int x_ix86_dump_tunes;
  int x_ix86_force_align_arg_pointer;
  int x_ix86_force_drap;
  int x_ix86_incoming_stack_boundary_arg;
  int x_ix86_preferred_stack_boundary_arg;
  int x_ix86_regparm;
  int x_ix86_section_threshold;
  int x_ix86_sse2avx;
  int x_ix86_tune_no_default;
  int x_recip_mask_explicit;
  int x_recip_mask;
  int x_target_flags;
  unsigned char arch;
  unsigned char arch_specified;
  unsigned char branch_cost;
  unsigned char schedule;
  unsigned char tune;
  unsigned char tune_defaulted;
};


/* Save optimization variables into a structure.  */
extern void cl_optimization_save (struct cl_optimization *, struct gcc_options *);

/* Restore optimization variables from a structure.  */
extern void cl_optimization_restore (struct gcc_options *, struct cl_optimization *);

/* Print optimization variables from a structure.  */
extern void cl_optimization_print (FILE *, int, struct cl_optimization *);

/* Save selected option variables into a structure.  */
extern void cl_target_option_save (struct cl_target_option *, struct gcc_options *);

/* Restore selected option variables from a structure.  */
extern void cl_target_option_restore (struct gcc_options *, struct cl_target_option *);

/* Print target option variables from a structure.  */
extern void cl_target_option_print (FILE *, int, struct cl_target_option *);

/* Anything that includes tm.h, does not necessarily need this.  */
#if !defined(GCC_TM_H)
#include "input.h" /* for location_t */
bool                                                                  
common_handle_option_auto (struct gcc_options *opts,                  
                           struct gcc_options *opts_set,              
                           const struct cl_decoded_option *decoded,   
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
Ada_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
AdaSCIL_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
AdaWhy_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
C_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
CXX_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
Fortran_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
Go_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
Java_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
LTO_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
ObjC_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
bool                                                                  
ObjCXX_handle_option_auto (struct gcc_options *opts,              
                           struct gcc_options *opts_set,              
                           size_t scode, const char *arg, int value,  
                           unsigned int lang_mask, int kind,          
                           location_t loc,                            
                           const struct cl_option_handlers *handlers, 
                           diagnostic_context *dc);                   
#endif
#endif

#define MASK_128BIT_LONG_DOUBLE (1 << 0)
#define OPTION_MASK_CODE16 (HOST_WIDE_INT_1 << 0)
#define OPTION_MASK_ISA_64BIT (HOST_WIDE_INT_1 << 1)
#define OPTION_MASK_ISA_3DNOW (HOST_WIDE_INT_1 << 2)
#define OPTION_MASK_ISA_3DNOW_A (HOST_WIDE_INT_1 << 3)
#define OPTION_MASK_ABI_64 (HOST_WIDE_INT_1 << 4)
#define MASK_80387 (1 << 1)
#define MASK_USE_8BIT_IDIV (1 << 2)
#define OPTION_MASK_ISA_ABM (HOST_WIDE_INT_1 << 5)
#define MASK_ACCUMULATE_OUTGOING_ARGS (1 << 3)
#define OPTION_MASK_ISA_ADX (HOST_WIDE_INT_1 << 6)
#define OPTION_MASK_ISA_AES (HOST_WIDE_INT_1 << 7)
#define MASK_ALIGN_DOUBLE (1 << 4)
#define MASK_NO_ALIGN_STRINGOPS (1 << 5)
#define OPTION_MASK_ISA_AVX (HOST_WIDE_INT_1 << 8)
#define OPTION_MASK_ISA_AVX2 (HOST_WIDE_INT_1 << 9)
#define MASK_AVX256_SPLIT_UNALIGNED_LOAD (1 << 6)
#define MASK_AVX256_SPLIT_UNALIGNED_STORE (1 << 7)
#define OPTION_MASK_ISA_AVX512CD (HOST_WIDE_INT_1 << 10)
#define OPTION_MASK_ISA_AVX512ER (HOST_WIDE_INT_1 << 11)
#define OPTION_MASK_ISA_AVX512F (HOST_WIDE_INT_1 << 12)
#define OPTION_MASK_ISA_AVX512PF (HOST_WIDE_INT_1 << 13)
#define OPTION_MASK_ISA_BMI (HOST_WIDE_INT_1 << 14)
#define OPTION_MASK_ISA_BMI2 (HOST_WIDE_INT_1 << 15)
#define MASK_CLD (1 << 8)
#define OPTION_MASK_ISA_CRC32 (HOST_WIDE_INT_1 << 16)
#define OPTION_MASK_ISA_CX16 (HOST_WIDE_INT_1 << 17)
#define MASK_MACHO_DYNAMIC_NO_PIC (1 << 9)
#define OPTION_MASK_ISA_F16C (HOST_WIDE_INT_1 << 18)
#define MASK_NO_FANCY_MATH_387 (1 << 10)
#define OPTION_MASK_ISA_FMA (HOST_WIDE_INT_1 << 19)
#define OPTION_MASK_ISA_FMA4 (HOST_WIDE_INT_1 << 20)
#define MASK_FLOAT_RETURNS (1 << 11)
#define OPTION_MASK_ISA_FSGSBASE (HOST_WIDE_INT_1 << 21)
#define OPTION_MASK_ISA_FXSR (HOST_WIDE_INT_1 << 22)
#define OPTION_MASK_ISA_HLE (HOST_WIDE_INT_1 << 23)
#define MASK_IEEE_FP (1 << 12)
#define MASK_INLINE_ALL_STRINGOPS (1 << 13)
#define MASK_INLINE_STRINGOPS_DYNAMICALLY (1 << 14)
#define MASK_LONG_DOUBLE_128 (1 << 15)
#define MASK_LONG_DOUBLE_64 (1 << 16)
#define OPTION_MASK_ISA_LWP (HOST_WIDE_INT_1 << 24)
#define OPTION_MASK_ISA_LZCNT (HOST_WIDE_INT_1 << 25)
#define OPTION_MASK_ISA_MMX (HOST_WIDE_INT_1 << 26)
#define OPTION_MASK_ISA_MOVBE (HOST_WIDE_INT_1 << 27)
#define MASK_MS_BITFIELD_LAYOUT (1 << 17)
#define MASK_NO_PUSH_ARGS (1 << 18)
#define MASK_NO_RED_ZONE (1 << 19)
#define OPTION_MASK_ISA_SSE4_1 (HOST_WIDE_INT_1 << 28)
#define MASK_OMIT_LEAF_FRAME_POINTER (1 << 20)
#define OPTION_MASK_ISA_PCLMUL (HOST_WIDE_INT_1 << 29)
#define OPTION_MASK_ISA_POPCNT (HOST_WIDE_INT_1 << 30)
#define MASK_PREFER_AVX128 (1 << 21)
#define OPTION_MASK_ISA_PREFETCHWT1 (HOST_WIDE_INT_1 << 31)
#define OPTION_MASK_ISA_PRFCHW (HOST_WIDE_INT_1 << 32)
#define OPTION_MASK_ISA_RDRND (HOST_WIDE_INT_1 << 33)
#define OPTION_MASK_ISA_RDSEED (HOST_WIDE_INT_1 << 34)
#define MASK_RECIP (1 << 22)
#define MASK_RTD (1 << 23)
#define OPTION_MASK_ISA_RTM (HOST_WIDE_INT_1 << 35)
#define OPTION_MASK_ISA_SAHF (HOST_WIDE_INT_1 << 36)
#define OPTION_MASK_ISA_SHA (HOST_WIDE_INT_1 << 37)
#define OPTION_MASK_ISA_SSE (HOST_WIDE_INT_1 << 38)
#define OPTION_MASK_ISA_SSE2 (HOST_WIDE_INT_1 << 39)
#define OPTION_MASK_ISA_SSE3 (HOST_WIDE_INT_1 << 40)
#define OPTION_MASK_ISA_SSE4_2 (HOST_WIDE_INT_1 << 41)
#define OPTION_MASK_ISA_SSE4A (HOST_WIDE_INT_1 << 42)
#define MASK_SSEREGPARM (1 << 24)
#define OPTION_MASK_ISA_SSSE3 (HOST_WIDE_INT_1 << 43)
#define MASK_STACK_PROBE (1 << 25)
#define OPTION_MASK_ISA_TBM (HOST_WIDE_INT_1 << 44)
#define MASK_TLS_DIRECT_SEG_REFS (1 << 26)
#define MASK_VECT8_RETURNS (1 << 27)
#define MASK_VZEROUPPER (1 << 28)
#define OPTION_MASK_ABI_X32 (HOST_WIDE_INT_1 << 45)
#define OPTION_MASK_ISA_XOP (HOST_WIDE_INT_1 << 46)
#define OPTION_MASK_ISA_XSAVE (HOST_WIDE_INT_1 << 47)
#define OPTION_MASK_ISA_XSAVEOPT (HOST_WIDE_INT_1 << 48)
 #if defined(HOST_BITS_PER_WIDE_INT) && 49 >= HOST_BITS_PER_WIDE_INT
#error too many masks for ix86_isa_flags
#endif

#define TARGET_128BIT_LONG_DOUBLE ((target_flags & MASK_128BIT_LONG_DOUBLE) != 0)
#define TARGET_128BIT_LONG_DOUBLE_P(target_flags) ((target_flags & MASK_128BIT_LONG_DOUBLE) != 0)
#define TARGET_CODE16 ((ix86_isa_flags & OPTION_MASK_CODE16) != 0)
#define TARGET_CODE16_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_CODE16) != 0)
#define TARGET_ISA_64BIT ((ix86_isa_flags & OPTION_MASK_ISA_64BIT) != 0)
#define TARGET_ISA_64BIT_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_64BIT) != 0)
#define TARGET_ISA_3DNOW ((ix86_isa_flags & OPTION_MASK_ISA_3DNOW) != 0)
#define TARGET_ISA_3DNOW_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_3DNOW) != 0)
#define TARGET_ISA_3DNOW_A ((ix86_isa_flags & OPTION_MASK_ISA_3DNOW_A) != 0)
#define TARGET_ISA_3DNOW_A_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_3DNOW_A) != 0)
#define TARGET_ABI_64 ((ix86_isa_flags & OPTION_MASK_ABI_64) != 0)
#define TARGET_ABI_64_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ABI_64) != 0)
#define TARGET_80387 ((target_flags & MASK_80387) != 0)
#define TARGET_80387_P(target_flags) ((target_flags & MASK_80387) != 0)
#define TARGET_USE_8BIT_IDIV ((target_flags & MASK_USE_8BIT_IDIV) != 0)
#define TARGET_USE_8BIT_IDIV_P(target_flags) ((target_flags & MASK_USE_8BIT_IDIV) != 0)
#define TARGET_ISA_ABM ((ix86_isa_flags & OPTION_MASK_ISA_ABM) != 0)
#define TARGET_ISA_ABM_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_ABM) != 0)
#define TARGET_ACCUMULATE_OUTGOING_ARGS ((target_flags & MASK_ACCUMULATE_OUTGOING_ARGS) != 0)
#define TARGET_ACCUMULATE_OUTGOING_ARGS_P(target_flags) ((target_flags & MASK_ACCUMULATE_OUTGOING_ARGS) != 0)
#define TARGET_ISA_ADX ((ix86_isa_flags & OPTION_MASK_ISA_ADX) != 0)
#define TARGET_ISA_ADX_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_ADX) != 0)
#define TARGET_ISA_AES ((ix86_isa_flags & OPTION_MASK_ISA_AES) != 0)
#define TARGET_ISA_AES_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_AES) != 0)
#define TARGET_ALIGN_DOUBLE ((target_flags & MASK_ALIGN_DOUBLE) != 0)
#define TARGET_ALIGN_DOUBLE_P(target_flags) ((target_flags & MASK_ALIGN_DOUBLE) != 0)
#define TARGET_NO_ALIGN_STRINGOPS ((target_flags & MASK_NO_ALIGN_STRINGOPS) != 0)
#define TARGET_NO_ALIGN_STRINGOPS_P(target_flags) ((target_flags & MASK_NO_ALIGN_STRINGOPS) != 0)
#define TARGET_ISA_AVX ((ix86_isa_flags & OPTION_MASK_ISA_AVX) != 0)
#define TARGET_ISA_AVX_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_AVX) != 0)
#define TARGET_ISA_AVX2 ((ix86_isa_flags & OPTION_MASK_ISA_AVX2) != 0)
#define TARGET_ISA_AVX2_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_AVX2) != 0)
#define TARGET_AVX256_SPLIT_UNALIGNED_LOAD ((target_flags & MASK_AVX256_SPLIT_UNALIGNED_LOAD) != 0)
#define TARGET_AVX256_SPLIT_UNALIGNED_LOAD_P(target_flags) ((target_flags & MASK_AVX256_SPLIT_UNALIGNED_LOAD) != 0)
#define TARGET_AVX256_SPLIT_UNALIGNED_STORE ((target_flags & MASK_AVX256_SPLIT_UNALIGNED_STORE) != 0)
#define TARGET_AVX256_SPLIT_UNALIGNED_STORE_P(target_flags) ((target_flags & MASK_AVX256_SPLIT_UNALIGNED_STORE) != 0)
#define TARGET_ISA_AVX512CD ((ix86_isa_flags & OPTION_MASK_ISA_AVX512CD) != 0)
#define TARGET_ISA_AVX512CD_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_AVX512CD) != 0)
#define TARGET_ISA_AVX512ER ((ix86_isa_flags & OPTION_MASK_ISA_AVX512ER) != 0)
#define TARGET_ISA_AVX512ER_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_AVX512ER) != 0)
#define TARGET_ISA_AVX512F ((ix86_isa_flags & OPTION_MASK_ISA_AVX512F) != 0)
#define TARGET_ISA_AVX512F_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_AVX512F) != 0)
#define TARGET_ISA_AVX512PF ((ix86_isa_flags & OPTION_MASK_ISA_AVX512PF) != 0)
#define TARGET_ISA_AVX512PF_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_AVX512PF) != 0)
#define TARGET_ISA_BMI ((ix86_isa_flags & OPTION_MASK_ISA_BMI) != 0)
#define TARGET_ISA_BMI_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_BMI) != 0)
#define TARGET_ISA_BMI2 ((ix86_isa_flags & OPTION_MASK_ISA_BMI2) != 0)
#define TARGET_ISA_BMI2_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_BMI2) != 0)
#define TARGET_CLD ((target_flags & MASK_CLD) != 0)
#define TARGET_CLD_P(target_flags) ((target_flags & MASK_CLD) != 0)
#define TARGET_ISA_CRC32 ((ix86_isa_flags & OPTION_MASK_ISA_CRC32) != 0)
#define TARGET_ISA_CRC32_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_CRC32) != 0)
#define TARGET_ISA_CX16 ((ix86_isa_flags & OPTION_MASK_ISA_CX16) != 0)
#define TARGET_ISA_CX16_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_CX16) != 0)
#define TARGET_MACHO_DYNAMIC_NO_PIC ((target_flags & MASK_MACHO_DYNAMIC_NO_PIC) != 0)
#define TARGET_MACHO_DYNAMIC_NO_PIC_P(target_flags) ((target_flags & MASK_MACHO_DYNAMIC_NO_PIC) != 0)
#define TARGET_ISA_F16C ((ix86_isa_flags & OPTION_MASK_ISA_F16C) != 0)
#define TARGET_ISA_F16C_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_F16C) != 0)
#define TARGET_NO_FANCY_MATH_387 ((target_flags & MASK_NO_FANCY_MATH_387) != 0)
#define TARGET_NO_FANCY_MATH_387_P(target_flags) ((target_flags & MASK_NO_FANCY_MATH_387) != 0)
#define TARGET_ISA_FMA ((ix86_isa_flags & OPTION_MASK_ISA_FMA) != 0)
#define TARGET_ISA_FMA_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_FMA) != 0)
#define TARGET_ISA_FMA4 ((ix86_isa_flags & OPTION_MASK_ISA_FMA4) != 0)
#define TARGET_ISA_FMA4_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_FMA4) != 0)
#define TARGET_FLOAT_RETURNS ((target_flags & MASK_FLOAT_RETURNS) != 0)
#define TARGET_FLOAT_RETURNS_P(target_flags) ((target_flags & MASK_FLOAT_RETURNS) != 0)
#define TARGET_ISA_FSGSBASE ((ix86_isa_flags & OPTION_MASK_ISA_FSGSBASE) != 0)
#define TARGET_ISA_FSGSBASE_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_FSGSBASE) != 0)
#define TARGET_ISA_FXSR ((ix86_isa_flags & OPTION_MASK_ISA_FXSR) != 0)
#define TARGET_ISA_FXSR_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_FXSR) != 0)
#define TARGET_ISA_HLE ((ix86_isa_flags & OPTION_MASK_ISA_HLE) != 0)
#define TARGET_ISA_HLE_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_HLE) != 0)
#define TARGET_IEEE_FP ((target_flags & MASK_IEEE_FP) != 0)
#define TARGET_IEEE_FP_P(target_flags) ((target_flags & MASK_IEEE_FP) != 0)
#define TARGET_INLINE_ALL_STRINGOPS ((target_flags & MASK_INLINE_ALL_STRINGOPS) != 0)
#define TARGET_INLINE_ALL_STRINGOPS_P(target_flags) ((target_flags & MASK_INLINE_ALL_STRINGOPS) != 0)
#define TARGET_INLINE_STRINGOPS_DYNAMICALLY ((target_flags & MASK_INLINE_STRINGOPS_DYNAMICALLY) != 0)
#define TARGET_INLINE_STRINGOPS_DYNAMICALLY_P(target_flags) ((target_flags & MASK_INLINE_STRINGOPS_DYNAMICALLY) != 0)
#define TARGET_LONG_DOUBLE_128 ((target_flags & MASK_LONG_DOUBLE_128) != 0)
#define TARGET_LONG_DOUBLE_128_P(target_flags) ((target_flags & MASK_LONG_DOUBLE_128) != 0)
#define TARGET_LONG_DOUBLE_64 ((target_flags & MASK_LONG_DOUBLE_64) != 0)
#define TARGET_LONG_DOUBLE_64_P(target_flags) ((target_flags & MASK_LONG_DOUBLE_64) != 0)
#define TARGET_ISA_LWP ((ix86_isa_flags & OPTION_MASK_ISA_LWP) != 0)
#define TARGET_ISA_LWP_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_LWP) != 0)
#define TARGET_ISA_LZCNT ((ix86_isa_flags & OPTION_MASK_ISA_LZCNT) != 0)
#define TARGET_ISA_LZCNT_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_LZCNT) != 0)
#define TARGET_ISA_MMX ((ix86_isa_flags & OPTION_MASK_ISA_MMX) != 0)
#define TARGET_ISA_MMX_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_MMX) != 0)
#define TARGET_ISA_MOVBE ((ix86_isa_flags & OPTION_MASK_ISA_MOVBE) != 0)
#define TARGET_ISA_MOVBE_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_MOVBE) != 0)
#define TARGET_MS_BITFIELD_LAYOUT ((target_flags & MASK_MS_BITFIELD_LAYOUT) != 0)
#define TARGET_MS_BITFIELD_LAYOUT_P(target_flags) ((target_flags & MASK_MS_BITFIELD_LAYOUT) != 0)
#define TARGET_NO_PUSH_ARGS ((target_flags & MASK_NO_PUSH_ARGS) != 0)
#define TARGET_NO_PUSH_ARGS_P(target_flags) ((target_flags & MASK_NO_PUSH_ARGS) != 0)
#define TARGET_NO_RED_ZONE ((target_flags & MASK_NO_RED_ZONE) != 0)
#define TARGET_NO_RED_ZONE_P(target_flags) ((target_flags & MASK_NO_RED_ZONE) != 0)
#define TARGET_ISA_SSE4_1 ((ix86_isa_flags & OPTION_MASK_ISA_SSE4_1) != 0)
#define TARGET_ISA_SSE4_1_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_SSE4_1) != 0)
#define TARGET_OMIT_LEAF_FRAME_POINTER ((target_flags & MASK_OMIT_LEAF_FRAME_POINTER) != 0)
#define TARGET_OMIT_LEAF_FRAME_POINTER_P(target_flags) ((target_flags & MASK_OMIT_LEAF_FRAME_POINTER) != 0)
#define TARGET_ISA_PCLMUL ((ix86_isa_flags & OPTION_MASK_ISA_PCLMUL) != 0)
#define TARGET_ISA_PCLMUL_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_PCLMUL) != 0)
#define TARGET_ISA_POPCNT ((ix86_isa_flags & OPTION_MASK_ISA_POPCNT) != 0)
#define TARGET_ISA_POPCNT_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_POPCNT) != 0)
#define TARGET_PREFER_AVX128 ((target_flags & MASK_PREFER_AVX128) != 0)
#define TARGET_PREFER_AVX128_P(target_flags) ((target_flags & MASK_PREFER_AVX128) != 0)
#define TARGET_ISA_PREFETCHWT1 ((ix86_isa_flags & OPTION_MASK_ISA_PREFETCHWT1) != 0)
#define TARGET_ISA_PREFETCHWT1_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_PREFETCHWT1) != 0)
#define TARGET_ISA_PRFCHW ((ix86_isa_flags & OPTION_MASK_ISA_PRFCHW) != 0)
#define TARGET_ISA_PRFCHW_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_PRFCHW) != 0)
#define TARGET_ISA_RDRND ((ix86_isa_flags & OPTION_MASK_ISA_RDRND) != 0)
#define TARGET_ISA_RDRND_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_RDRND) != 0)
#define TARGET_ISA_RDSEED ((ix86_isa_flags & OPTION_MASK_ISA_RDSEED) != 0)
#define TARGET_ISA_RDSEED_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_RDSEED) != 0)
#define TARGET_RECIP ((target_flags & MASK_RECIP) != 0)
#define TARGET_RECIP_P(target_flags) ((target_flags & MASK_RECIP) != 0)
#define TARGET_RTD ((target_flags & MASK_RTD) != 0)
#define TARGET_RTD_P(target_flags) ((target_flags & MASK_RTD) != 0)
#define TARGET_ISA_RTM ((ix86_isa_flags & OPTION_MASK_ISA_RTM) != 0)
#define TARGET_ISA_RTM_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_RTM) != 0)
#define TARGET_ISA_SAHF ((ix86_isa_flags & OPTION_MASK_ISA_SAHF) != 0)
#define TARGET_ISA_SAHF_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_SAHF) != 0)
#define TARGET_ISA_SHA ((ix86_isa_flags & OPTION_MASK_ISA_SHA) != 0)
#define TARGET_ISA_SHA_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_SHA) != 0)
#define TARGET_ISA_SSE ((ix86_isa_flags & OPTION_MASK_ISA_SSE) != 0)
#define TARGET_ISA_SSE_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_SSE) != 0)
#define TARGET_ISA_SSE2 ((ix86_isa_flags & OPTION_MASK_ISA_SSE2) != 0)
#define TARGET_ISA_SSE2_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_SSE2) != 0)
#define TARGET_ISA_SSE3 ((ix86_isa_flags & OPTION_MASK_ISA_SSE3) != 0)
#define TARGET_ISA_SSE3_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_SSE3) != 0)
#define TARGET_ISA_SSE4_2 ((ix86_isa_flags & OPTION_MASK_ISA_SSE4_2) != 0)
#define TARGET_ISA_SSE4_2_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_SSE4_2) != 0)
#define TARGET_ISA_SSE4A ((ix86_isa_flags & OPTION_MASK_ISA_SSE4A) != 0)
#define TARGET_ISA_SSE4A_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_SSE4A) != 0)
#define TARGET_SSEREGPARM ((target_flags & MASK_SSEREGPARM) != 0)
#define TARGET_SSEREGPARM_P(target_flags) ((target_flags & MASK_SSEREGPARM) != 0)
#define TARGET_ISA_SSSE3 ((ix86_isa_flags & OPTION_MASK_ISA_SSSE3) != 0)
#define TARGET_ISA_SSSE3_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_SSSE3) != 0)
#define TARGET_STACK_PROBE ((target_flags & MASK_STACK_PROBE) != 0)
#define TARGET_STACK_PROBE_P(target_flags) ((target_flags & MASK_STACK_PROBE) != 0)
#define TARGET_ISA_TBM ((ix86_isa_flags & OPTION_MASK_ISA_TBM) != 0)
#define TARGET_ISA_TBM_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_TBM) != 0)
#define TARGET_TLS_DIRECT_SEG_REFS ((target_flags & MASK_TLS_DIRECT_SEG_REFS) != 0)
#define TARGET_TLS_DIRECT_SEG_REFS_P(target_flags) ((target_flags & MASK_TLS_DIRECT_SEG_REFS) != 0)
#define TARGET_VECT8_RETURNS ((target_flags & MASK_VECT8_RETURNS) != 0)
#define TARGET_VECT8_RETURNS_P(target_flags) ((target_flags & MASK_VECT8_RETURNS) != 0)
#define TARGET_VZEROUPPER ((target_flags & MASK_VZEROUPPER) != 0)
#define TARGET_VZEROUPPER_P(target_flags) ((target_flags & MASK_VZEROUPPER) != 0)
#define TARGET_ABI_X32 ((ix86_isa_flags & OPTION_MASK_ABI_X32) != 0)
#define TARGET_ABI_X32_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ABI_X32) != 0)
#define TARGET_ISA_XOP ((ix86_isa_flags & OPTION_MASK_ISA_XOP) != 0)
#define TARGET_ISA_XOP_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_XOP) != 0)
#define TARGET_ISA_XSAVE ((ix86_isa_flags & OPTION_MASK_ISA_XSAVE) != 0)
#define TARGET_ISA_XSAVE_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_XSAVE) != 0)
#define TARGET_ISA_XSAVEOPT ((ix86_isa_flags & OPTION_MASK_ISA_XSAVEOPT) != 0)
#define TARGET_ISA_XSAVEOPT_P(ix86_isa_flags) ((ix86_isa_flags & OPTION_MASK_ISA_XSAVEOPT) != 0)

#define TARGET_ALIGN_STRINGOPS ((target_flags & MASK_NO_ALIGN_STRINGOPS) == 0)
#define TARGET_USE_FANCY_MATH_387 ((target_flags & MASK_NO_FANCY_MATH_387) == 0)
#define TARGET_PUSH_ARGS ((target_flags & MASK_NO_PUSH_ARGS) == 0)
#define TARGET_RED_ZONE ((target_flags & MASK_NO_RED_ZONE) == 0)

#define CL_Ada        (1U << 0)
#define CL_AdaSCIL    (1U << 1)
#define CL_AdaWhy     (1U << 2)
#define CL_C          (1U << 3)
#define CL_CXX        (1U << 4)
#define CL_Fortran    (1U << 5)
#define CL_Go         (1U << 6)
#define CL_Java       (1U << 7)
#define CL_LTO        (1U << 8)
#define CL_ObjC       (1U << 9)
#define CL_ObjCXX     (1U << 10)
#define CL_LANG_ALL   ((1U << 11) - 1)

enum opt_code
{
  OPT____ = 0,                               /* -### */
  /* OPT__CLASSPATH = 1, */                  /* --CLASSPATH */
  /* OPT__all_warnings = 2, */               /* --all-warnings */
  /* OPT__ansi = 3, */                       /* --ansi */
  /* OPT__assemble = 4, */                   /* --assemble */
  /* OPT__assert = 5, */                     /* --assert */
  /* OPT__assert_ = 6, */                    /* --assert= */
  /* OPT__bootclasspath = 7, */              /* --bootclasspath */
  /* OPT__classpath = 8, */                  /* --classpath */
  /* OPT__comments = 9, */                   /* --comments */
  /* OPT__comments_in_macros = 10, */        /* --comments-in-macros */
  /* OPT__compile = 11, */                   /* --compile */
  /* OPT__coverage = 12, */                  /* --coverage */
  /* OPT__debug = 13, */                     /* --debug */
  /* OPT__define_macro = 14, */              /* --define-macro */
  /* OPT__define_macro_ = 15, */             /* --define-macro= */
  /* OPT__dependencies = 16, */              /* --dependencies */
  /* OPT__dump = 17, */                      /* --dump */
  /* OPT__dump_ = 18, */                     /* --dump= */
  /* OPT__dumpbase = 19, */                  /* --dumpbase */
  /* OPT__dumpdir = 20, */                   /* --dumpdir */
  /* OPT__encoding = 21, */                  /* --encoding */
  /* OPT__entry = 22, */                     /* --entry */
  /* OPT__entry_ = 23, */                    /* --entry= */
  /* OPT__extdirs = 24, */                   /* --extdirs */
  /* OPT__extra_warnings = 25, */            /* --extra-warnings */
  /* OPT__for_assembler = 26, */             /* --for-assembler */
  /* OPT__for_assembler_ = 27, */            /* --for-assembler= */
  /* OPT__for_linker = 28, */                /* --for-linker */
  /* OPT__for_linker_ = 29, */               /* --for-linker= */
  /* OPT__force_link = 30, */                /* --force-link */
  /* OPT__force_link_ = 31, */               /* --force-link= */
  OPT__help = 32,                            /* --help */
  OPT__help_ = 33,                           /* --help= */
  /* OPT__imacros = 34, */                   /* --imacros */
  /* OPT__imacros_ = 35, */                  /* --imacros= */
  /* OPT__include = 36, */                   /* --include */
  /* OPT__include_barrier = 37, */           /* --include-barrier */
  /* OPT__include_directory = 38, */         /* --include-directory */
  /* OPT__include_directory_after = 39, */   /* --include-directory-after */
  /* OPT__include_directory_after_ = 40, */  /* --include-directory-after= */
  /* OPT__include_directory_ = 41, */        /* --include-directory= */
  /* OPT__include_prefix = 42, */            /* --include-prefix */
  /* OPT__include_prefix_ = 43, */           /* --include-prefix= */
  /* OPT__include_with_prefix = 44, */       /* --include-with-prefix */
  /* OPT__include_with_prefix_after = 45, */ /* --include-with-prefix-after */
  /* OPT__include_with_prefix_after_ = 46, *//* --include-with-prefix-after= */
  /* OPT__include_with_prefix_before = 47, *//* --include-with-prefix-before */
  /* OPT__include_with_prefix_before_ = 48, *//* --include-with-prefix-before= */
  /* OPT__include_with_prefix_ = 49, */      /* --include-with-prefix= */
  /* OPT__include_ = 50, */                  /* --include= */
  /* OPT__language = 51, */                  /* --language */
  /* OPT__language_ = 52, */                 /* --language= */
  /* OPT__library_directory = 53, */         /* --library-directory */
  /* OPT__library_directory_ = 54, */        /* --library-directory= */
  /* OPT__no_canonical_prefixes = 55, */     /* --no-canonical-prefixes */
  /* OPT__no_integrated_cpp = 56, */         /* --no-integrated-cpp */
  /* OPT__no_line_commands = 57, */          /* --no-line-commands */
  /* OPT__no_standard_includes = 58, */      /* --no-standard-includes */
  /* OPT__no_standard_libraries = 59, */     /* --no-standard-libraries */
  OPT__no_sysroot_suffix = 60,               /* --no-sysroot-suffix */
  /* OPT__no_warnings = 61, */               /* --no-warnings */
  /* OPT__optimize = 62, */                  /* --optimize */
  /* OPT__output = 63, */                    /* --output */
  /* OPT__output_class_directory = 64, */    /* --output-class-directory */
  /* OPT__output_class_directory_ = 65, */   /* --output-class-directory= */
  OPT__output_pch_ = 66,                     /* --output-pch= */
  /* OPT__output_ = 67, */                   /* --output= */
  OPT__param = 68,                           /* --param */
  /* OPT__param_ = 69, */                    /* --param= */
  /* OPT__pass_exit_codes = 70, */           /* --pass-exit-codes */
  /* OPT__pedantic = 71, */                  /* --pedantic */
  /* OPT__pedantic_errors = 72, */           /* --pedantic-errors */
  /* OPT__pie = 73, */                       /* --pie */
  /* OPT__pipe = 74, */                      /* --pipe */
  /* OPT__prefix = 75, */                    /* --prefix */
  /* OPT__prefix_ = 76, */                   /* --prefix= */
  /* OPT__preprocess = 77, */                /* --preprocess */
  /* OPT__print_file_name = 78, */           /* --print-file-name */
  /* OPT__print_file_name_ = 79, */          /* --print-file-name= */
  /* OPT__print_libgcc_file_name = 80, */    /* --print-libgcc-file-name */
  /* OPT__print_missing_file_dependencies = 81, *//* --print-missing-file-dependencies */
  /* OPT__print_multi_directory = 82, */     /* --print-multi-directory */
  /* OPT__print_multi_lib = 83, */           /* --print-multi-lib */
  /* OPT__print_multi_os_directory = 84, */  /* --print-multi-os-directory */
  /* OPT__print_multiarch = 85, */           /* --print-multiarch */
  /* OPT__print_prog_name = 86, */           /* --print-prog-name */
  /* OPT__print_prog_name_ = 87, */          /* --print-prog-name= */
  /* OPT__print_search_dirs = 88, */         /* --print-search-dirs */
  /* OPT__print_sysroot = 89, */             /* --print-sysroot */
  /* OPT__print_sysroot_headers_suffix = 90, *//* --print-sysroot-headers-suffix */
  /* OPT__profile = 91, */                   /* --profile */
  /* OPT__resource = 92, */                  /* --resource */
  /* OPT__resource_ = 93, */                 /* --resource= */
  /* OPT__save_temps = 94, */                /* --save-temps */
  /* OPT__shared = 95, */                    /* --shared */
  /* OPT__specs = 96, */                     /* --specs */
  /* OPT__specs_ = 97, */                    /* --specs= */
  /* OPT__static = 98, */                    /* --static */
  /* OPT__symbolic = 99, */                  /* --symbolic */
  /* OPT__sysroot = 100, */                  /* --sysroot */
  OPT__sysroot_ = 101,                       /* --sysroot= */
  OPT__target_help = 102,                    /* --target-help */
  /* OPT__time = 103, */                     /* --time */
  /* OPT__trace_includes = 104, */           /* --trace-includes */
  /* OPT__traditional = 105, */              /* --traditional */
  /* OPT__traditional_cpp = 106, */          /* --traditional-cpp */
  /* OPT__trigraphs = 107, */                /* --trigraphs */
  /* OPT__undefine_macro = 108, */           /* --undefine-macro */
  /* OPT__undefine_macro_ = 109, */          /* --undefine-macro= */
  /* OPT__user_dependencies = 110, */        /* --user-dependencies */
  /* OPT__verbose = 111, */                  /* --verbose */
  OPT__version = 112,                        /* --version */
  /* OPT__write_dependencies = 113, */       /* --write-dependencies */
  /* OPT__write_user_dependencies = 114, */  /* --write-user-dependencies */
  OPT_A = 115,                               /* -A */
  OPT_B = 116,                               /* -B */
  OPT_C = 117,                               /* -C */
  OPT_CC = 118,                              /* -CC */
  /* OPT_CLASSPATH = 119, */                 /* -CLASSPATH */
  OPT_D = 120,                               /* -D */
  OPT_E = 121,                               /* -E */
  OPT_F = 122,                               /* -F */
  OPT_H = 123,                               /* -H */
  OPT_I = 124,                               /* -I */
  OPT_J = 125,                               /* -J */
  OPT_L = 126,                               /* -L */
  OPT_M = 127,                               /* -M */
  OPT_MD = 128,                              /* -MD */
  OPT_MD_ = 129,                             /* -MD_ */
  OPT_MF = 130,                              /* -MF */
  OPT_MG = 131,                              /* -MG */
  OPT_MM = 132,                              /* -MM */
  OPT_MMD = 133,                             /* -MMD */
  OPT_MMD_ = 134,                            /* -MMD_ */
  OPT_MP = 135,                              /* -MP */
  OPT_MQ = 136,                              /* -MQ */
  OPT_MT = 137,                              /* -MT */
  OPT_Mach = 138,                            /* -Mach */
  OPT_N = 139,                               /* -N */
  OPT_O = 140,                               /* -O */
  OPT_Ofast = 141,                           /* -Ofast */
  OPT_Og = 142,                              /* -Og */
  OPT_Os = 143,                              /* -Os */
  OPT_P = 144,                               /* -P */
  OPT_Q = 145,                               /* -Q */
  OPT_Qn = 146,                              /* -Qn */
  OPT_Qy = 147,                              /* -Qy */
  OPT_R = 148,                               /* -R */
  OPT_S = 149,                               /* -S */
  OPT_T = 150,                               /* -T */
  OPT_Tbss = 151,                            /* -Tbss */
  OPT_Tbss_ = 152,                           /* -Tbss= */
  OPT_Tdata = 153,                           /* -Tdata */
  OPT_Tdata_ = 154,                          /* -Tdata= */
  OPT_Ttext = 155,                           /* -Ttext */
  OPT_Ttext_ = 156,                          /* -Ttext= */
  OPT_U = 157,                               /* -U */
  /* OPT_W = 158, */                         /* -W */
  OPT_Wa_ = 159,                             /* -Wa, */
  OPT_Wabi = 160,                            /* -Wabi */
  OPT_Wabi_tag = 161,                        /* -Wabi-tag */
  OPT_Waddress = 162,                        /* -Waddress */
  OPT_Waggregate_return = 163,               /* -Waggregate-return */
  OPT_Waggressive_loop_optimizations = 164,  /* -Waggressive-loop-optimizations */
  OPT_Waliasing = 165,                       /* -Waliasing */
  OPT_Walign_commons = 166,                  /* -Walign-commons */
  OPT_Wall = 167,                            /* -Wall */
  OPT_Wall_deprecation = 168,                /* -Wall-deprecation */
  OPT_Wall_javadoc = 169,                    /* -Wall-javadoc */
  OPT_Wampersand = 170,                      /* -Wampersand */
  OPT_Warray_bounds = 171,                   /* -Warray-bounds */
  OPT_Warray_temporaries = 172,              /* -Warray-temporaries */
  OPT_Wassert_identifier = 173,              /* -Wassert-identifier */
  OPT_Wassign_intercept = 174,               /* -Wassign-intercept */
  OPT_Wattributes = 175,                     /* -Wattributes */
  OPT_Wbad_function_cast = 176,              /* -Wbad-function-cast */
  OPT_Wboxing = 177,                         /* -Wboxing */
  OPT_Wbuiltin_macro_redefined = 178,        /* -Wbuiltin-macro-redefined */
  OPT_Wc___compat = 179,                     /* -Wc++-compat */
  OPT_Wc__0x_compat = 180,                   /* -Wc++0x-compat */
  /* OPT_Wc__11_compat = 181, */             /* -Wc++11-compat */
  OPT_Wc_binding_type = 182,                 /* -Wc-binding-type */
  OPT_Wcast_align = 183,                     /* -Wcast-align */
  OPT_Wcast_qual = 184,                      /* -Wcast-qual */
  OPT_Wchar_concat = 185,                    /* -Wchar-concat */
  OPT_Wchar_subscripts = 186,                /* -Wchar-subscripts */
  OPT_Wcharacter_truncation = 187,           /* -Wcharacter-truncation */
  OPT_Wclobbered = 188,                      /* -Wclobbered */
  OPT_Wcomment = 189,                        /* -Wcomment */
  /* OPT_Wcomments = 190, */                 /* -Wcomments */
  OPT_Wcompare_reals = 191,                  /* -Wcompare-reals */
  OPT_Wcondition_assign = 192,               /* -Wcondition-assign */
  OPT_Wconditionally_supported = 193,        /* -Wconditionally-supported */
  OPT_Wconstructor_name = 194,               /* -Wconstructor-name */
  OPT_Wconversion = 195,                     /* -Wconversion */
  OPT_Wconversion_extra = 196,               /* -Wconversion-extra */
  OPT_Wconversion_null = 197,                /* -Wconversion-null */
  OPT_Wcoverage_mismatch = 198,              /* -Wcoverage-mismatch */
  OPT_Wcpp = 199,                            /* -Wcpp */
  OPT_Wctor_dtor_privacy = 200,              /* -Wctor-dtor-privacy */
  OPT_Wdate_time = 201,                      /* -Wdate-time */
  OPT_Wdeclaration_after_statement = 202,    /* -Wdeclaration-after-statement */
  OPT_Wdelete_incomplete = 203,              /* -Wdelete-incomplete */
  OPT_Wdelete_non_virtual_dtor = 204,        /* -Wdelete-non-virtual-dtor */
  OPT_Wdep_ann = 205,                        /* -Wdep-ann */
  OPT_Wdeprecated = 206,                     /* -Wdeprecated */
  OPT_Wdeprecated_declarations = 207,        /* -Wdeprecated-declarations */
  OPT_Wdisabled_optimization = 208,          /* -Wdisabled-optimization */
  OPT_Wdiscouraged = 209,                    /* -Wdiscouraged */
  OPT_Wdiv_by_zero = 210,                    /* -Wdiv-by-zero */
  OPT_Wdouble_promotion = 211,               /* -Wdouble-promotion */
  OPT_Weffc__ = 212,                         /* -Weffc++ */
  OPT_Wempty_block = 213,                    /* -Wempty-block */
  OPT_Wempty_body = 214,                     /* -Wempty-body */
  OPT_Wendif_labels = 215,                   /* -Wendif-labels */
  OPT_Wenum_compare = 216,                   /* -Wenum-compare */
  OPT_Wenum_identifier = 217,                /* -Wenum-identifier */
  OPT_Wenum_switch = 218,                    /* -Wenum-switch */
  OPT_Werror = 219,                          /* -Werror */
  /* OPT_Werror_implicit_function_declaration = 220, *//* -Werror-implicit-function-declaration */
  OPT_Werror_ = 221,                         /* -Werror= */
  OPT_Wextra = 222,                          /* -Wextra */
  OPT_Wextraneous_semicolon = 223,           /* -Wextraneous-semicolon */
  OPT_Wfallthrough = 224,                    /* -Wfallthrough */
  OPT_Wfatal_errors = 225,                   /* -Wfatal-errors */
  OPT_Wfield_hiding = 226,                   /* -Wfield-hiding */
  OPT_Wfinal_bound = 227,                    /* -Wfinal-bound */
  OPT_Wfinally = 228,                        /* -Wfinally */
  OPT_Wfloat_conversion = 229,               /* -Wfloat-conversion */
  OPT_Wfloat_equal = 230,                    /* -Wfloat-equal */
  OPT_Wforbidden = 231,                      /* -Wforbidden */
  /* OPT_Wformat = 232, */                   /* -Wformat */
  OPT_Wformat_contains_nul = 233,            /* -Wformat-contains-nul */
  OPT_Wformat_extra_args = 234,              /* -Wformat-extra-args */
  OPT_Wformat_nonliteral = 235,              /* -Wformat-nonliteral */
  OPT_Wformat_security = 236,                /* -Wformat-security */
  OPT_Wformat_y2k = 237,                     /* -Wformat-y2k */
  OPT_Wformat_zero_length = 238,             /* -Wformat-zero-length */
  OPT_Wformat_ = 239,                        /* -Wformat= */
  OPT_Wframe_larger_than_ = 240,             /* -Wframe-larger-than= */
  OPT_Wfree_nonheap_object = 241,            /* -Wfree-nonheap-object */
  OPT_Wfunction_elimination = 242,           /* -Wfunction-elimination */
  OPT_Whiding = 243,                         /* -Whiding */
  OPT_Wignored_qualifiers = 244,             /* -Wignored-qualifiers */
  OPT_Wimplicit = 245,                       /* -Wimplicit */
  OPT_Wimplicit_function_declaration = 246,  /* -Wimplicit-function-declaration */
  OPT_Wimplicit_int = 247,                   /* -Wimplicit-int */
  OPT_Wimplicit_interface = 248,             /* -Wimplicit-interface */
  OPT_Wimplicit_procedure = 249,             /* -Wimplicit-procedure */
  /* OPT_Wimport = 250, */                   /* -Wimport */
  OPT_Windirect_static = 251,                /* -Windirect-static */
  OPT_Winherited_variadic_ctor = 252,        /* -Winherited-variadic-ctor */
  OPT_Winit_self = 253,                      /* -Winit-self */
  OPT_Winline = 254,                         /* -Winline */
  OPT_Wint_to_pointer_cast = 255,            /* -Wint-to-pointer-cast */
  OPT_Wintf_annotation = 256,                /* -Wintf-annotation */
  OPT_Wintf_non_inherited = 257,             /* -Wintf-non-inherited */
  OPT_Wintrinsic_shadow = 258,               /* -Wintrinsic-shadow */
  OPT_Wintrinsics_std = 259,                 /* -Wintrinsics-std */
  OPT_Winvalid_memory_model = 260,           /* -Winvalid-memory-model */
  OPT_Winvalid_offsetof = 261,               /* -Winvalid-offsetof */
  OPT_Winvalid_pch = 262,                    /* -Winvalid-pch */
  OPT_Wjavadoc = 263,                        /* -Wjavadoc */
  OPT_Wjump_misses_init = 264,               /* -Wjump-misses-init */
  OPT_Wl_ = 265,                             /* -Wl, */
  /* OPT_Wlarger_than_ = 266, */             /* -Wlarger-than- */
  OPT_Wlarger_than_ = 267,                   /* -Wlarger-than= */
  OPT_Wline_truncation = 268,                /* -Wline-truncation */
  OPT_Wliteral_suffix = 269,                 /* -Wliteral-suffix */
  OPT_Wlocal_hiding = 270,                   /* -Wlocal-hiding */
  OPT_Wlogical_op = 271,                     /* -Wlogical-op */
  OPT_Wlong_long = 272,                      /* -Wlong-long */
  OPT_Wmain = 273,                           /* -Wmain */
  OPT_Wmasked_catch_block = 274,             /* -Wmasked-catch-block */
  OPT_Wmaybe_uninitialized = 275,            /* -Wmaybe-uninitialized */
  OPT_Wmissing_braces = 276,                 /* -Wmissing-braces */
  OPT_Wmissing_declarations = 277,           /* -Wmissing-declarations */
  OPT_Wmissing_field_initializers = 278,     /* -Wmissing-field-initializers */
  /* OPT_Wmissing_format_attribute = 279, */ /* -Wmissing-format-attribute */
  OPT_Wmissing_include_dirs = 280,           /* -Wmissing-include-dirs */
  /* OPT_Wmissing_noreturn = 281, */         /* -Wmissing-noreturn */
  OPT_Wmissing_parameter_type = 282,         /* -Wmissing-parameter-type */
  OPT_Wmissing_prototypes = 283,             /* -Wmissing-prototypes */
  /* OPT_Wmudflap = 284, */                  /* -Wmudflap */
  OPT_Wmultichar = 285,                      /* -Wmultichar */
  OPT_Wnarrowing = 286,                      /* -Wnarrowing */
  OPT_Wnested_externs = 287,                 /* -Wnested-externs */
  OPT_Wnls = 288,                            /* -Wnls */
  OPT_Wno_effect_assign = 289,               /* -Wno-effect-assign */
  OPT_Wnoexcept = 290,                       /* -Wnoexcept */
  OPT_Wnon_template_friend = 291,            /* -Wnon-template-friend */
  OPT_Wnon_virtual_dtor = 292,               /* -Wnon-virtual-dtor */
  OPT_Wnonnull = 293,                        /* -Wnonnull */
  OPT_Wnonportable_cfstrings = 294,          /* -Wnonportable-cfstrings */
  OPT_Wnormalized_ = 295,                    /* -Wnormalized= */
  OPT_Wnull = 296,                           /* -Wnull */
  OPT_Wold_style_cast = 297,                 /* -Wold-style-cast */
  OPT_Wold_style_declaration = 298,          /* -Wold-style-declaration */
  OPT_Wold_style_definition = 299,           /* -Wold-style-definition */
  OPT_Wopenmp_simd = 300,                    /* -Wopenmp-simd */
  OPT_Wout_of_date = 301,                    /* -Wout-of-date */
  OPT_Wover_ann = 302,                       /* -Wover-ann */
  OPT_Woverflow = 303,                       /* -Woverflow */
  OPT_Woverlength_strings = 304,             /* -Woverlength-strings */
  OPT_Woverloaded_virtual = 305,             /* -Woverloaded-virtual */
  OPT_Woverride_init = 306,                  /* -Woverride-init */
  OPT_Wp_ = 307,                             /* -Wp, */
  OPT_Wpacked = 308,                         /* -Wpacked */
  OPT_Wpacked_bitfield_compat = 309,         /* -Wpacked-bitfield-compat */
  OPT_Wpadded = 310,                         /* -Wpadded */
  OPT_Wparam_assign = 311,                   /* -Wparam-assign */
  OPT_Wparentheses = 312,                    /* -Wparentheses */
  OPT_Wpedantic = 313,                       /* -Wpedantic */
  OPT_Wpkg_default_method = 314,             /* -Wpkg-default-method */
  OPT_Wpmf_conversions = 315,                /* -Wpmf-conversions */
  OPT_Wpointer_arith = 316,                  /* -Wpointer-arith */
  OPT_Wpointer_sign = 317,                   /* -Wpointer-sign */
  OPT_Wpointer_to_int_cast = 318,            /* -Wpointer-to-int-cast */
  OPT_Wpragmas = 319,                        /* -Wpragmas */
  OPT_Wproperty_assign_default = 320,        /* -Wproperty-assign-default */
  OPT_Wprotocol = 321,                       /* -Wprotocol */
  OPT_Wpsabi = 322,                          /* -Wpsabi */
  OPT_Wraw = 323,                            /* -Wraw */
  OPT_Wreal_q_constant = 324,                /* -Wreal-q-constant */
  OPT_Wrealloc_lhs = 325,                    /* -Wrealloc-lhs */
  OPT_Wrealloc_lhs_all = 326,                /* -Wrealloc-lhs-all */
  OPT_Wredundant_decls = 327,                /* -Wredundant-decls */
  OPT_Wredundant_modifiers = 328,            /* -Wredundant-modifiers */
  OPT_Wreorder = 329,                        /* -Wreorder */
  OPT_Wreturn_local_addr = 330,              /* -Wreturn-local-addr */
  OPT_Wreturn_type = 331,                    /* -Wreturn-type */
  OPT_Wselector = 332,                       /* -Wselector */
  OPT_Wsequence_point = 333,                 /* -Wsequence-point */
  OPT_Wserial = 334,                         /* -Wserial */
  OPT_Wshadow = 335,                         /* -Wshadow */
  OPT_Wsign_compare = 336,                   /* -Wsign-compare */
  OPT_Wsign_conversion = 337,                /* -Wsign-conversion */
  OPT_Wsign_promo = 338,                     /* -Wsign-promo */
  OPT_Wsizeof_pointer_memaccess = 339,       /* -Wsizeof-pointer-memaccess */
  OPT_Wspecial_param_hiding = 340,           /* -Wspecial-param-hiding */
  OPT_Wstack_protector = 341,                /* -Wstack-protector */
  OPT_Wstack_usage_ = 342,                   /* -Wstack-usage= */
  OPT_Wstatic_access = 343,                  /* -Wstatic-access */
  OPT_Wstatic_receiver = 344,                /* -Wstatic-receiver */
  OPT_Wstrict_aliasing = 345,                /* -Wstrict-aliasing */
  OPT_Wstrict_aliasing_ = 346,               /* -Wstrict-aliasing= */
  OPT_Wstrict_null_sentinel = 347,           /* -Wstrict-null-sentinel */
  OPT_Wstrict_overflow = 348,                /* -Wstrict-overflow */
  OPT_Wstrict_overflow_ = 349,               /* -Wstrict-overflow= */
  OPT_Wstrict_prototypes = 350,              /* -Wstrict-prototypes */
  OPT_Wstrict_selector_match = 351,          /* -Wstrict-selector-match */
  OPT_Wsuggest_attribute_const = 352,        /* -Wsuggest-attribute=const */
  OPT_Wsuggest_attribute_format = 353,       /* -Wsuggest-attribute=format */
  OPT_Wsuggest_attribute_noreturn = 354,     /* -Wsuggest-attribute=noreturn */
  OPT_Wsuggest_attribute_pure = 355,         /* -Wsuggest-attribute=pure */
  OPT_Wsuppress = 356,                       /* -Wsuppress */
  OPT_Wsurprising = 357,                     /* -Wsurprising */
  OPT_Wswitch = 358,                         /* -Wswitch */
  OPT_Wswitch_default = 359,                 /* -Wswitch-default */
  OPT_Wswitch_enum = 360,                    /* -Wswitch-enum */
  OPT_Wsync_nand = 361,                      /* -Wsync-nand */
  OPT_Wsynth = 362,                          /* -Wsynth */
  OPT_Wsynthetic_access = 363,               /* -Wsynthetic-access */
  OPT_Wsystem_headers = 364,                 /* -Wsystem-headers */
  OPT_Wtabs = 365,                           /* -Wtabs */
  OPT_Wtarget_lifetime = 366,                /* -Wtarget-lifetime */
  OPT_Wtasks = 367,                          /* -Wtasks */
  OPT_Wtraditional = 368,                    /* -Wtraditional */
  OPT_Wtraditional_conversion = 369,         /* -Wtraditional-conversion */
  OPT_Wtrampolines = 370,                    /* -Wtrampolines */
  OPT_Wtrigraphs = 371,                      /* -Wtrigraphs */
  OPT_Wtype_hiding = 372,                    /* -Wtype-hiding */
  OPT_Wtype_limits = 373,                    /* -Wtype-limits */
  OPT_Wuncheck = 374,                        /* -Wuncheck */
  OPT_Wundeclared_selector = 375,            /* -Wundeclared-selector */
  OPT_Wundef = 376,                          /* -Wundef */
  OPT_Wunderflow = 377,                      /* -Wunderflow */
  OPT_Wuninitialized = 378,                  /* -Wuninitialized */
  OPT_Wunknown_pragmas = 379,                /* -Wunknown-pragmas */
  OPT_Wunnecessary_else = 380,               /* -Wunnecessary-else */
  OPT_Wunqualified_field = 381,              /* -Wunqualified-field */
  /* OPT_Wunreachable_code = 382, */         /* -Wunreachable-code */
  OPT_Wunsafe_loop_optimizations = 383,      /* -Wunsafe-loop-optimizations */
  OPT_Wunsuffixed_float_constants = 384,     /* -Wunsuffixed-float-constants */
  OPT_Wunused = 385,                         /* -Wunused */
  OPT_Wunused_argument = 386,                /* -Wunused-argument */
  OPT_Wunused_but_set_parameter = 387,       /* -Wunused-but-set-parameter */
  OPT_Wunused_but_set_variable = 388,        /* -Wunused-but-set-variable */
  OPT_Wunused_dummy_argument = 389,          /* -Wunused-dummy-argument */
  OPT_Wunused_function = 390,                /* -Wunused-function */
  OPT_Wunused_import = 391,                  /* -Wunused-import */
  OPT_Wunused_label = 392,                   /* -Wunused-label */
  OPT_Wunused_local = 393,                   /* -Wunused-local */
  OPT_Wunused_local_typedefs = 394,          /* -Wunused-local-typedefs */
  OPT_Wunused_macros = 395,                  /* -Wunused-macros */
  OPT_Wunused_parameter = 396,               /* -Wunused-parameter */
  OPT_Wunused_private = 397,                 /* -Wunused-private */
  OPT_Wunused_result = 398,                  /* -Wunused-result */
  OPT_Wunused_thrown = 399,                  /* -Wunused-thrown */
  OPT_Wunused_value = 400,                   /* -Wunused-value */
  OPT_Wunused_variable = 401,                /* -Wunused-variable */
  OPT_Wuseless_cast = 402,                   /* -Wuseless-cast */
  OPT_Wuseless_type_check = 403,             /* -Wuseless-type-check */
  OPT_Wvarargs = 404,                        /* -Wvarargs */
  OPT_Wvarargs_cast = 405,                   /* -Wvarargs-cast */
  OPT_Wvariadic_macros = 406,                /* -Wvariadic-macros */
  OPT_Wvector_operation_performance = 407,   /* -Wvector-operation-performance */
  OPT_Wvirtual_move_assign = 408,            /* -Wvirtual-move-assign */
  OPT_Wvla = 409,                            /* -Wvla */
  OPT_Wvolatile_register_var = 410,          /* -Wvolatile-register-var */
  OPT_Wwarning_token = 411,                  /* -Wwarning-token */
  OPT_Wwrite_strings = 412,                  /* -Wwrite-strings */
  OPT_Wzero_as_null_pointer_constant = 413,  /* -Wzero-as-null-pointer-constant */
  OPT_Wzerotrip = 414,                       /* -Wzerotrip */
  OPT_X = 415,                               /* -X */
  OPT_Xassembler = 416,                      /* -Xassembler */
  OPT_Xlinker = 417,                         /* -Xlinker */
  OPT_Xpreprocessor = 418,                   /* -Xpreprocessor */
  OPT_Z = 419,                               /* -Z */
  OPT_Zall_load = 420,                       /* -Zall_load */
  OPT_Zallowable_client = 421,               /* -Zallowable_client */
  OPT_Zarch_errors_fatal = 422,              /* -Zarch_errors_fatal */
  OPT_Zbind_at_load = 423,                   /* -Zbind_at_load */
  OPT_Zbundle = 424,                         /* -Zbundle */
  OPT_Zbundle_loader = 425,                  /* -Zbundle_loader */
  OPT_Zdead_strip = 426,                     /* -Zdead_strip */
  OPT_Zdylib_file = 427,                     /* -Zdylib_file */
  OPT_Zdynamic = 428,                        /* -Zdynamic */
  OPT_Zdynamiclib = 429,                     /* -Zdynamiclib */
  OPT_Zexported_symbols_list = 430,          /* -Zexported_symbols_list */
  OPT_Zflat_namespace = 431,                 /* -Zflat_namespace */
  OPT_Zfn_seg_addr_table_filename = 432,     /* -Zfn_seg_addr_table_filename */
  OPT_Zforce_cpusubtype_ALL = 433,           /* -Zforce_cpusubtype_ALL */
  OPT_Zforce_flat_namespace = 434,           /* -Zforce_flat_namespace */
  OPT_Zimage_base = 435,                     /* -Zimage_base */
  OPT_Zinit = 436,                           /* -Zinit */
  OPT_Zinstall_name = 437,                   /* -Zinstall_name */
  OPT_Zmulti_module = 438,                   /* -Zmulti_module */
  OPT_Zmultiply_defined = 439,               /* -Zmultiply_defined */
  OPT_Zmultiplydefinedunused = 440,          /* -Zmultiplydefinedunused */
  OPT_Zno_dead_strip_inits_and_terms = 441,  /* -Zno_dead_strip_inits_and_terms */
  OPT_Zseg_addr_table = 442,                 /* -Zseg_addr_table */
  OPT_Zsegaddr = 443,                        /* -Zsegaddr */
  OPT_Zsegs_read_only_addr = 444,            /* -Zsegs_read_only_addr */
  OPT_Zsegs_read_write_addr = 445,           /* -Zsegs_read_write_addr */
  OPT_Zsingle_module = 446,                  /* -Zsingle_module */
  OPT_Zumbrella = 447,                       /* -Zumbrella */
  OPT_Zunexported_symbols_list = 448,        /* -Zunexported_symbols_list */
  OPT_Zweak_reference_mismatches = 449,      /* -Zweak_reference_mismatches */
  /* OPT_all_load = 450, */                  /* -all_load */
  /* OPT_allowable_client = 451, */          /* -allowable_client */
  OPT_ansi = 452,                            /* -ansi */
  OPT_arch = 453,                            /* -arch */
  /* OPT_arch_errors_fatal = 454, */         /* -arch_errors_fatal */
  OPT_aux_info = 455,                        /* -aux-info */
  /* OPT_aux_info_ = 456, */                 /* -aux-info= */
  OPT_auxbase = 457,                         /* -auxbase */
  OPT_auxbase_strip = 458,                   /* -auxbase-strip */
  /* OPT_bind_at_load = 459, */              /* -bind_at_load */
  /* OPT_bootclasspath = 460, */             /* -bootclasspath */
  /* OPT_bundle = 461, */                    /* -bundle */
  /* OPT_bundle_loader = 462, */             /* -bundle_loader */
  OPT_c = 463,                               /* -c */
  /* OPT_classpath = 464, */                 /* -classpath */
  OPT_client_name = 465,                     /* -client_name */
  OPT_compatibility_version = 466,           /* -compatibility_version */
  OPT_coverage = 467,                        /* -coverage */
  OPT_cpp = 468,                             /* -cpp */
  OPT_cpp_ = 469,                            /* -cpp= */
  OPT_current_version = 470,                 /* -current_version */
  OPT_d = 471,                               /* -d */
  /* OPT_dead_strip = 472, */                /* -dead_strip */
  /* OPT_dependency_file = 473, */           /* -dependency-file */
  OPT_dumpbase = 474,                        /* -dumpbase */
  OPT_dumpdir = 475,                         /* -dumpdir */
  OPT_dumpmachine = 476,                     /* -dumpmachine */
  OPT_dumpspecs = 477,                       /* -dumpspecs */
  OPT_dumpversion = 478,                     /* -dumpversion */
  /* OPT_dylib_file = 479, */                /* -dylib_file */
  OPT_dylinker = 480,                        /* -dylinker */
  OPT_dylinker_install_name = 481,           /* -dylinker_install_name */
  /* OPT_dynamic = 482, */                   /* -dynamic */
  /* OPT_dynamiclib = 483, */                /* -dynamiclib */
  OPT_e = 484,                               /* -e */
  /* OPT_encoding = 485, */                  /* -encoding */
  OPT_export_dynamic = 486,                  /* -export-dynamic */
  /* OPT_exported_symbols_list = 487, */     /* -exported_symbols_list */
  OPT_extdirs = 488,                         /* -extdirs */
  /* OPT_fCLASSPATH_ = 489, */               /* -fCLASSPATH= */
  OPT_fPIC = 490,                            /* -fPIC */
  OPT_fPIE = 491,                            /* -fPIE */
  OPT_fRTS_ = 492,                           /* -fRTS= */
  OPT_fabi_version_ = 493,                   /* -fabi-version= */
  OPT_faccess_control = 494,                 /* -faccess-control */
  OPT_fada_spec_parent_ = 495,               /* -fada-spec-parent= */
  OPT_faggressive_function_elimination = 496,/* -faggressive-function-elimination */
  OPT_faggressive_loop_optimizations = 497,  /* -faggressive-loop-optimizations */
  OPT_falign_commons = 498,                  /* -falign-commons */
  OPT_falign_functions = 499,                /* -falign-functions */
  OPT_falign_functions_ = 500,               /* -falign-functions= */
  OPT_falign_jumps = 501,                    /* -falign-jumps */
  OPT_falign_jumps_ = 502,                   /* -falign-jumps= */
  OPT_falign_labels = 503,                   /* -falign-labels */
  OPT_falign_labels_ = 504,                  /* -falign-labels= */
  OPT_falign_loops = 505,                    /* -falign-loops */
  OPT_falign_loops_ = 506,                   /* -falign-loops= */
  OPT_fall_intrinsics = 507,                 /* -fall-intrinsics */
  /* OPT_fall_virtual = 508, */              /* -fall-virtual */
  OPT_fallow_leading_underscore = 509,       /* -fallow-leading-underscore */
  OPT_fallow_parameterless_variadic_functions = 510,/* -fallow-parameterless-variadic-functions */
  /* OPT_falt_external_templates = 511, */   /* -falt-external-templates */
  OPT_fapple_kext = 512,                     /* -fapple-kext */
  /* OPT_fargument_alias = 513, */           /* -fargument-alias */
  /* OPT_fargument_noalias = 514, */         /* -fargument-noalias */
  /* OPT_fargument_noalias_anything = 515, *//* -fargument-noalias-anything */
  /* OPT_fargument_noalias_global = 516, */  /* -fargument-noalias-global */
  OPT_fasm = 517,                            /* -fasm */
  OPT_fassert = 518,                         /* -fassert */
  OPT_fassociative_math = 519,               /* -fassociative-math */
  OPT_fassume_compiled = 520,                /* -fassume-compiled */
  OPT_fassume_compiled_ = 521,               /* -fassume-compiled= */
  OPT_fasynchronous_unwind_tables = 522,     /* -fasynchronous-unwind-tables */
  OPT_fauto_inc_dec = 523,                   /* -fauto-inc-dec */
  OPT_fautomatic = 524,                      /* -fautomatic */
  OPT_faux_classpath = 525,                  /* -faux-classpath */
  OPT_fbackslash = 526,                      /* -fbackslash */
  OPT_fbacktrace = 527,                      /* -fbacktrace */
  OPT_fblas_matmul_limit_ = 528,             /* -fblas-matmul-limit= */
  OPT_fbootclasspath_ = 529,                 /* -fbootclasspath= */
  OPT_fbootstrap_classes = 530,              /* -fbootstrap-classes */
  OPT_fbounds_check = 531,                   /* -fbounds-check */
  OPT_fbranch_count_reg = 532,               /* -fbranch-count-reg */
  OPT_fbranch_probabilities = 533,           /* -fbranch-probabilities */
  OPT_fbranch_target_load_optimize = 534,    /* -fbranch-target-load-optimize */
  OPT_fbranch_target_load_optimize2 = 535,   /* -fbranch-target-load-optimize2 */
  OPT_fbtr_bb_exclusive = 536,               /* -fbtr-bb-exclusive */
  OPT_fbuilding_libgcc = 537,                /* -fbuilding-libgcc */
  OPT_fbuiltin = 538,                        /* -fbuiltin */
  OPT_fbuiltin_ = 539,                       /* -fbuiltin- */
  OPT_fcall_saved_ = 540,                    /* -fcall-saved- */
  OPT_fcall_used_ = 541,                     /* -fcall-used- */
  OPT_fcaller_saves = 542,                   /* -fcaller-saves */
  OPT_fcanonical_system_headers = 543,       /* -fcanonical-system-headers */
  OPT_fcheck_array_temporaries = 544,        /* -fcheck-array-temporaries */
  OPT_fcheck_data_deps = 545,                /* -fcheck-data-deps */
  OPT_fcheck_new = 546,                      /* -fcheck-new */
  OPT_fcheck_references = 547,               /* -fcheck-references */
  OPT_fcheck_ = 548,                         /* -fcheck= */
  OPT_fcilkplus = 549,                       /* -fcilkplus */
  OPT_fclasspath_ = 550,                     /* -fclasspath= */
  OPT_fcoarray_ = 551,                       /* -fcoarray= */
  OPT_fcombine_stack_adjustments = 552,      /* -fcombine-stack-adjustments */
  OPT_fcommon = 553,                         /* -fcommon */
  OPT_fcompare_debug = 554,                  /* -fcompare-debug */
  OPT_fcompare_debug_second = 555,           /* -fcompare-debug-second */
  OPT_fcompare_debug_ = 556,                 /* -fcompare-debug= */
  OPT_fcompare_elim = 557,                   /* -fcompare-elim */
  OPT_fcompile_resource_ = 558,              /* -fcompile-resource= */
  OPT_fcond_mismatch = 559,                  /* -fcond-mismatch */
  OPT_fconserve_space = 560,                 /* -fconserve-space */
  OPT_fconserve_stack = 561,                 /* -fconserve-stack */
  OPT_fconstant_string_class_ = 562,         /* -fconstant-string-class= */
  OPT_fconstexpr_depth_ = 563,               /* -fconstexpr-depth= */
  OPT_fconvert_big_endian = 564,             /* -fconvert=big-endian */
  OPT_fconvert_little_endian = 565,          /* -fconvert=little-endian */
  OPT_fconvert_native = 566,                 /* -fconvert=native */
  OPT_fconvert_swap = 567,                   /* -fconvert=swap */
  OPT_fcprop_registers = 568,                /* -fcprop-registers */
  OPT_fcray_pointer = 569,                   /* -fcray-pointer */
  OPT_fcrossjumping = 570,                   /* -fcrossjumping */
  OPT_fcse_follow_jumps = 571,               /* -fcse-follow-jumps */
  /* OPT_fcse_skip_blocks = 572, */          /* -fcse-skip-blocks */
  OPT_fcx_fortran_rules = 573,               /* -fcx-fortran-rules */
  OPT_fcx_limited_range = 574,               /* -fcx-limited-range */
  OPT_fd_lines_as_code = 575,                /* -fd-lines-as-code */
  OPT_fd_lines_as_comments = 576,            /* -fd-lines-as-comments */
  OPT_fdata_sections = 577,                  /* -fdata-sections */
  OPT_fdbg_cnt_list = 578,                   /* -fdbg-cnt-list */
  OPT_fdbg_cnt_ = 579,                       /* -fdbg-cnt= */
  OPT_fdce = 580,                            /* -fdce */
  OPT_fdebug_cpp = 581,                      /* -fdebug-cpp */
  OPT_fdebug_prefix_map_ = 582,              /* -fdebug-prefix-map= */
  OPT_fdebug_types_section = 583,            /* -fdebug-types-section */
  OPT_fdeclone_ctor_dtor = 584,              /* -fdeclone-ctor-dtor */
  OPT_fdeduce_init_list = 585,               /* -fdeduce-init-list */
  OPT_fdefault_double_8 = 586,               /* -fdefault-double-8 */
  /* OPT_fdefault_inline = 587, */           /* -fdefault-inline */
  OPT_fdefault_integer_8 = 588,              /* -fdefault-integer-8 */
  OPT_fdefault_real_8 = 589,                 /* -fdefault-real-8 */
  OPT_fdefer_pop = 590,                      /* -fdefer-pop */
  OPT_fdelayed_branch = 591,                 /* -fdelayed-branch */
  OPT_fdelete_dead_exceptions = 592,         /* -fdelete-dead-exceptions */
  OPT_fdelete_null_pointer_checks = 593,     /* -fdelete-null-pointer-checks */
  OPT_fdevirtualize = 594,                   /* -fdevirtualize */
  OPT_fdevirtualize_speculatively = 595,     /* -fdevirtualize-speculatively */
  /* OPT_fdiagnostics_color = 596, */        /* -fdiagnostics-color */
  OPT_fdiagnostics_color_ = 597,             /* -fdiagnostics-color= */
  OPT_fdiagnostics_show_caret = 598,         /* -fdiagnostics-show-caret */
  OPT_fdiagnostics_show_location_ = 599,     /* -fdiagnostics-show-location= */
  OPT_fdiagnostics_show_option = 600,        /* -fdiagnostics-show-option */
  OPT_fdirectives_only = 601,                /* -fdirectives-only */
  OPT_fdisable_ = 602,                       /* -fdisable- */
  OPT_fdisable_assertions = 603,             /* -fdisable-assertions */
  OPT_fdisable_assertions_ = 604,            /* -fdisable-assertions= */
  OPT_fdollar_ok = 605,                      /* -fdollar-ok */
  OPT_fdollars_in_identifiers = 606,         /* -fdollars-in-identifiers */
  OPT_fdse = 607,                            /* -fdse */
  OPT_fdump_ = 608,                          /* -fdump- */
  OPT_fdump_ada_spec = 609,                  /* -fdump-ada-spec */
  OPT_fdump_ada_spec_slim = 610,             /* -fdump-ada-spec-slim */
  /* OPT_fdump_core = 611, */                /* -fdump-core */
  OPT_fdump_final_insns = 612,               /* -fdump-final-insns */
  OPT_fdump_final_insns_ = 613,              /* -fdump-final-insns= */
  OPT_fdump_fortran_optimized = 614,         /* -fdump-fortran-optimized */
  OPT_fdump_fortran_original = 615,          /* -fdump-fortran-original */
  OPT_fdump_go_spec_ = 616,                  /* -fdump-go-spec= */
  OPT_fdump_noaddr = 617,                    /* -fdump-noaddr */
  OPT_fdump_parse_tree = 618,                /* -fdump-parse-tree */
  OPT_fdump_passes = 619,                    /* -fdump-passes */
  OPT_fdump_unnumbered = 620,                /* -fdump-unnumbered */
  OPT_fdump_unnumbered_links = 621,          /* -fdump-unnumbered-links */
  OPT_fdwarf2_cfi_asm = 622,                 /* -fdwarf2-cfi-asm */
  OPT_fearly_inlining = 623,                 /* -fearly-inlining */
  OPT_felide_constructors = 624,             /* -felide-constructors */
  OPT_feliminate_dwarf2_dups = 625,          /* -feliminate-dwarf2-dups */
  OPT_feliminate_unused_debug_symbols = 626, /* -feliminate-unused-debug-symbols */
  OPT_feliminate_unused_debug_types = 627,   /* -feliminate-unused-debug-types */
  OPT_femit_class_debug_always = 628,        /* -femit-class-debug-always */
  OPT_femit_class_file = 629,                /* -femit-class-file */
  OPT_femit_class_files = 630,               /* -femit-class-files */
  OPT_femit_struct_debug_baseonly = 631,     /* -femit-struct-debug-baseonly */
  OPT_femit_struct_debug_detailed_ = 632,    /* -femit-struct-debug-detailed= */
  OPT_femit_struct_debug_reduced = 633,      /* -femit-struct-debug-reduced */
  OPT_fenable_ = 634,                        /* -fenable- */
  OPT_fenable_assertions = 635,              /* -fenable-assertions */
  OPT_fenable_assertions_ = 636,             /* -fenable-assertions= */
  OPT_fencoding_ = 637,                      /* -fencoding= */
  OPT_fenforce_eh_specs = 638,               /* -fenforce-eh-specs */
  /* OPT_fenum_int_equiv = 639, */           /* -fenum-int-equiv */
  OPT_fexceptions = 640,                     /* -fexceptions */
  OPT_fexcess_precision_ = 641,              /* -fexcess-precision= */
  OPT_fexec_charset_ = 642,                  /* -fexec-charset= */
  OPT_fexpensive_optimizations = 643,        /* -fexpensive-optimizations */
  OPT_fext_numeric_literals = 644,           /* -fext-numeric-literals */
  OPT_fextdirs_ = 645,                       /* -fextdirs= */
  OPT_fextended_identifiers = 646,           /* -fextended-identifiers */
  OPT_fextern_tls_init = 647,                /* -fextern-tls-init */
  OPT_fexternal_blas = 648,                  /* -fexternal-blas */
  /* OPT_fexternal_templates = 649, */       /* -fexternal-templates */
  OPT_ff2c = 650,                            /* -ff2c */
  OPT_ffast_math = 651,                      /* -ffast-math */
  OPT_ffat_lto_objects = 652,                /* -ffat-lto-objects */
  OPT_ffilelist_file = 653,                  /* -ffilelist-file */
  OPT_ffinite_math_only = 654,               /* -ffinite-math-only */
  OPT_ffixed_ = 655,                         /* -ffixed- */
  OPT_ffixed_form = 656,                     /* -ffixed-form */
  OPT_ffixed_line_length_ = 657,             /* -ffixed-line-length- */
  OPT_ffixed_line_length_none = 658,         /* -ffixed-line-length-none */
  OPT_ffloat_store = 659,                    /* -ffloat-store */
  OPT_ffor_scope = 660,                      /* -ffor-scope */
  /* OPT_fforce_addr = 661, */               /* -fforce-addr */
  OPT_fforce_classes_archive_check = 662,    /* -fforce-classes-archive-check */
  OPT_fforward_propagate = 663,              /* -fforward-propagate */
  OPT_ffp_contract_ = 664,                   /* -ffp-contract= */
  OPT_ffpe_summary_ = 665,                   /* -ffpe-summary= */
  OPT_ffpe_trap_ = 666,                      /* -ffpe-trap= */
  OPT_ffree_form = 667,                      /* -ffree-form */
  OPT_ffree_line_length_ = 668,              /* -ffree-line-length- */
  OPT_ffree_line_length_none = 669,          /* -ffree-line-length-none */
  OPT_ffreestanding = 670,                   /* -ffreestanding */
  OPT_ffriend_injection = 671,               /* -ffriend-injection */
  OPT_ffrontend_optimize = 672,              /* -ffrontend-optimize */
  OPT_ffunction_cse = 673,                   /* -ffunction-cse */
  OPT_ffunction_sections = 674,              /* -ffunction-sections */
  OPT_fgcse = 675,                           /* -fgcse */
  OPT_fgcse_after_reload = 676,              /* -fgcse-after-reload */
  OPT_fgcse_las = 677,                       /* -fgcse-las */
  OPT_fgcse_lm = 678,                        /* -fgcse-lm */
  OPT_fgcse_sm = 679,                        /* -fgcse-sm */
  OPT_fgnu_keywords = 680,                   /* -fgnu-keywords */
  OPT_fgnu_runtime = 681,                    /* -fgnu-runtime */
  OPT_fgnu_tm = 682,                         /* -fgnu-tm */
  OPT_fgnu_unique = 683,                     /* -fgnu-unique */
  OPT_fgnu89_inline = 684,                   /* -fgnu89-inline */
  OPT_fgo_check_divide_overflow = 685,       /* -fgo-check-divide-overflow */
  OPT_fgo_check_divide_zero = 686,           /* -fgo-check-divide-zero */
  OPT_fgo_dump_ = 687,                       /* -fgo-dump- */
  OPT_fgo_optimize_ = 688,                   /* -fgo-optimize- */
  OPT_fgo_pkgpath_ = 689,                    /* -fgo-pkgpath= */
  OPT_fgo_prefix_ = 690,                     /* -fgo-prefix= */
  OPT_fgo_relative_import_path_ = 691,       /* -fgo-relative-import-path= */
  OPT_fgraphite = 692,                       /* -fgraphite */
  OPT_fgraphite_identity = 693,              /* -fgraphite-identity */
  OPT_fguess_branch_probability = 694,       /* -fguess-branch-probability */
  /* OPT_fguiding_decls = 695, */            /* -fguiding-decls */
  /* OPT_fhandle_exceptions = 696, */        /* -fhandle-exceptions */
  OPT_fhash_synchronization = 697,           /* -fhash-synchronization */
  /* OPT_fhelp = 698, */                     /* -fhelp */
  /* OPT_fhelp_ = 699, */                    /* -fhelp= */
  OPT_fhoist_adjacent_loads = 700,           /* -fhoist-adjacent-loads */
  /* OPT_fhonor_std = 701, */                /* -fhonor-std */
  OPT_fhosted = 702,                         /* -fhosted */
  /* OPT_fhuge_objects = 703, */             /* -fhuge-objects */
  OPT_fident = 704,                          /* -fident */
  OPT_fif_conversion = 705,                  /* -fif-conversion */
  OPT_fif_conversion2 = 706,                 /* -fif-conversion2 */
  OPT_filelist = 707,                        /* -filelist */
  OPT_fimplement_inlines = 708,              /* -fimplement-inlines */
  OPT_fimplicit_inline_templates = 709,      /* -fimplicit-inline-templates */
  OPT_fimplicit_none = 710,                  /* -fimplicit-none */
  OPT_fimplicit_templates = 711,             /* -fimplicit-templates */
  OPT_findirect_classes = 712,               /* -findirect-classes */
  OPT_findirect_dispatch = 713,              /* -findirect-dispatch */
  OPT_findirect_inlining = 714,              /* -findirect-inlining */
  OPT_findirect_virtual_calls = 715,         /* -findirect-virtual-calls */
  OPT_finhibit_size_directive = 716,         /* -finhibit-size-directive */
  OPT_finit_character_ = 717,                /* -finit-character= */
  OPT_finit_integer_ = 718,                  /* -finit-integer= */
  OPT_finit_local_zero = 719,                /* -finit-local-zero */
  OPT_finit_logical_ = 720,                  /* -finit-logical= */
  OPT_finit_real_ = 721,                     /* -finit-real= */
  OPT_finline = 722,                         /* -finline */
  OPT_finline_atomics = 723,                 /* -finline-atomics */
  OPT_finline_functions = 724,               /* -finline-functions */
  OPT_finline_functions_called_once = 725,   /* -finline-functions-called-once */
  /* OPT_finline_limit_ = 726, */            /* -finline-limit- */
  OPT_finline_limit_ = 727,                  /* -finline-limit= */
  OPT_finline_small_functions = 728,         /* -finline-small-functions */
  OPT_finput_charset_ = 729,                 /* -finput-charset= */
  OPT_finstrument_functions = 730,           /* -finstrument-functions */
  OPT_finstrument_functions_exclude_file_list_ = 731,/* -finstrument-functions-exclude-file-list= */
  OPT_finstrument_functions_exclude_function_list_ = 732,/* -finstrument-functions-exclude-function-list= */
  OPT_finteger_4_integer_8 = 733,            /* -finteger-4-integer-8 */
  OPT_fintrinsic_modules_path = 734,         /* -fintrinsic-modules-path */
  OPT_fintrinsic_modules_path_ = 735,        /* -fintrinsic-modules-path= */
  OPT_fipa_cp = 736,                         /* -fipa-cp */
  OPT_fipa_cp_clone = 737,                   /* -fipa-cp-clone */
  /* OPT_fipa_matrix_reorg = 738, */         /* -fipa-matrix-reorg */
  OPT_fipa_profile = 739,                    /* -fipa-profile */
  OPT_fipa_pta = 740,                        /* -fipa-pta */
  OPT_fipa_pure_const = 741,                 /* -fipa-pure-const */
  OPT_fipa_reference = 742,                  /* -fipa-reference */
  OPT_fipa_sra = 743,                        /* -fipa-sra */
  /* OPT_fipa_struct_reorg = 744, */         /* -fipa-struct-reorg */
  OPT_fira_algorithm_ = 745,                 /* -fira-algorithm= */
  OPT_fira_hoist_pressure = 746,             /* -fira-hoist-pressure */
  OPT_fira_loop_pressure = 747,              /* -fira-loop-pressure */
  OPT_fira_region_ = 748,                    /* -fira-region= */
  OPT_fira_share_save_slots = 749,           /* -fira-share-save-slots */
  OPT_fira_share_spill_slots = 750,          /* -fira-share-spill-slots */
  OPT_fira_verbose_ = 751,                   /* -fira-verbose= */
  OPT_fisolate_erroneous_paths_attribute = 752,/* -fisolate-erroneous-paths-attribute */
  OPT_fisolate_erroneous_paths_dereference = 753,/* -fisolate-erroneous-paths-dereference */
  OPT_fivopts = 754,                         /* -fivopts */
  OPT_fjni = 755,                            /* -fjni */
  OPT_fjump_tables = 756,                    /* -fjump-tables */
  OPT_fkeep_inline_dllexport = 757,          /* -fkeep-inline-dllexport */
  OPT_fkeep_inline_functions = 758,          /* -fkeep-inline-functions */
  OPT_fkeep_static_consts = 759,             /* -fkeep-static-consts */
  /* OPT_flabels_ok = 760, */                /* -flabels-ok */
  /* OPT_flat_namespace = 761, */            /* -flat_namespace */
  OPT_flax_vector_conversions = 762,         /* -flax-vector-conversions */
  OPT_fleading_underscore = 763,             /* -fleading-underscore */
  OPT_flive_range_shrinkage = 764,           /* -flive-range-shrinkage */
  OPT_floop_block = 765,                     /* -floop-block */
  /* OPT_floop_flatten = 766, */             /* -floop-flatten */
  OPT_floop_interchange = 767,               /* -floop-interchange */
  OPT_floop_nest_optimize = 768,             /* -floop-nest-optimize */
  /* OPT_floop_optimize = 769, */            /* -floop-optimize */
  OPT_floop_parallelize_all = 770,           /* -floop-parallelize-all */
  OPT_floop_strip_mine = 771,                /* -floop-strip-mine */
  OPT_flto = 772,                            /* -flto */
  OPT_flto_compression_level_ = 773,         /* -flto-compression-level= */
  OPT_flto_partition_1to1 = 774,             /* -flto-partition=1to1 */
  OPT_flto_partition_balanced = 775,         /* -flto-partition=balanced */
  OPT_flto_partition_max = 776,              /* -flto-partition=max */
  OPT_flto_partition_none = 777,             /* -flto-partition=none */
  OPT_flto_report = 778,                     /* -flto-report */
  OPT_flto_report_wpa = 779,                 /* -flto-report-wpa */
  OPT_flto_ = 780,                           /* -flto= */
  OPT_fltrans = 781,                         /* -fltrans */
  OPT_fltrans_output_list_ = 782,            /* -fltrans-output-list= */
  OPT_fmain_ = 783,                          /* -fmain= */
  OPT_fmath_errno = 784,                     /* -fmath-errno */
  OPT_fmax_array_constructor_ = 785,         /* -fmax-array-constructor= */
  OPT_fmax_errors_ = 786,                    /* -fmax-errors= */
  OPT_fmax_identifier_length_ = 787,         /* -fmax-identifier-length= */
  OPT_fmax_stack_var_size_ = 788,            /* -fmax-stack-var-size= */
  OPT_fmax_subrecord_length_ = 789,          /* -fmax-subrecord-length= */
  OPT_fmem_report = 790,                     /* -fmem-report */
  OPT_fmem_report_wpa = 791,                 /* -fmem-report-wpa */
  OPT_fmerge_all_constants = 792,            /* -fmerge-all-constants */
  OPT_fmerge_constants = 793,                /* -fmerge-constants */
  OPT_fmerge_debug_strings = 794,            /* -fmerge-debug-strings */
  OPT_fmessage_length_ = 795,                /* -fmessage-length= */
  OPT_fmodule_private = 796,                 /* -fmodule-private */
  OPT_fmodulo_sched = 797,                   /* -fmodulo-sched */
  OPT_fmodulo_sched_allow_regmoves = 798,    /* -fmodulo-sched-allow-regmoves */
  OPT_fmove_loop_invariants = 799,           /* -fmove-loop-invariants */
  OPT_fms_extensions = 800,                  /* -fms-extensions */
  /* OPT_fmudflap = 801, */                  /* -fmudflap */
  /* OPT_fmudflapir = 802, */                /* -fmudflapir */
  /* OPT_fmudflapth = 803, */                /* -fmudflapth */
  /* OPT_fname_mangling_version_ = 804, */   /* -fname-mangling-version- */
  /* OPT_fnew_abi = 805, */                  /* -fnew-abi */
  OPT_fnext_runtime = 806,                   /* -fnext-runtime */
  OPT_fnil_receivers = 807,                  /* -fnil-receivers */
  /* OPT_fno_vect_cost_model = 808, */       /* -fno-vect-cost-model */
  OPT_fnon_call_exceptions = 809,            /* -fnon-call-exceptions */
  OPT_fnonansi_builtins = 810,               /* -fnonansi-builtins */
  /* OPT_fnonnull_objects = 811, */          /* -fnonnull-objects */
  OPT_fnothrow_opt = 812,                    /* -fnothrow-opt */
  OPT_fobjc_abi_version_ = 813,              /* -fobjc-abi-version= */
  OPT_fobjc_call_cxx_cdtors = 814,           /* -fobjc-call-cxx-cdtors */
  OPT_fobjc_direct_dispatch = 815,           /* -fobjc-direct-dispatch */
  OPT_fobjc_exceptions = 816,                /* -fobjc-exceptions */
  OPT_fobjc_gc = 817,                        /* -fobjc-gc */
  OPT_fobjc_nilcheck = 818,                  /* -fobjc-nilcheck */
  OPT_fobjc_sjlj_exceptions = 819,           /* -fobjc-sjlj-exceptions */
  OPT_fobjc_std_objc1 = 820,                 /* -fobjc-std=objc1 */
  OPT_fomit_frame_pointer = 821,             /* -fomit-frame-pointer */
  OPT_fopenmp = 822,                         /* -fopenmp */
  OPT_fopenmp_simd = 823,                    /* -fopenmp-simd */
  OPT_foperator_names = 824,                 /* -foperator-names */
  OPT_fopt_info = 825,                       /* -fopt-info */
  OPT_fopt_info_ = 826,                      /* -fopt-info- */
  /* OPT_foptimize_register_move = 827, */   /* -foptimize-register-move */
  OPT_foptimize_sibling_calls = 828,         /* -foptimize-sibling-calls */
  OPT_foptimize_static_class_initialization = 829,/* -foptimize-static-class-initialization */
  OPT_foptimize_strlen = 830,                /* -foptimize-strlen */
  /* OPT_foptional_diags = 831, */           /* -foptional-diags */
  /* OPT_force_cpusubtype_ALL = 832, */      /* -force_cpusubtype_ALL */
  /* OPT_force_flat_namespace = 833, */      /* -force_flat_namespace */
  OPT_foutput_class_dir_ = 834,              /* -foutput-class-dir= */
  OPT_fpack_derived = 835,                   /* -fpack-derived */
  OPT_fpack_struct = 836,                    /* -fpack-struct */
  OPT_fpack_struct_ = 837,                   /* -fpack-struct= */
  OPT_fpartial_inlining = 838,               /* -fpartial-inlining */
  OPT_fpcc_struct_return = 839,              /* -fpcc-struct-return */
  OPT_fpch_deps = 840,                       /* -fpch-deps */
  OPT_fpch_preprocess = 841,                 /* -fpch-preprocess */
  OPT_fpeel_loops = 842,                     /* -fpeel-loops */
  OPT_fpeephole = 843,                       /* -fpeephole */
  OPT_fpeephole2 = 844,                      /* -fpeephole2 */
  OPT_fpermissive = 845,                     /* -fpermissive */
  OPT_fpic = 846,                            /* -fpic */
  OPT_fpie = 847,                            /* -fpie */
  OPT_fplan9_extensions = 848,               /* -fplan9-extensions */
  OPT_fplugin_arg_ = 849,                    /* -fplugin-arg- */
  OPT_fplugin_ = 850,                        /* -fplugin= */
  OPT_fpost_ipa_mem_report = 851,            /* -fpost-ipa-mem-report */
  OPT_fpre_ipa_mem_report = 852,             /* -fpre-ipa-mem-report */
  OPT_fpredictive_commoning = 853,           /* -fpredictive-commoning */
  OPT_fprefetch_loop_arrays = 854,           /* -fprefetch-loop-arrays */
  OPT_fpreprocessed = 855,                   /* -fpreprocessed */
  OPT_fpretty_templates = 856,               /* -fpretty-templates */
  OPT_fprofile = 857,                        /* -fprofile */
  OPT_fprofile_arcs = 858,                   /* -fprofile-arcs */
  OPT_fprofile_correction = 859,             /* -fprofile-correction */
  OPT_fprofile_dir_ = 860,                   /* -fprofile-dir= */
  OPT_fprofile_generate = 861,               /* -fprofile-generate */
  OPT_fprofile_generate_ = 862,              /* -fprofile-generate= */
  OPT_fprofile_reorder_functions = 863,      /* -fprofile-reorder-functions */
  OPT_fprofile_report = 864,                 /* -fprofile-report */
  OPT_fprofile_use = 865,                    /* -fprofile-use */
  OPT_fprofile_use_ = 866,                   /* -fprofile-use= */
  OPT_fprofile_values = 867,                 /* -fprofile-values */
  OPT_fprotect_parens = 868,                 /* -fprotect-parens */
  OPT_framework = 869,                       /* -framework */
  OPT_frandom_seed = 870,                    /* -frandom-seed */
  OPT_frandom_seed_ = 871,                   /* -frandom-seed= */
  OPT_frange_check = 872,                    /* -frange-check */
  OPT_freal_4_real_10 = 873,                 /* -freal-4-real-10 */
  OPT_freal_4_real_16 = 874,                 /* -freal-4-real-16 */
  OPT_freal_4_real_8 = 875,                  /* -freal-4-real-8 */
  OPT_freal_8_real_10 = 876,                 /* -freal-8-real-10 */
  OPT_freal_8_real_16 = 877,                 /* -freal-8-real-16 */
  OPT_freal_8_real_4 = 878,                  /* -freal-8-real-4 */
  OPT_frealloc_lhs = 879,                    /* -frealloc-lhs */
  OPT_freciprocal_math = 880,                /* -freciprocal-math */
  OPT_frecord_gcc_switches = 881,            /* -frecord-gcc-switches */
  OPT_frecord_marker_4 = 882,                /* -frecord-marker=4 */
  OPT_frecord_marker_8 = 883,                /* -frecord-marker=8 */
  OPT_frecursive = 884,                      /* -frecursive */
  OPT_freduced_reflection = 885,             /* -freduced-reflection */
  OPT_free = 886,                            /* -free */
  OPT_freg_struct_return = 887,              /* -freg-struct-return */
  /* OPT_fregmove = 888, */                  /* -fregmove */
  OPT_frename_registers = 889,               /* -frename-registers */
  OPT_freorder_blocks = 890,                 /* -freorder-blocks */
  OPT_freorder_blocks_and_partition = 891,   /* -freorder-blocks-and-partition */
  OPT_freorder_functions = 892,              /* -freorder-functions */
  OPT_frepack_arrays = 893,                  /* -frepack-arrays */
  OPT_freplace_objc_classes = 894,           /* -freplace-objc-classes */
  OPT_frepo = 895,                           /* -frepo */
  OPT_frequire_return_statement = 896,       /* -frequire-return-statement */
  OPT_frerun_cse_after_loop = 897,           /* -frerun-cse-after-loop */
  /* OPT_frerun_loop_opt = 898, */           /* -frerun-loop-opt */
  OPT_freschedule_modulo_scheduled_loops = 899,/* -freschedule-modulo-scheduled-loops */
  OPT_fresolution_ = 900,                    /* -fresolution= */
  OPT_frounding_math = 901,                  /* -frounding-math */
  OPT_frtti = 902,                           /* -frtti */
  OPT_fsanitize_ = 903,                      /* -fsanitize= */
  OPT_fsaw_java_file = 904,                  /* -fsaw-java-file */
  OPT_fsched_critical_path_heuristic = 905,  /* -fsched-critical-path-heuristic */
  OPT_fsched_dep_count_heuristic = 906,      /* -fsched-dep-count-heuristic */
  OPT_fsched_group_heuristic = 907,          /* -fsched-group-heuristic */
  OPT_fsched_interblock = 908,               /* -fsched-interblock */
  OPT_fsched_last_insn_heuristic = 909,      /* -fsched-last-insn-heuristic */
  OPT_fsched_pressure = 910,                 /* -fsched-pressure */
  OPT_fsched_rank_heuristic = 911,           /* -fsched-rank-heuristic */
  OPT_fsched_spec = 912,                     /* -fsched-spec */
  OPT_fsched_spec_insn_heuristic = 913,      /* -fsched-spec-insn-heuristic */
  OPT_fsched_spec_load = 914,                /* -fsched-spec-load */
  OPT_fsched_spec_load_dangerous = 915,      /* -fsched-spec-load-dangerous */
  OPT_fsched_stalled_insns = 916,            /* -fsched-stalled-insns */
  OPT_fsched_stalled_insns_dep = 917,        /* -fsched-stalled-insns-dep */
  OPT_fsched_stalled_insns_dep_ = 918,       /* -fsched-stalled-insns-dep= */
  OPT_fsched_stalled_insns_ = 919,           /* -fsched-stalled-insns= */
  OPT_fsched_verbose_ = 920,                 /* -fsched-verbose= */
  OPT_fsched2_use_superblocks = 921,         /* -fsched2-use-superblocks */
  /* OPT_fsched2_use_traces = 922, */        /* -fsched2-use-traces */
  OPT_fschedule_insns = 923,                 /* -fschedule-insns */
  OPT_fschedule_insns2 = 924,                /* -fschedule-insns2 */
  OPT_fsecond_underscore = 925,              /* -fsecond-underscore */
  OPT_fsection_anchors = 926,                /* -fsection-anchors */
  /* OPT_fsee = 927, */                      /* -fsee */
  OPT_fsel_sched_pipelining = 928,           /* -fsel-sched-pipelining */
  OPT_fsel_sched_pipelining_outer_loops = 929,/* -fsel-sched-pipelining-outer-loops */
  OPT_fsel_sched_reschedule_pipelined = 930, /* -fsel-sched-reschedule-pipelined */
  OPT_fselective_scheduling = 931,           /* -fselective-scheduling */
  OPT_fselective_scheduling2 = 932,          /* -fselective-scheduling2 */
  OPT_fshort_double = 933,                   /* -fshort-double */
  OPT_fshort_enums = 934,                    /* -fshort-enums */
  OPT_fshort_wchar = 935,                    /* -fshort-wchar */
  OPT_fshow_column = 936,                    /* -fshow-column */
  OPT_fshrink_wrap = 937,                    /* -fshrink-wrap */
  OPT_fsign_zero = 938,                      /* -fsign-zero */
  OPT_fsignaling_nans = 939,                 /* -fsignaling-nans */
  OPT_fsigned_bitfields = 940,               /* -fsigned-bitfields */
  OPT_fsigned_char = 941,                    /* -fsigned-char */
  OPT_fsigned_zeros = 942,                   /* -fsigned-zeros */
  OPT_fsimd_cost_model_ = 943,               /* -fsimd-cost-model= */
  OPT_fsingle_precision_constant = 944,      /* -fsingle-precision-constant */
  OPT_fsource_filename_ = 945,               /* -fsource-filename= */
  OPT_fsource_ = 946,                        /* -fsource= */
  OPT_fsplit_ivs_in_unroller = 947,          /* -fsplit-ivs-in-unroller */
  OPT_fsplit_stack = 948,                    /* -fsplit-stack */
  OPT_fsplit_wide_types = 949,               /* -fsplit-wide-types */
  /* OPT_fsquangle = 950, */                 /* -fsquangle */
  OPT_fstack_arrays = 951,                   /* -fstack-arrays */
  /* OPT_fstack_check = 952, */              /* -fstack-check */
  OPT_fstack_check_ = 953,                   /* -fstack-check= */
  OPT_fstack_limit = 954,                    /* -fstack-limit */
  OPT_fstack_limit_register_ = 955,          /* -fstack-limit-register= */
  OPT_fstack_limit_symbol_ = 956,            /* -fstack-limit-symbol= */
  OPT_fstack_protector = 957,                /* -fstack-protector */
  OPT_fstack_protector_all = 958,            /* -fstack-protector-all */
  OPT_fstack_protector_strong = 959,         /* -fstack-protector-strong */
  OPT_fstack_reuse_ = 960,                   /* -fstack-reuse= */
  OPT_fstack_usage = 961,                    /* -fstack-usage */
  OPT_fstats = 962,                          /* -fstats */
  OPT_fstore_check = 963,                    /* -fstore-check */
  /* OPT_fstrength_reduce = 964, */          /* -fstrength-reduce */
  OPT_fstrict_aliasing = 965,                /* -fstrict-aliasing */
  OPT_fstrict_enums = 966,                   /* -fstrict-enums */
  OPT_fstrict_overflow = 967,                /* -fstrict-overflow */
  /* OPT_fstrict_prototype = 968, */         /* -fstrict-prototype */
  OPT_fstrict_volatile_bitfields = 969,      /* -fstrict-volatile-bitfields */
  OPT_fsync_libcalls = 970,                  /* -fsync-libcalls */
  OPT_fsyntax_only = 971,                    /* -fsyntax-only */
  OPT_ftabstop_ = 972,                       /* -ftabstop= */
  /* OPT_ftarget_help = 973, */              /* -ftarget-help */
  OPT_ftarget_ = 974,                        /* -ftarget= */
  OPT_ftemplate_backtrace_limit_ = 975,      /* -ftemplate-backtrace-limit= */
  /* OPT_ftemplate_depth_ = 976, */          /* -ftemplate-depth- */
  OPT_ftemplate_depth_ = 977,                /* -ftemplate-depth= */
  OPT_fterminated_vtables = 978,             /* -fterminated-vtables */
  OPT_ftest_coverage = 979,                  /* -ftest-coverage */
  /* OPT_fthis_is_variable = 980, */         /* -fthis-is-variable */
  OPT_fthread_jumps = 981,                   /* -fthread-jumps */
  OPT_fthreadsafe_statics = 982,             /* -fthreadsafe-statics */
  OPT_ftime_report = 983,                    /* -ftime-report */
  OPT_ftls_model_ = 984,                     /* -ftls-model= */
  OPT_ftoplevel_reorder = 985,               /* -ftoplevel-reorder */
  OPT_ftracer = 986,                         /* -ftracer */
  OPT_ftrack_macro_expansion = 987,          /* -ftrack-macro-expansion */
  OPT_ftrack_macro_expansion_ = 988,         /* -ftrack-macro-expansion= */
  OPT_ftrapping_math = 989,                  /* -ftrapping-math */
  OPT_ftrapv = 990,                          /* -ftrapv */
  OPT_ftree_bit_ccp = 991,                   /* -ftree-bit-ccp */
  OPT_ftree_builtin_call_dce = 992,          /* -ftree-builtin-call-dce */
  OPT_ftree_ccp = 993,                       /* -ftree-ccp */
  OPT_ftree_ch = 994,                        /* -ftree-ch */
  OPT_ftree_coalesce_inlined_vars = 995,     /* -ftree-coalesce-inlined-vars */
  OPT_ftree_coalesce_vars = 996,             /* -ftree-coalesce-vars */
  OPT_ftree_copy_prop = 997,                 /* -ftree-copy-prop */
  OPT_ftree_copyrename = 998,                /* -ftree-copyrename */
  OPT_ftree_cselim = 999,                    /* -ftree-cselim */
  OPT_ftree_dce = 1000,                      /* -ftree-dce */
  OPT_ftree_dominator_opts = 1001,           /* -ftree-dominator-opts */
  OPT_ftree_dse = 1002,                      /* -ftree-dse */
  OPT_ftree_forwprop = 1003,                 /* -ftree-forwprop */
  OPT_ftree_fre = 1004,                      /* -ftree-fre */
  OPT_ftree_loop_distribute_patterns = 1005, /* -ftree-loop-distribute-patterns */
  OPT_ftree_loop_distribution = 1006,        /* -ftree-loop-distribution */
  OPT_ftree_loop_if_convert = 1007,          /* -ftree-loop-if-convert */
  OPT_ftree_loop_if_convert_stores = 1008,   /* -ftree-loop-if-convert-stores */
  OPT_ftree_loop_im = 1009,                  /* -ftree-loop-im */
  OPT_ftree_loop_ivcanon = 1010,             /* -ftree-loop-ivcanon */
  /* OPT_ftree_loop_linear = 1011, */        /* -ftree-loop-linear */
  OPT_ftree_loop_optimize = 1012,            /* -ftree-loop-optimize */
  OPT_ftree_loop_vectorize = 1013,           /* -ftree-loop-vectorize */
  OPT_ftree_lrs = 1014,                      /* -ftree-lrs */
  OPT_ftree_parallelize_loops_ = 1015,       /* -ftree-parallelize-loops= */
  OPT_ftree_partial_pre = 1016,              /* -ftree-partial-pre */
  OPT_ftree_phiprop = 1017,                  /* -ftree-phiprop */
  OPT_ftree_pre = 1018,                      /* -ftree-pre */
  OPT_ftree_pta = 1019,                      /* -ftree-pta */
  OPT_ftree_reassoc = 1020,                  /* -ftree-reassoc */
  /* OPT_ftree_salias = 1021, */             /* -ftree-salias */
  OPT_ftree_scev_cprop = 1022,               /* -ftree-scev-cprop */
  OPT_ftree_sink = 1023,                     /* -ftree-sink */
  OPT_ftree_slp_vectorize = 1024,            /* -ftree-slp-vectorize */
  OPT_ftree_slsr = 1025,                     /* -ftree-slsr */
  OPT_ftree_sra = 1026,                      /* -ftree-sra */
  /* OPT_ftree_store_ccp = 1027, */          /* -ftree-store-ccp */
  /* OPT_ftree_store_copy_prop = 1028, */    /* -ftree-store-copy-prop */
  OPT_ftree_switch_conversion = 1029,        /* -ftree-switch-conversion */
  OPT_ftree_tail_merge = 1030,               /* -ftree-tail-merge */
  OPT_ftree_ter = 1031,                      /* -ftree-ter */
  /* OPT_ftree_vect_loop_version = 1032, */  /* -ftree-vect-loop-version */
  OPT_ftree_vectorize = 1033,                /* -ftree-vectorize */
  /* OPT_ftree_vectorizer_verbose_ = 1034, *//* -ftree-vectorizer-verbose= */
  OPT_ftree_vrp = 1035,                      /* -ftree-vrp */
  OPT_funderscoring = 1036,                  /* -funderscoring */
  OPT_funit_at_a_time = 1037,                /* -funit-at-a-time */
  OPT_funroll_all_loops = 1038,              /* -funroll-all-loops */
  OPT_funroll_loops = 1039,                  /* -funroll-loops */
  OPT_funsafe_loop_optimizations = 1040,     /* -funsafe-loop-optimizations */
  OPT_funsafe_math_optimizations = 1041,     /* -funsafe-math-optimizations */
  OPT_funsigned_bitfields = 1042,            /* -funsigned-bitfields */
  OPT_funsigned_char = 1043,                 /* -funsigned-char */
  OPT_funswitch_loops = 1044,                /* -funswitch-loops */
  OPT_funwind_tables = 1045,                 /* -funwind-tables */
  OPT_fuse_atomic_builtins = 1046,           /* -fuse-atomic-builtins */
  OPT_fuse_boehm_gc = 1047,                  /* -fuse-boehm-gc */
  OPT_fuse_cxa_atexit = 1048,                /* -fuse-cxa-atexit */
  OPT_fuse_cxa_get_exception_ptr = 1049,     /* -fuse-cxa-get-exception-ptr */
  OPT_fuse_divide_subroutine = 1050,         /* -fuse-divide-subroutine */
  OPT_fuse_ld_bfd = 1051,                    /* -fuse-ld=bfd */
  OPT_fuse_ld_gold = 1052,                   /* -fuse-ld=gold */
  OPT_fuse_linker_plugin = 1053,             /* -fuse-linker-plugin */
  OPT_fvar_tracking = 1054,                  /* -fvar-tracking */
  OPT_fvar_tracking_assignments = 1055,      /* -fvar-tracking-assignments */
  OPT_fvar_tracking_assignments_toggle = 1056,/* -fvar-tracking-assignments-toggle */
  OPT_fvar_tracking_uninit = 1057,           /* -fvar-tracking-uninit */
  OPT_fvariable_expansion_in_unroller = 1058,/* -fvariable-expansion-in-unroller */
  /* OPT_fvect_cost_model = 1059, */         /* -fvect-cost-model */
  OPT_fvect_cost_model_ = 1060,              /* -fvect-cost-model= */
  OPT_fverbose_asm = 1061,                   /* -fverbose-asm */
  /* OPT_fversion = 1062, */                 /* -fversion */
  OPT_fvisibility_inlines_hidden = 1063,     /* -fvisibility-inlines-hidden */
  OPT_fvisibility_ms_compat = 1064,          /* -fvisibility-ms-compat */
  OPT_fvisibility_ = 1065,                   /* -fvisibility= */
  OPT_fvpt = 1066,                           /* -fvpt */
  /* OPT_fvtable_gc = 1067, */               /* -fvtable-gc */
  /* OPT_fvtable_thunks = 1068, */           /* -fvtable-thunks */
  OPT_fvtable_verify_ = 1069,                /* -fvtable-verify= */
  OPT_fvtv_counts = 1070,                    /* -fvtv-counts */
  OPT_fvtv_debug = 1071,                     /* -fvtv-debug */
  OPT_fweak = 1072,                          /* -fweak */
  OPT_fweb = 1073,                           /* -fweb */
  /* OPT_fwhole_file = 1074, */              /* -fwhole-file */
  OPT_fwhole_program = 1075,                 /* -fwhole-program */
  OPT_fwide_exec_charset_ = 1076,            /* -fwide-exec-charset= */
  OPT_fworking_directory = 1077,             /* -fworking-directory */
  OPT_fwpa = 1078,                           /* -fwpa */
  OPT_fwpa_ = 1079,                          /* -fwpa= */
  OPT_fwrapv = 1080,                         /* -fwrapv */
  /* OPT_fxref = 1081, */                    /* -fxref */
  /* OPT_fzee = 1082, */                     /* -fzee */
  OPT_fzero_initialized_in_bss = 1083,       /* -fzero-initialized-in-bss */
  OPT_fzero_link = 1084,                     /* -fzero-link */
  OPT_g = 1085,                              /* -g */
  OPT_gant = 1086,                           /* -gant */
  OPT_gcoff = 1087,                          /* -gcoff */
  OPT_gdwarf = 1088,                         /* -gdwarf */
  OPT_gdwarf_ = 1089,                        /* -gdwarf- */
  OPT_gen_decls = 1090,                      /* -gen-decls */
  OPT_gfull = 1091,                          /* -gfull */
  OPT_ggdb = 1092,                           /* -ggdb */
  OPT_ggnu_pubnames = 1093,                  /* -ggnu-pubnames */
  OPT_gnat = 1094,                           /* -gnat */
  OPT_gnatO = 1095,                          /* -gnatO */
  OPT_gno_pubnames = 1096,                   /* -gno-pubnames */
  OPT_gno_record_gcc_switches = 1097,        /* -gno-record-gcc-switches */
  OPT_gno_split_dwarf = 1098,                /* -gno-split-dwarf */
  OPT_gno_strict_dwarf = 1099,               /* -gno-strict-dwarf */
  OPT_gpubnames = 1100,                      /* -gpubnames */
  OPT_grecord_gcc_switches = 1101,           /* -grecord-gcc-switches */
  OPT_gsplit_dwarf = 1102,                   /* -gsplit-dwarf */
  OPT_gstabs = 1103,                         /* -gstabs */
  OPT_gstabs_ = 1104,                        /* -gstabs+ */
  OPT_gstrict_dwarf = 1105,                  /* -gstrict-dwarf */
  OPT_gtoggle = 1106,                        /* -gtoggle */
  OPT_gused = 1107,                          /* -gused */
  OPT_gvms = 1108,                           /* -gvms */
  OPT_gxcoff = 1109,                         /* -gxcoff */
  OPT_gxcoff_ = 1110,                        /* -gxcoff+ */
  OPT_h = 1111,                              /* -h */
  OPT_headerpad_max_install_names = 1112,    /* -headerpad_max_install_names */
  OPT_idirafter = 1113,                      /* -idirafter */
  OPT_iframework = 1114,                     /* -iframework */
  OPT_imacros = 1115,                        /* -imacros */
  /* OPT_image_base = 1116, */               /* -image_base */
  OPT_imultiarch = 1117,                     /* -imultiarch */
  OPT_imultilib = 1118,                      /* -imultilib */
  OPT_include = 1119,                        /* -include */
  /* OPT_init = 1120, */                     /* -init */
  /* OPT_install_name = 1121, */             /* -install_name */
  OPT_iplugindir_ = 1122,                    /* -iplugindir= */
  OPT_iprefix = 1123,                        /* -iprefix */
  OPT_iquote = 1124,                         /* -iquote */
  OPT_isysroot = 1125,                       /* -isysroot */
  OPT_isystem = 1126,                        /* -isystem */
  OPT_iwithprefix = 1127,                    /* -iwithprefix */
  OPT_iwithprefixbefore = 1128,              /* -iwithprefixbefore */
  OPT_k8 = 1129,                             /* -k8 */
  OPT_keep_private_externs = 1130,           /* -keep_private_externs */
  OPT_l = 1131,                              /* -l */
  OPT_lang_asm = 1132,                       /* -lang-asm */
  OPT_m128bit_long_double = 1133,            /* -m128bit-long-double */
  OPT_m16 = 1134,                            /* -m16 */
  OPT_m32 = 1135,                            /* -m32 */
  OPT_m3dnow = 1136,                         /* -m3dnow */
  OPT_m3dnowa = 1137,                        /* -m3dnowa */
  OPT_m64 = 1138,                            /* -m64 */
  OPT_m80387 = 1139,                         /* -m80387 */
  OPT_m8bit_idiv = 1140,                     /* -m8bit-idiv */
  OPT_m96bit_long_double = 1141,             /* -m96bit-long-double */
  OPT_mabi_ = 1142,                          /* -mabi= */
  OPT_mabm = 1143,                           /* -mabm */
  OPT_maccumulate_outgoing_args = 1144,      /* -maccumulate-outgoing-args */
  OPT_maddress_mode_ = 1145,                 /* -maddress-mode= */
  OPT_madx = 1146,                           /* -madx */
  OPT_maes = 1147,                           /* -maes */
  OPT_malign_double = 1148,                  /* -malign-double */
  OPT_malign_functions_ = 1149,              /* -malign-functions= */
  OPT_malign_jumps_ = 1150,                  /* -malign-jumps= */
  OPT_malign_loops_ = 1151,                  /* -malign-loops= */
  OPT_malign_stringops = 1152,               /* -malign-stringops */
  OPT_march_ = 1153,                         /* -march= */
  OPT_masm_ = 1154,                          /* -masm= */
  OPT_matt_stubs = 1155,                     /* -matt-stubs */
  OPT_mavx = 1156,                           /* -mavx */
  OPT_mavx2 = 1157,                          /* -mavx2 */
  OPT_mavx256_split_unaligned_load = 1158,   /* -mavx256-split-unaligned-load */
  OPT_mavx256_split_unaligned_store = 1159,  /* -mavx256-split-unaligned-store */
  OPT_mavx512cd = 1160,                      /* -mavx512cd */
  OPT_mavx512er = 1161,                      /* -mavx512er */
  OPT_mavx512f = 1162,                       /* -mavx512f */
  OPT_mavx512pf = 1163,                      /* -mavx512pf */
  OPT_mbmi = 1164,                           /* -mbmi */
  OPT_mbmi2 = 1165,                          /* -mbmi2 */
  OPT_mbranch_cost_ = 1166,                  /* -mbranch-cost= */
  OPT_mcld = 1167,                           /* -mcld */
  OPT_mcmodel_ = 1168,                       /* -mcmodel= */
  OPT_mconstant_cfstrings = 1169,            /* -mconstant-cfstrings */
  /* OPT_mcpu_ = 1170, */                    /* -mcpu= */
  OPT_mcrc32 = 1171,                         /* -mcrc32 */
  OPT_mcx16 = 1172,                          /* -mcx16 */
  OPT_mdispatch_scheduler = 1173,            /* -mdispatch-scheduler */
  OPT_mdump_tune_features = 1174,            /* -mdump-tune-features */
  OPT_mdynamic_no_pic = 1175,                /* -mdynamic-no-pic */
  OPT_mf16c = 1176,                          /* -mf16c */
  OPT_mfancy_math_387 = 1177,                /* -mfancy-math-387 */
  OPT_mfentry = 1178,                        /* -mfentry */
  OPT_mfix_and_continue = 1179,              /* -mfix-and-continue */
  OPT_mfma = 1180,                           /* -mfma */
  OPT_mfma4 = 1181,                          /* -mfma4 */
  OPT_mforce_drap = 1182,                    /* -mforce-drap */
  OPT_mfp_ret_in_387 = 1183,                 /* -mfp-ret-in-387 */
  OPT_mfpmath_ = 1184,                       /* -mfpmath= */
  OPT_mfsgsbase = 1185,                      /* -mfsgsbase */
  /* OPT_mfused_madd = 1186, */              /* -mfused-madd */
  OPT_mfxsr = 1187,                          /* -mfxsr */
  OPT_mhard_float = 1188,                    /* -mhard-float */
  OPT_mhle = 1189,                           /* -mhle */
  OPT_mieee_fp = 1190,                       /* -mieee-fp */
  OPT_mincoming_stack_boundary_ = 1191,      /* -mincoming-stack-boundary= */
  OPT_minline_all_stringops = 1192,          /* -minline-all-stringops */
  OPT_minline_stringops_dynamically = 1193,  /* -minline-stringops-dynamically */
  /* OPT_mintel_syntax = 1194, */            /* -mintel-syntax */
  OPT_mkernel = 1195,                        /* -mkernel */
  OPT_mlarge_data_threshold_ = 1196,         /* -mlarge-data-threshold= */
  OPT_mlong_double_128 = 1197,               /* -mlong-double-128 */
  OPT_mlong_double_64 = 1198,                /* -mlong-double-64 */
  OPT_mlong_double_80 = 1199,                /* -mlong-double-80 */
  OPT_mlwp = 1200,                           /* -mlwp */
  OPT_mlzcnt = 1201,                         /* -mlzcnt */
  OPT_mmacosx_version_min_ = 1202,           /* -mmacosx-version-min= */
  OPT_mmemcpy_strategy_ = 1203,              /* -mmemcpy-strategy= */
  OPT_mmemset_strategy_ = 1204,              /* -mmemset-strategy= */
  OPT_mmmx = 1205,                           /* -mmmx */
  OPT_mmovbe = 1206,                         /* -mmovbe */
  OPT_mms_bitfields = 1207,                  /* -mms-bitfields */
  OPT_mno_align_stringops = 1208,            /* -mno-align-stringops */
  OPT_mno_default = 1209,                    /* -mno-default */
  OPT_mno_fancy_math_387 = 1210,             /* -mno-fancy-math-387 */
  OPT_mno_push_args = 1211,                  /* -mno-push-args */
  OPT_mno_red_zone = 1212,                   /* -mno-red-zone */
  OPT_mno_sse4 = 1213,                       /* -mno-sse4 */
  OPT_momit_leaf_frame_pointer = 1214,       /* -momit-leaf-frame-pointer */
  OPT_mone_byte_bool = 1215,                 /* -mone-byte-bool */
  OPT_mpc32 = 1216,                          /* -mpc32 */
  OPT_mpc64 = 1217,                          /* -mpc64 */
  OPT_mpc80 = 1218,                          /* -mpc80 */
  OPT_mpclmul = 1219,                        /* -mpclmul */
  OPT_mpopcnt = 1220,                        /* -mpopcnt */
  OPT_mprefer_avx128 = 1221,                 /* -mprefer-avx128 */
  OPT_mpreferred_stack_boundary_ = 1222,     /* -mpreferred-stack-boundary= */
  OPT_mprefetchwt1 = 1223,                   /* -mprefetchwt1 */
  OPT_mprfchw = 1224,                        /* -mprfchw */
  OPT_mpush_args = 1225,                     /* -mpush-args */
  OPT_mrdrnd = 1226,                         /* -mrdrnd */
  OPT_mrdseed = 1227,                        /* -mrdseed */
  OPT_mrecip = 1228,                         /* -mrecip */
  OPT_mrecip_ = 1229,                        /* -mrecip= */
  OPT_mred_zone = 1230,                      /* -mred-zone */
  OPT_mregparm_ = 1231,                      /* -mregparm= */
  OPT_mrtd = 1232,                           /* -mrtd */
  OPT_mrtm = 1233,                           /* -mrtm */
  OPT_msahf = 1234,                          /* -msahf */
  OPT_msha = 1235,                           /* -msha */
  OPT_msoft_float = 1236,                    /* -msoft-float */
  OPT_msse = 1237,                           /* -msse */
  OPT_msse2 = 1238,                          /* -msse2 */
  OPT_msse2avx = 1239,                       /* -msse2avx */
  OPT_msse3 = 1240,                          /* -msse3 */
  OPT_msse4 = 1241,                          /* -msse4 */
  OPT_msse4_1 = 1242,                        /* -msse4.1 */
  OPT_msse4_2 = 1243,                        /* -msse4.2 */
  OPT_msse4a = 1244,                         /* -msse4a */
  /* OPT_msse5 = 1245, */                    /* -msse5 */
  OPT_msseregparm = 1246,                    /* -msseregparm */
  OPT_mssse3 = 1247,                         /* -mssse3 */
  OPT_mstack_arg_probe = 1248,               /* -mstack-arg-probe */
  OPT_mstack_protector_guard_ = 1249,        /* -mstack-protector-guard= */
  OPT_mstackrealign = 1250,                  /* -mstackrealign */
  OPT_mstringop_strategy_ = 1251,            /* -mstringop-strategy= */
  OPT_mtbm = 1252,                           /* -mtbm */
  OPT_mtls_dialect_ = 1253,                  /* -mtls-dialect= */
  OPT_mtls_direct_seg_refs = 1254,           /* -mtls-direct-seg-refs */
  OPT_mtune_ctrl_ = 1255,                    /* -mtune-ctrl= */
  OPT_mtune_ = 1256,                         /* -mtune= */
  /* OPT_multi_module = 1257, */             /* -multi_module */
  /* OPT_multiply_defined = 1258, */         /* -multiply_defined */
  /* OPT_multiply_defined_unused = 1259, */  /* -multiply_defined_unused */
  OPT_mveclibabi_ = 1260,                    /* -mveclibabi= */
  OPT_mvect8_ret_in_mem = 1261,              /* -mvect8-ret-in-mem */
  OPT_mvzeroupper = 1262,                    /* -mvzeroupper */
  OPT_mx32 = 1263,                           /* -mx32 */
  OPT_mxop = 1264,                           /* -mxop */
  OPT_mxsave = 1265,                         /* -mxsave */
  OPT_mxsaveopt = 1266,                      /* -mxsaveopt */
  OPT_n = 1267,                              /* -n */
  OPT_no_canonical_prefixes = 1268,          /* -no-canonical-prefixes */
  OPT_no_integrated_cpp = 1269,              /* -no-integrated-cpp */
  /* OPT_no_dead_strip_inits_and_terms = 1270, *//* -no_dead_strip_inits_and_terms */
  OPT_nocpp = 1271,                          /* -nocpp */
  OPT_nodefaultlibs = 1272,                  /* -nodefaultlibs */
  OPT_nofixprebinding = 1273,                /* -nofixprebinding */
  OPT_nomultidefs = 1274,                    /* -nomultidefs */
  OPT_noprebind = 1275,                      /* -noprebind */
  OPT_noseglinkedit = 1276,                  /* -noseglinkedit */
  OPT_nostartfiles = 1277,                   /* -nostartfiles */
  OPT_nostdinc = 1278,                       /* -nostdinc */
  OPT_nostdinc__ = 1279,                     /* -nostdinc++ */
  OPT_nostdlib = 1280,                       /* -nostdlib */
  OPT_o = 1281,                              /* -o */
  OPT_object = 1282,                         /* -object */
  OPT_p = 1283,                              /* -p */
  OPT_pagezero_size = 1284,                  /* -pagezero_size */
  OPT_pass_exit_codes = 1285,                /* -pass-exit-codes */
  /* OPT_pedantic = 1286, */                 /* -pedantic */
  OPT_pedantic_errors = 1287,                /* -pedantic-errors */
  OPT_pg = 1288,                             /* -pg */
  OPT_pie = 1289,                            /* -pie */
  OPT_pipe = 1290,                           /* -pipe */
  OPT_prebind = 1291,                        /* -prebind */
  OPT_prebind_all_twolevel_modules = 1292,   /* -prebind_all_twolevel_modules */
  OPT_preload = 1293,                        /* -preload */
  OPT_print_file_name_ = 1294,               /* -print-file-name= */
  OPT_print_libgcc_file_name = 1295,         /* -print-libgcc-file-name */
  OPT_print_multi_directory = 1296,          /* -print-multi-directory */
  OPT_print_multi_lib = 1297,                /* -print-multi-lib */
  OPT_print_multi_os_directory = 1298,       /* -print-multi-os-directory */
  OPT_print_multiarch = 1299,                /* -print-multiarch */
  OPT_print_objc_runtime_info = 1300,        /* -print-objc-runtime-info */
  OPT_print_prog_name_ = 1301,               /* -print-prog-name= */
  OPT_print_search_dirs = 1302,              /* -print-search-dirs */
  OPT_print_sysroot = 1303,                  /* -print-sysroot */
  OPT_print_sysroot_headers_suffix = 1304,   /* -print-sysroot-headers-suffix */
  OPT_private_bundle = 1305,                 /* -private_bundle */
  OPT_pthread = 1306,                        /* -pthread */
  OPT_quiet = 1307,                          /* -quiet */
  OPT_r = 1308,                              /* -r */
  OPT_read_only_relocs = 1309,               /* -read_only_relocs */
  OPT_remap = 1310,                          /* -remap */
  OPT_s = 1311,                              /* -s */
  OPT_s_bc_abi = 1312,                       /* -s-bc-abi */
  OPT_save_temps = 1313,                     /* -save-temps */
  OPT_save_temps_ = 1314,                    /* -save-temps= */
  OPT_sectalign = 1315,                      /* -sectalign */
  OPT_sectcreate = 1316,                     /* -sectcreate */
  OPT_sectobjectsymbols = 1317,              /* -sectobjectsymbols */
  OPT_sectorder = 1318,                      /* -sectorder */
  OPT_seg1addr = 1319,                       /* -seg1addr */
  /* OPT_seg_addr_table = 1320, */           /* -seg_addr_table */
  /* OPT_seg_addr_table_filename = 1321, */  /* -seg_addr_table_filename */
  /* OPT_segaddr = 1322, */                  /* -segaddr */
  OPT_segcreate = 1323,                      /* -segcreate */
  OPT_seglinkedit = 1324,                    /* -seglinkedit */
  OPT_segprot = 1325,                        /* -segprot */
  /* OPT_segs_read_only_addr = 1326, */      /* -segs_read_only_addr */
  /* OPT_segs_read_write_addr = 1327, */     /* -segs_read_write_addr */
  OPT_shared = 1328,                         /* -shared */
  OPT_shared_libgcc = 1329,                  /* -shared-libgcc */
  /* OPT_single_module = 1330, */            /* -single_module */
  /* OPT_specs = 1331, */                    /* -specs */
  OPT_specs_ = 1332,                         /* -specs= */
  OPT_static = 1333,                         /* -static */
  OPT_static_libasan = 1334,                 /* -static-libasan */
  OPT_static_libgcc = 1335,                  /* -static-libgcc */
  OPT_static_libgcj = 1336,                  /* -static-libgcj */
  OPT_static_libgfortran = 1337,             /* -static-libgfortran */
  OPT_static_libgo = 1338,                   /* -static-libgo */
  OPT_static_liblsan = 1339,                 /* -static-liblsan */
  OPT_static_libstdc__ = 1340,               /* -static-libstdc++ */
  OPT_static_libtsan = 1341,                 /* -static-libtsan */
  OPT_static_libubsan = 1342,                /* -static-libubsan */
  /* OPT_std_c__03 = 1343, */                /* -std=c++03 */
  /* OPT_std_c__0x = 1344, */                /* -std=c++0x */
  OPT_std_c__11 = 1345,                      /* -std=c++11 */
  /* OPT_std_c__14 = 1346, */                /* -std=c++14 */
  OPT_std_c__1y = 1347,                      /* -std=c++1y */
  OPT_std_c__98 = 1348,                      /* -std=c++98 */
  OPT_std_c11 = 1349,                        /* -std=c11 */
  /* OPT_std_c1x = 1350, */                  /* -std=c1x */
  /* OPT_std_c89 = 1351, */                  /* -std=c89 */
  OPT_std_c90 = 1352,                        /* -std=c90 */
  OPT_std_c99 = 1353,                        /* -std=c99 */
  /* OPT_std_c9x = 1354, */                  /* -std=c9x */
  OPT_std_f2003 = 1355,                      /* -std=f2003 */
  OPT_std_f2008 = 1356,                      /* -std=f2008 */
  OPT_std_f2008ts = 1357,                    /* -std=f2008ts */
  OPT_std_f95 = 1358,                        /* -std=f95 */
  OPT_std_gnu = 1359,                        /* -std=gnu */
  /* OPT_std_gnu__03 = 1360, */              /* -std=gnu++03 */
  /* OPT_std_gnu__0x = 1361, */              /* -std=gnu++0x */
  OPT_std_gnu__11 = 1362,                    /* -std=gnu++11 */
  /* OPT_std_gnu__14 = 1363, */              /* -std=gnu++14 */
  OPT_std_gnu__1y = 1364,                    /* -std=gnu++1y */
  OPT_std_gnu__98 = 1365,                    /* -std=gnu++98 */
  OPT_std_gnu11 = 1366,                      /* -std=gnu11 */
  /* OPT_std_gnu1x = 1367, */                /* -std=gnu1x */
  /* OPT_std_gnu89 = 1368, */                /* -std=gnu89 */
  OPT_std_gnu90 = 1369,                      /* -std=gnu90 */
  OPT_std_gnu99 = 1370,                      /* -std=gnu99 */
  /* OPT_std_gnu9x = 1371, */                /* -std=gnu9x */
  /* OPT_std_iso9899_1990 = 1372, */         /* -std=iso9899:1990 */
  OPT_std_iso9899_199409 = 1373,             /* -std=iso9899:199409 */
  /* OPT_std_iso9899_1999 = 1374, */         /* -std=iso9899:1999 */
  /* OPT_std_iso9899_199x = 1375, */         /* -std=iso9899:199x */
  /* OPT_std_iso9899_2011 = 1376, */         /* -std=iso9899:2011 */
  OPT_std_legacy = 1377,                     /* -std=legacy */
  OPT_sub_library = 1378,                    /* -sub_library */
  OPT_sub_umbrella = 1379,                   /* -sub_umbrella */
  OPT_symbolic = 1380,                       /* -symbolic */
  OPT_t = 1381,                              /* -t */
  OPT_time = 1382,                           /* -time */
  OPT_time_ = 1383,                          /* -time= */
  OPT_traditional = 1384,                    /* -traditional */
  OPT_traditional_cpp = 1385,                /* -traditional-cpp */
  OPT_trigraphs = 1386,                      /* -trigraphs */
  OPT_twolevel_namespace = 1387,             /* -twolevel_namespace */
  OPT_twolevel_namespace_hints = 1388,       /* -twolevel_namespace_hints */
  OPT_u = 1389,                              /* -u */
  /* OPT_umbrella = 1390, */                 /* -umbrella */
  OPT_undef = 1391,                          /* -undef */
  OPT_undefined = 1392,                      /* -undefined */
  /* OPT_unexported_symbols_list = 1393, */  /* -unexported_symbols_list */
  OPT_v = 1394,                              /* -v */
  OPT_version = 1395,                        /* -version */
  OPT_w = 1396,                              /* -w */
  /* OPT_weak_reference_mismatches = 1397, *//* -weak_reference_mismatches */
  OPT_whatsloaded = 1398,                    /* -whatsloaded */
  OPT_whyload = 1399,                        /* -whyload */
  OPT_wrapper = 1400,                        /* -wrapper */
  OPT_x = 1401,                              /* -x */
  OPT_y = 1402,                              /* -y */
  OPT_z = 1403,                              /* -z */
  N_OPTS,
  OPT_SPECIAL_unknown,
  OPT_SPECIAL_ignore,
  OPT_SPECIAL_program_name,
  OPT_SPECIAL_input_file
};

#endif /* OPTIONS_H */
