/*****************************************************************************
*
* McStas, neutron ray-tracing package
*         Copyright 1997-2006, All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
*
* Component: Set_pol
*
* %I
* Written by: Erik Knudsen
* Date: June 2010
* Version: $Revision: 1.2 $
* Origin: Risoe
* Release: McStas 2.0
*
* (Unphysical) ideal analyzer.
*
* %D 
*
*
* Example: Analyser_ideal(mx=0, my=1, mz=0)
*
* %P
* INPUT PARAMETERS:
*
* mx:        X-component of polarisation analysis vector (can be negative) (1)
* my:        Y-component of polarisation analysis  vector (can be negative) (1)
* mz:        Z-component of polarisation analysis  vector (can be negative) (1)
*
* OUTPUT PARAMETERS:
*
* %E
*******************************************************************************/

  DEFINE COMPONENT Analyser_ideal
DEFINITION PARAMETERS ()
  SETTING PARAMETERS (mx=0, my=0, mz=0)

DECLARE
%{
  %}

INITIALIZE
%{
  if (mx==1 && my==1 && mz==1) {
    printf("Analyser_ideal: %s: NULL vector defined!\n"
	   "ERROR      (px, py, pz). Exiting",
           NAME_CURRENT_COMP);
    exit(1);
  }
  
  if ((mx*mx + my*my + mz*mz) > 1) {
    printf("Set_pol: %s: Polarisation analysis vector (mx, my, mz) is unphysical!\n"
	   "ERROR  mx*mx + my*my + mz*mz > 1. Exiting....",
           NAME_CURRENT_COMP);
    exit(1);
  }
  
  NORM(mx,my,mz);
%}

TRACE
%{
  double prob_up;
  /*the probablilty for having spin "up" along the quantization driection m*/
  prob_up=(1+scalar_prod(sx,sy,sz,mx,my,mx))/2.0;
  /*adjust weight accordingly (i.e. monte carlo choice with prob. 1)*/
  p*=prob_up;
  sx=mx;sy=my;sz=mz;
  SCATTER;
%}

MCDISPLAY
%{
  /* A bit ugly; hard-coded dimensions. */
  magnify("xy");
  line(0,0,0,0.2,0,0);
  line(0,0,0,0,0.2,0);
  line(0,0,0,0,0,0.2);

  line(0,0,0,0.2*mx,0.2*my,0.2*mz);
  /*draw the arrowhead*/
  double cos2=cos(2*DEG2RAD);
  double sin2=sin(2*DEG2RAD);
  multiline(4,0.18*(mx*cos2+my*sin2),0.18*(-mx*sin2+my*cos2),0.18*mz,
      0.18*(mx*cos2+mz*sin2),0.18*my,0.18*(-mx*sin2+mz*cos2),
      0.18*mx,0.18*(my*cos2+mz*sin2),0.18*(-my*sin2+mz*cos2),
      0.18*(mx*cos2+my*sin2),0.18*(-mx*sin2+my*cos2),0.18*mz);

  line(0.2*mx,0.2*my,0.2*mz,0.18*(mx*cos2+my*sin2),0.18*(-mx*sin2+my*cos2),0.18*mx);
  line(0.2*mx,0.2*my,0.2*mz,0.18*(mx*cos2+mz*sin2),0.18*my,0.18*(-mx*sin2+mz*cos2));
  line(0.2*mx,0.2*my,0.2*mz,0.18*mx,0.18*(my*cos2+mz*sin2),0.18*(-my*sin2+mz*cos2));
%}

END
