/*******************************************************************************
*
* McStas, neutron ray-tracing package
*         Copyright 1997-2002, All rights reserved
*         Risoe National Laboratory, Roskilde, Denmark
*         Institut Laue Langevin, Grenoble, France
*
* %I
* Written by:  Kim Lefmann, Peter Willendrup, Linda Udby
* Date: May 7, 2001
* Origin: Risoe
*
* Rectangular 1D PSD, measuring intensity vs. horizontal position, x
* A second monitor shows the difference of intensities between in n'th and (n-1)'th pixels.
* %D
*
* Example: PSDlin_diff_monitor(nx=20, filename="Output.x",
*          xmin=-0.1, xmax=0.1, ymin=-0.1, ymax=0.1)
*
* %P
* INPUT PARAMETERS:
*
* xmin: [m]             Lower x bound of detector opening 
* xmax: [m]             Upper x bound of detector opening 
* ymin: [m]             Lower y bound of detector opening 
* ymax: [m]             Upper y bound of detector opening 
* xwidth: [m]           Width of detector. Overrides xmin,xmax. 
* yheight: [m]          Height of detector. Overrides ymin,ymax. 
* nx: [1]               Number of x bins 
* filename: [string]    Name of file in which to store the detector image 
* restore_neutron: [1]  If set, the monitor does not influence the neutron state 
* nowritefile: [1]      If set, monitor will skip writing to disk
*
* OUTPUT PARAMETERS:
*
* PSDlin_diff_N:    Array of neutron counts
* PSDlin_diff_p:    Array of neutron weight counts
* PSDlin_diff_p2:   Array of second moments
*
* %E
******************************************************************************/

DEFINE COMPONENT PSDlin_diff_monitor
DEFINITION PARAMETERS (nx=20)
SETTING PARAMETERS (string filename=0, xmin=-0.05, xmax=0.05, ymin=-0.05, ymax=0.05, 
    xwidth=0, yheight=0, restore_neutron=0, int nowritefile=0)
OUTPUT PARAMETERS (PSDlin_N, PSDlin_p, PSDlin_p2, PSDdiff_N, PSDdiff_p, PSDdiff_p2)
/* Neutron parameters: (x,y,z,vx,vy,vz,t,sx,sy,sz,p) */ 
DECLARE
  %{
    double PSDlin_N[nx];
    double PSDlin_p[nx];
    double PSDlin_p2[nx];
    double PSDdiff_N[nx-1];
    double PSDdiff_p[nx-1];
    double PSDdiff_p2[nx-1];
    int i;
    char difilename[128];
  %}
INITIALIZE
  %{    
    if (xwidth  > 0) { xmax = xwidth/2;  xmin = -xmax; }
    if (yheight > 0) { ymax = yheight/2; ymin = -ymax; }

    if ((xmin >= xmax) || (ymin >= ymax)) {
            printf("PSDlin_monitor: %s: Null detection area !\n"
                   "ERROR           (xwidth,yheight,xmin,xmax,ymin,ymax). Exiting",
           NAME_CURRENT_COMP);
      exit(-1);
    }

    for (i=0; i<nx; i++)
    {
      PSDlin_N[i] = 0;
      PSDlin_p[i] = 0;
      PSDlin_p2[i] = 0;
    }
    sprintf(difilename,"%s_diff",filename);
  %}
TRACE
  %{
    int i;

    PROP_Z0;
    if (x>xmin && x<xmax && y>ymin && y<ymax)
    {
      i = floor(nx*(x-xmin)/(xmax-xmin));              /* Bin number */
      PSDlin_N[i]++;
      PSDlin_p[i] += p;
      PSDlin_p2[i] += p*p;
    } 
    if (restore_neutron) {
      RESTORE_NEUTRON(INDEX_CURRENT_COMP, x, y, z, vx, vy, vz, t, sx, sy, sz, p);
    }
  %}
SAVE
  %{
    if (!nowritefile) {
  double mean;
  for (i=0; i<nx-1; i++) {
    PSDdiff_N[i] = PSDlin_N[i]+PSDlin_N[i+1];
    PSDdiff_p[i] = fabs(PSDlin_p[i+1]-PSDlin_p[i]);
    PSDdiff_p2[i] = (PSDlin_p2[i+1]+PSDlin_p2[i])/2;
    mean +=PSDdiff_p[i];
  }
  mean /= nx-1;
  for (i=0; i<nx-1; i++) {
    if (PSDdiff_p[i] < mean) {
      PSDdiff_p[i]=0;
      PSDdiff_p2[i]=0;
    }    }
    
  }
  DETECTOR_OUT_1D(
		  "Linear PSD monitor",
		  "x-Position [m]",
		  "Intensity",
		  "x", xmin, xmax, nx,
		  &PSDlin_N[0],&PSDlin_p[0],&PSDlin_p2[0],
		  filename);
  DETECTOR_OUT_1D(
  		  "Linear PSD monitor difference",
  		  "x-Position, difference [m]",
  		  "Intensity difference",
  		  "x", xmin, xmax, nx-1,
  		  &PSDdiff_N[0],&PSDdiff_p[0],&PSDdiff_p2[0],
  		  difilename);
    }
  %}

MCDISPLAY
%{
  
  multiline(5, (double)xmin, (double)ymin, 0.0,
               (double)xmax, (double)ymin, 0.0,
               (double)xmax, (double)ymax, 0.0,
               (double)xmin, (double)ymax, 0.0,
               (double)xmin, (double)ymin, 0.0);
%}

END



